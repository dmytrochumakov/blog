[{"content":"The Problem Given the root of a binary tree, determine if it is a valid binary search tree (BST).\nA valid BST is defined as follows:\nThe left subtree of a node contains only nodes with keys less than the node\u0026rsquo;s key. The right subtree of a node contains only nodes with keys greater than the node\u0026rsquo;s key. Both the left and right subtrees must also be binary search trees. A subtree of treeName is a tree consisting of a node in treeName and all of its descendants.\nExamples Input: root = [2,1,3] Output: true Input: root = [5,1,4,null,null,3,6] Output: false Explanation: The root node\u0026#39;s value is 5, but its right child\u0026#39;s value is 4. Constraints The number of nodes in the tree is in the range [1, 10‚Å¥]. -2¬≥¬π \u0026lt;= Node.val \u0026lt;= 2¬≥¬π - 1 Depth-First Search Solution func isValidBST(_ root: TreeNode?) -\u0026gt; Bool { func valid(_ node: TreeNode?, _ left: Int, _ right: Int) -\u0026gt; Bool { if node == nil { return true } if !(node!.val \u0026lt; right \u0026amp;\u0026amp; node!.val \u0026gt; left) { return false } return (valid(node!.left, left, node!.val) \u0026amp;\u0026amp; valid(node!.right, node!.val, right)) } return valid(root, Int.min, Int.max) } Explanation One of the ways to solve this problem is by using the DFS algorithm. The DFS algorithm allows us to retrieve the left and right subtree node values and determine if the root node is a valid BST.\nTo do this, we need to check a few base cases:\nIf the node is nil, this means it is a valid node. If the condition (node!.val \u0026lt; right \u0026amp;\u0026amp; node!.val \u0026gt; left) is false, this means it is an invalid BST. You can see that in the valid method, we have left and right parameters. We use them as boundaries for our verification condition.\nFor example, with root = [2,1,3]:\nWe start with left = Int.min and right = Int.max, so our condition Int.min \u0026lt; 2 \u0026lt; Int.max is true. Next, we move to the left subtree with value 1. Now, our condition looks like this: Int.min \u0026lt; 1 \u0026lt; 2, which is also true. Finally, we look at the right subtree with value 3, and the condition 2 \u0026lt; 3 \u0026lt; Int.max is also true. Time/Space Complexity Time complexity: O(n) Space complexity: O(n) Breadth-First Search Solution func isValidBST(_ root: TreeNode?) -\u0026gt; Bool { if root == nil { return true } var queue = [(root, Int.min, Int.max)] while !queue.isEmpty { let (node, left, right) = queue.removeFirst() if !(node!.val \u0026lt; right \u0026amp;\u0026amp; node!.val \u0026gt; left) { return false } if node?.left != nil { queue.append((node!.left, left, node!.val)) } if node?.right != nil { queue.append((node!.right, node!.val, right)) } } return true } Explanation We can solve this problem in another way by using the BFS algorithm. The BFS algorithm allows us to move level by level and determine the node, left, and right values.\nThe condition for validation remains the same.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(n) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-validate-binary-search-tree/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven the \u003ccode\u003eroot\u003c/code\u003e of a binary tree, determine if it is a valid binary search tree (BST).\u003c/p\u003e\n\u003cp\u003eA \u003cstrong\u003evalid BST\u003c/strong\u003e is defined as follows:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe left subtree of a node contains only nodes with keys \u003cstrong\u003eless than\u003c/strong\u003e the node\u0026rsquo;s key.\u003c/li\u003e\n\u003cli\u003eThe right subtree of a node contains only nodes with keys \u003cstrong\u003egreater than\u003c/strong\u003e the node\u0026rsquo;s key.\u003c/li\u003e\n\u003cli\u003eBoth the left and right subtrees must also be binary search trees.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA \u003cstrong\u003esubtree\u003c/strong\u003e of \u003ccode\u003etreeName\u003c/code\u003e is a tree consisting of a node in \u003ccode\u003etreeName\u003c/code\u003e and all of its descendants.\u003c/p\u003e","title":"LeetCode - Blind 75 - Validate Binary Search Tree"},{"content":"The Problem Given the root of a binary tree, return the level order traversal of its nodes\u0026rsquo; values (i.e., from left to right, level by level).\nExamples Input: root = [3,9,20,null,null,15,7] Output: [[3],[9,20],[15,7]] Input: root = [1] Output: [[1]] Input: root = [] Output: [] Constraints The number of nodes in the tree is in the range [0, 2000]. -1000 \u0026lt;= Node.val \u0026lt;= 1000 BFS Solution func levelOrder(_ root: TreeNode?) -\u0026gt; [[Int]] { if root == nil { return [] } var queue: [TreeNode?] = [] queue.append(root) var res: [[Int]] = [] while !queue.isEmpty { var level: [Int] = [] for _ in 0 ..\u0026lt; queue.count { let node = queue.removeFirst() if let node = node { level.append(node.val) queue.append(node.left) queue.append(node.right) } } if !level.isEmpty { res.append(level) } } return res } Explanation When you see that a binary tree problem involves level order traversal, it means the solution usually implies the breadth-first search (BFS) algorithm. BFS is a common solution to this problem because, according to Wikipedia, breadth-first search is also called ‚Äúlevel-order search.‚Äù The core idea behind BFS is to iterate level by level from top to bottom, and from left to right.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(n) DFS Solution func levelOrder(_ root: TreeNode?) -\u0026gt; [[Int]] { var res: [[Int]] = [] func dfs(_ node: TreeNode?, _ depth: Int) { guard let node = node else { return } if res.count == depth { res.append([]) } res[depth].append(node.val) dfs(node.left, depth + 1) dfs(node.right, depth + 1) } dfs(root, 0) return res } Explanation You can also solve this problem by using the depth-first search (DFS) algorithm. In this case, you will need to visit the left and right subtrees separately and count the depth accordingly.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(n) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-binary-tree-level-order-traversal/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven the \u003ccode\u003eroot\u003c/code\u003e of a binary tree, return the level order traversal of its nodes\u0026rsquo; values (i.e., from left to right, level by level).\u003c/p\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-98f10\" hidden\u003e\n    \u003clabel for=\"zoomCheck-98f10\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/tree1.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: root = [3,9,20,null,null,15,7]\nOutput: [[3],[9,20],[15,7]]\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: root = [1]\nOutput: [[1]]\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: root = []\nOutput: []\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eThe number of nodes in the tree is in the range [0, 2000].\u003c/li\u003e\n\u003cli\u003e-1000 \u0026lt;= Node.val \u0026lt;= 1000\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"bfs-solution\"\u003eBFS Solution\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003elevelOrder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTreeNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eroot\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eTreeNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003eisEmpty\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003elevel\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003ecount\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003enode\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eremoveFirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003enode\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003elevel\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003elevel\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003eisEmpty\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elevel\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eres\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"explanation\"\u003eExplanation\u003c/h4\u003e\n\u003cp\u003eWhen you see that a binary tree problem involves level order traversal, it means the solution usually implies the breadth-first search (BFS) algorithm. BFS is a common solution to this problem because, according to Wikipedia, breadth-first search is also called ‚Äúlevel-order search.‚Äù The core idea behind BFS is to iterate level by level from top to bottom, and from left to right.\u003c/p\u003e","title":"LeetCode - Blind 75 - Binary Tree Level Order Traversal"},{"content":"The Problem Given a binary search tree (BST), find the lowest common ancestor (LCA) node of two given nodes in the BST.\nAccording to the definition of LCA on Wikipedia: ‚ÄúThe lowest common ancestor is defined between two nodes¬†p¬†and¬†q¬†as the lowest node in¬†T¬†that has both¬†p¬†and¬†q¬†as descendants (where we allow¬†a node to be a descendant of itself).‚Äù\nExamples Input: root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 8 Output: 6 Explanation: The LCA of nodes 2 and 8 is 6. Input: root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 4 Output: 2 Explanation: The LCA of nodes 2 and 4 is 2, since a node can be a descendant of itself according to the LCA definition. Input: root = [2,1], p = 2, q = 1 Output: 2 Constraints The number of nodes in the tree is in the range¬†[2, 10‚Åµ]. -10‚Åπ \u0026lt;= Node.val \u0026lt;= 10‚Åπ All¬†Node.val¬†are¬†unique. p != q p¬†and¬†q¬†will exist in the BST. Recursive Solution func lowestCommonAncestor(_ root: TreeNode?, _ p: TreeNode?, _ q: TreeNode?) -\u0026gt; TreeNode? { if root == nil || p == nil || q == nil { return nil } if (max(p!.val, q!.val)) \u0026lt; root!.val { return lowestCommonAncestor(root?.left, p, q) } else if (min(p!.val, q!.val)) \u0026gt; root!.val { return lowestCommonAncestor(root?.right, p, q) } else { return root } } Explanation If we slightly rephrase the definition of the problem: we need to find the split where both p and q nodes are in different subtrees.\nTo do that, we need to determine in which subtree we can find the p or q nodes.\nFor example, for nodes with p = 2, q = 8, the LCA will be 6.\nTime/Space Complexity Time complexity: O(h) Space complexity: O(h)\nWhere h is the height of the tree. Iterative Solution func lowestCommonAncestor(_ root: TreeNode?, _ p: TreeNode?, _ q: TreeNode?) -\u0026gt; TreeNode? { var curr = root if p == nil { return nil } if q == nil { return nil } while curr != nil { if p!.val \u0026lt; curr!.val \u0026amp;\u0026amp; q!.val \u0026lt; curr!.val { curr = curr?.left } else if p!.val \u0026gt; curr!.val \u0026amp;\u0026amp; q!.val \u0026gt; curr!.val { curr = curr?.right } else { return curr } } return root } Explanation We can solve this problem using iteration. This solution is more memory-efficient because you don‚Äôt have recursive stack calls that take additional memory.\nThe algorithm looks like this:\nCompare p and q values with the curr value. If they are less than curr, move to the left subtree. If they are greater than curr, move to the right subtree. If one is less and the other is greater (or either equals curr), we‚Äôve found the LCA. Time/Space Complexity Time complexity: O(h) - where h is the height of the tree Space complexity: O(1) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-lowest-common-ancestor-of-a-binary-search-tree/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven a binary search tree (BST), find the lowest common ancestor (LCA) node of two given nodes in the BST.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAccording to the definition of LCA on Wikipedia: ‚ÄúThe lowest common ancestor is defined between two nodes¬†\u003ccode\u003ep\u003c/code\u003e¬†and¬†\u003ccode\u003eq\u003c/code\u003e¬†as the lowest node in¬†\u003ccode\u003eT\u003c/code\u003e¬†that has both¬†\u003ccode\u003ep\u003c/code\u003e¬†and¬†\u003ccode\u003eq\u003c/code\u003e¬†as descendants (where we allow¬†a node to be a descendant of itself).‚Äù\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-09a14\" hidden\u003e\n    \u003clabel for=\"zoomCheck-09a14\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/binarysearchtree_improved.png#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e","title":"LeetCode - Blind 75 - Lowest Common Ancestor of a Binary Search Tree"},{"content":"The Problem Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values as subRoot, and false otherwise.\nA subtree of a binary tree tree is a tree that consists of a node in tree and all of this node\u0026rsquo;s descendants. The tree tree could also be considered as a subtree of itself.\nExamples Input: root = [3,4,5,1,2], subRoot = [4,1,2] Output: true Input: root = [3,4,5,1,2,null,null,null,null,0], subRoot = [4,1,2] Output: false Constraints The number of nodes in the root tree is in the range [1, 2000]. The number of nodes in the subRoot tree is in the range [1, 1000]. -10‚Å¥ \u0026lt;= root.val \u0026lt;= 10‚Å¥ -10‚Å¥ \u0026lt;= subRoot.val \u0026lt;= 10‚Å¥ Depth-First Search Solution func isSubtree(_ root: TreeNode?, _ subRoot: TreeNode?) -\u0026gt; Bool { if subRoot == nil { return true } if root == nil { return false } if isEqual(root, subRoot) { return true } return isSubtree(root?.left, subRoot) || isSubtree(root?.right, subRoot) } func isEqual(_ root: TreeNode?, _ subRoot: TreeNode?) -\u0026gt; Bool { if root == nil \u0026amp;\u0026amp; subRoot == nil { return true } if root != nil \u0026amp;\u0026amp; subRoot != nil \u0026amp;\u0026amp; root?.val == subRoot?.val { return isEqual(root?.left, subRoot?.left) \u0026amp;\u0026amp; isEqual(root?.right, subRoot?.right) } return false } Explanation One way to solve this problem is by using the Depth-First Search (DFS) algorithm. Before that, we need to implement the isEqual helper function, which checks if the root and subRoot nodes are the same. We also handle a few base cases. As a result, we can determine if the subtree exists.\nTime/Space Complexity Time complexity: O(m * n) Space complexity: O(m + n)\nWhere m is the number of nodes in subRoot and n is the number of nodes in root. Breadth-First Search Solution func isSubtree(_ root: TreeNode?, _ subRoot: TreeNode?) -\u0026gt; Bool { var q: [TreeNode?] = [root] while !q.isEmpty { let node = q.removeFirst() if isEqual(node, subRoot) { return true } if node?.left != nil { q.append(node?.left) } if node?.right != nil { q.append(node?.right) } } return false } func isEqual(_ root: TreeNode?, _ subRoot: TreeNode?) -\u0026gt; Bool { var q1: [TreeNode?] = [root] var q2: [TreeNode?] = [subRoot] while !q1.isEmpty \u0026amp;\u0026amp; !q2.isEmpty { let nodeP = q1.removeFirst() let nodeQ = q2.removeFirst() if nodeP == nil \u0026amp;\u0026amp; nodeQ == nil { continue } if nodeP == nil || nodeQ == nil || nodeP?.val != nodeQ?.val { return false } q1.append(nodeP?.left) q1.append(nodeP?.right) q2.append(nodeQ?.left) q2.append(nodeQ?.right) } return q1.isEmpty \u0026amp;\u0026amp; q2.isEmpty } Explanation Another way to solve this problem is by using the Breadth-First Search (BFS) algorithm. It differs slightly from DFS because it is based on the queue data structure, uses iteration instead of recursion, and processes the tree level by level.\nTime/Space Complexity Time complexity: O(m * n) Space complexity: O(m + n)\nWhere m is the number of nodes in subRoot and n is the number of nodes in root. Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-subtree-of-another-tree/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven the roots of two binary trees \u003ccode\u003eroot\u003c/code\u003e and \u003ccode\u003esubRoot\u003c/code\u003e, return \u003ccode\u003etrue\u003c/code\u003e if there is a subtree of \u003ccode\u003eroot\u003c/code\u003e with the same structure and node values as \u003ccode\u003esubRoot\u003c/code\u003e, and \u003ccode\u003efalse\u003c/code\u003e otherwise.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA subtree of a binary tree \u003ccode\u003etree\u003c/code\u003e is a tree that consists of a node in \u003ccode\u003etree\u003c/code\u003e and all of this node\u0026rsquo;s descendants. The tree \u003ccode\u003etree\u003c/code\u003e could also be considered as a subtree of itself.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-26d95\" hidden\u003e\n    \u003clabel for=\"zoomCheck-26d95\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/subtree1-tree.jpg#center\" alt=\"Example 1\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e","title":"LeetCode - Blind 75 - Subtree of Another Tree"},{"content":"The Problem Given the roots of two binary trees p and q, write a function to check if they are the same or not.\nTwo binary trees are considered the same if they are structurally identical, and the nodes have the same values.\nExamples Input: p = [1,2,3], q = [1,2,3] Output: true Input: p = [1,2], q = [1,null,2] Output: false Input: p = [1,2,1], q = [1,1,2] Output: false Constraints The number of nodes in both trees is in the range [0, 100]. -10‚Å¥ \u0026lt;= Node.val \u0026lt;= 10‚Å¥ Depth First Search Solution func isSameTree(_ p: TreeNode?, _ q: TreeNode?) -\u0026gt; Bool { if p == nil \u0026amp;\u0026amp; q == nil { return true } if p == nil || q == nil { return false } if p?.val != q?.val { return false } return isSameTree(p?.left, q?.left) \u0026amp;\u0026amp; isSameTree(p?.right, q?.right) } Explanation One way to solve this problem is using depth-first search. We need to be very cautious with base cases, as they can affect the result. In our case, the trees can be the same if p and q are both nil and their values are equal. In all other cases, the trees are not the same.\nIf you have never implemented the DFS algorithm before, you can refer to this Wiki example.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(h), where h is the height of the tree Breadth First Search Solution func isSameTree(_ p: TreeNode?, _ q: TreeNode?) -\u0026gt; Bool { var q1: [TreeNode?] = [p] var q2: [TreeNode?] = [q] while !q1.isEmpty \u0026amp;\u0026amp; !q2.isEmpty { let nodeP = q1.removeFirst() let nodeQ = q2.removeFirst() if nodeP == nil \u0026amp;\u0026amp; nodeQ == nil { continue } if nodeP == nil || nodeQ == nil || nodeP?.val != nodeQ?.val { return false } q1.append(nodeP?.left) q1.append(nodeP?.right) q2.append(nodeQ?.left) q2.append(nodeQ?.right) } return q1.isEmpty \u0026amp;\u0026amp; q2.isEmpty } Explanation Another way to solve this problem is by using the breadth-first search algorithm. In this case, we use two queues and a few additional checks to determine the equality of the trees. Trees can be the same if p and q are both nil and their values are equal. In all other cases, the trees are not the same.\nIf you have never implemented the BFS algorithm before, you can refer to this Wiki example.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(n) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-same-tree/","summary":"\u003ch4 id=\"the-problem\"\u003eThe Problem\u003c/h4\u003e\n\u003cp\u003eGiven the roots of two binary trees \u003ccode\u003ep\u003c/code\u003e and \u003ccode\u003eq\u003c/code\u003e, write a function to check if they are the same or not.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTwo binary trees are considered the same if they are structurally identical, and the nodes have the same values.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-55033\" hidden\u003e\n    \u003clabel for=\"zoomCheck-55033\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/ex1.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: p = [1,2,3], q = [1,2,3]\nOutput: true\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-17e6e\" hidden\u003e\n    \u003clabel for=\"zoomCheck-17e6e\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/ex2.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: p = [1,2], q = [1,null,2]\nOutput: false\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-1471d\" hidden\u003e\n    \u003clabel for=\"zoomCheck-1471d\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/ex3.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e","title":"LeetCode - Blind 75 - Same Tree"},{"content":"The Problem Given the root of a binary tree, return its maximum depth.\nA binary tree\u0026rsquo;s maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.\nExamples Input: root = [3,9,20,null,null,15,7] Output: 3 Input: root = [1,null,2] Output: 2 Constraints The number of nodes in the tree is in the range [0, 10‚Å¥]. -100 \u0026lt;= Node.val \u0026lt;= 100 Brute Force Solution func maxDepth(_ root: TreeNode?) -\u0026gt; Int { if root == nil { return 0 } return 1 + max(maxDepth(root?.left), maxDepth(root?.right)) } Explanation We can solve this problem using recursion by calling the maxDepth function on the left and right child nodes. This approach helps us find the longest path down the tree.\nTime/Space Complexity Time Complexity: O(n), where n is the number of nodes in the tree. Space Complexity: O(h), where h is the height of the tree. BFS Solution func maxDepth(_ root: TreeNode?) -\u0026gt; Int { if root == nil { return 0 } var q: [TreeNode?] = [root] var level = 0 while !q.isEmpty { for _ in 0 ..\u0026lt; q.count { let node = q.removeFirst() if node?.left != nil { q.append(node?.left) } if node?.right != nil { q.append(node?.right) } } level += 1 } return level } Explanation We can solve this problem using the BFS algorithm by counting the levels of the tree. If you\u0026rsquo;ve never implemented BFS before, you can check the pseudocode section on Wikipedia to learn more about it.\nTime/Space Complexity Time Complexity: O(n) Space Complexity: O(n) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-maximum-depth-of-binary-tree/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven the \u003ccode\u003eroot\u003c/code\u003e of a binary tree, return its maximum depth.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA binary tree\u0026rsquo;s \u003cstrong\u003emaximum depth\u003c/strong\u003e is the number of nodes along the longest path from the root node down to the farthest leaf node.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-83548\" hidden\u003e\n    \u003clabel for=\"zoomCheck-83548\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/tmp-tree.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eInput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eroot\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e15\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eOutput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eInput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eroot\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eOutput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eThe number of nodes in the tree is in the range \u003ccode\u003e[0, 10‚Å¥]\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-100 \u0026lt;= Node.val \u0026lt;= 100\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"brute-force-solution\"\u003eBrute Force Solution\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emaxDepth\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTreeNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eroot\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"bp\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emaxDepth\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003emaxDepth\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"explanation\"\u003eExplanation\u003c/h4\u003e\n\u003cp\u003eWe can solve this problem using recursion by calling the \u003ccode\u003emaxDepth\u003c/code\u003e function on the \u003ccode\u003eleft\u003c/code\u003e and \u003ccode\u003eright\u003c/code\u003e child nodes. This approach helps us find the longest path down the tree.\u003c/p\u003e","title":"LeetCode - Blind 75 - Maximum Depth of Binary Tree"},{"content":"The Problem Given the root of a binary tree, invert the tree, and return its root.\nExamples Input: root = [4,2,7,1,3,6,9] Output: [4,7,2,9,6,3,1] Input: root = [2,1,3] Output: [2,3,1] Input: root = [] Output: [] Constraints The number of nodes in the tree is in the range [0, 100]. -100 \u0026lt;= Node.val \u0026lt;= 100 Depth First Search Solution func invertTree(_ root: TreeNode?) -\u0026gt; TreeNode? { if root == nil { return nil } let tmp = root?.left root?.left = root?.right root?.right = tmp invertTree(root?.left) invertTree(root?.right) return root } Explanation When working with trees, we often consider two general ways to solve these problems: depth-first search (DFS) and breadth-first search (BFS).\nIn this case, we use the DFS algorithm, where we swap the left subtree with the right subtree and recursively call invertTree on the left and right nodes.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(n) Breadth First Search Solution func invertTree(_ root: TreeNode?) -\u0026gt; TreeNode? { if root == nil { return nil } var q: [TreeNode?] = [root] while !q.isEmpty { let node = q.removeFirst() let tmp = node?.left node?.left = node?.right node?.right = tmp if node?.left != nil { q.append(node?.left) } if node?.right != nil { q.append(node?.right) } } return root } Explanation To solve this problem using BFS, we initialize a queue and traverse the tree level by level, swapping the left and right subtrees until the queue is empty.\nWe also update the queue by adding the left or right nodes if they exist.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(n) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-invert-binary-tree/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven the \u003ccode\u003eroot\u003c/code\u003e of a binary tree, invert the tree, and return its root.\u003c/p\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-9fcfe\" hidden\u003e\n    \u003clabel for=\"zoomCheck-9fcfe\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/invert1-tree.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: root = [4,2,7,1,3,6,9]\nOutput: [4,7,2,9,6,3,1]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-021ab\" hidden\u003e\n    \u003clabel for=\"zoomCheck-021ab\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/invert2-tree.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: root = [2,1,3]\nOutput: [2,3,1]\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: root = []\nOutput: []\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eThe number of nodes in the tree is in the range [0, 100].\u003c/li\u003e\n\u003cli\u003e-100 \u0026lt;= Node.val \u0026lt;= 100\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"depth-first-search-solution\"\u003eDepth First Search Solution\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003einvertTree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTreeNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eTreeNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eroot\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003etmp\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003einvertTree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003einvertTree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eroot\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"explanation\"\u003eExplanation\u003c/h4\u003e\n\u003cp\u003eWhen working with trees, we often consider two general ways to solve these problems: depth-first search (DFS) and breadth-first search (BFS).\u003cbr\u003e\nIn this case, we use the DFS algorithm, where we swap the \u003ccode\u003eleft\u003c/code\u003e subtree with the \u003ccode\u003eright\u003c/code\u003e subtree and recursively call \u003ccode\u003einvertTree\u003c/code\u003e on the \u003ccode\u003eleft\u003c/code\u003e and \u003ccode\u003eright\u003c/code\u003e nodes.\u003c/p\u003e","title":"LeetCode - Blind 75 - Invert Binary Tree"},{"content":"The problem You are given an array of k linked lists lists, each linked list is sorted in ascending order.\nMerge all the linked lists into one sorted linked list and return it.\nExamples Input: lists = [[1,4,5],[1,3,4],[2,6]] Output: [1,1,2,3,4,4,5,6] Explanation: The linked lists are: [ 1-\u0026gt;4-\u0026gt;5, 1-\u0026gt;3-\u0026gt;4, 2-\u0026gt;6 ] merging them into one sorted list: 1-\u0026gt;1-\u0026gt;2-\u0026gt;3-\u0026gt;4-\u0026gt;4-\u0026gt;5-\u0026gt;6 Input: lists = [] Output: [] Input: lists = [[]] Output: [] Constraints k == lists.length 0 \u0026lt;= k \u0026lt;= 10^4 0 \u0026lt;= lists[i].length \u0026lt;= 500 -10^4 \u0026lt;= lists[i][j] \u0026lt;= 10^4 lists[i] is sorted in ascending order. The sum of lists[i].length will not exceed 10^4. Brute Force Solution func mergeKLists(_ lists: [ListNode?]) -\u0026gt; ListNode? { var nodes: [Int] = [] // Step 1 for i in 0..\u0026lt;lists.count { var lst = lists[i] while lst != nil { nodes.append(lst!.val) lst = lst?.next } } // Step 2 nodes.sort() // Step 3 var res = ListNode(0) var curr: ListNode? = res for node in nodes { curr?.next = ListNode(node) curr = curr?.next } return res.next } Explanation We can solve this problem by separating it into three steps:\nFind all node values in the lists: This way, we can create an unsorted single list. Sort the created list: This allows us to form a sorted linked list. Create a sorted linked list from the sorted values. Time/Space Complexity Time complexity: O(n * m) where n is the length of lists and m is the length of the linked lists. Space complexity: O(n). Solution 2 func mergeKLists(_ lists: [ListNode?]) -\u0026gt; ListNode? { if lists.isEmpty { return nil } var lists = lists while lists.count \u0026gt; 1 { var mergedLists: [ListNode?] = [] for i in stride(from: 0, to: lists.count, by: 2) { var l1 = lists[i] var l2: ListNode? if i + 1 \u0026lt; lists.count { l2 = lists[i + 1] } mergedLists.append(merge(l1, l2)) } lists = mergedLists } return lists[0] } func merge(_ l1: ListNode?, _ l2: ListNode?) -\u0026gt; ListNode? { let dummyNode = ListNode() var l1 = l1 var l2 = l2 var tail: ListNode? = dummyNode while l1 != nil \u0026amp;\u0026amp; l2 != nil { if l1!.val \u0026lt; l2!.val { tail?.next = l1 l1 = l1!.next } else { tail?.next = l2 l2 = l2!.next } tail = tail?.next } tail?.next = l1 ?? l2 return dummyNode.next } Explanation We can solve this problem by dividing it into sub-problems:\nFind the first and second linked lists: Iterate through lists.count until it equals 1, using stride with step = 2 to find the first and second portions of the linked lists. Merge them: Use the merge function for linked lists, which is a common problem in itself. Time/Space Complexity Time complexity: O(n * log k) Space complexity: O(k)\nWhere k is the total number of lists, and n is the total number of nodes across k lists. Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-merge-k-sorted-lists/","summary":"\u003ch3 id=\"the-problem\"\u003eThe problem\u003c/h3\u003e\n\u003cp\u003eYou are given an array of \u003ccode\u003ek\u003c/code\u003e linked lists \u003ccode\u003elists\u003c/code\u003e, each linked list is sorted in ascending order.\u003cbr\u003e\nMerge all the linked lists into one sorted linked list and return it.\u003c/p\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eInput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003elists\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e],[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e],[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eOutput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eExplanation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eThe\u003c/span\u003e \u003cspan class=\"n\"\u003elinked\u003c/span\u003e \u003cspan class=\"n\"\u003elists\u003c/span\u003e \u003cspan class=\"n\"\u003eare\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003emerging\u003c/span\u003e \u003cspan class=\"n\"\u003ethem\u003c/span\u003e \u003cspan class=\"n\"\u003einto\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"bp\"\u003esorted\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eInput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003elists\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eOutput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eInput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003elists\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[[]]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eOutput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ek == lists.length\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e0 \u0026lt;= k \u0026lt;= 10^4\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e0 \u0026lt;= lists[i].length \u0026lt;= 500\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-10^4 \u0026lt;= lists[i][j] \u0026lt;= 10^4\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003elists[i]\u003c/code\u003e is sorted in ascending order.\u003c/li\u003e\n\u003cli\u003eThe sum of \u003ccode\u003elists[i].length\u003c/code\u003e will not exceed \u003ccode\u003e10^4\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"brute-force-solution\"\u003eBrute Force Solution\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emergeKLists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003elists\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eListNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?])\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eListNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003enodes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// Step 1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003elists\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003ecount\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003elst\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elists\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003elst\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003enodes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elst\u003c/span\u003e\u003cspan class=\"p\"\u003e!.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003elst\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elst\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// Step 2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003enodes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// Step 3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eres\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eListNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eListNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eres\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003enodes\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eListNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"explanation\"\u003eExplanation\u003c/h4\u003e\n\u003cp\u003eWe can solve this problem by separating it into three steps:\u003c/p\u003e","title":"LeetCode - Blind 75 - Merge k Sorted Lists"},{"content":"The Problem Given head, the head of a linked list, determine if the linked list has a cycle in it.\nThere is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that the tail\u0026rsquo;s next pointer is connected to. Note that pos is not passed as a parameter.\nReturn true if there is a cycle in the linked list. Otherwise, return false.\nExamples Input: head = [3,2,0,-4], pos = 1 Output: true Explanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed). Input: head = [1,2], pos = 0 Output: true Explanation: There is a cycle in the linked list, where the tail connects to the 0th node. Input: head = [1], pos = -1 Output: false Explanation: There is no cycle in the linked list. Constraints The number of nodes in the list is in the range [0, 10^4]. -10^5 \u0026lt;= Node.val \u0026lt;= 10^5 pos is -1 or a valid index in the linked list. Follow-up: Can you solve it using O(1) (i.e., constant) memory?\nBrute Force Solution func hasCycle(_ head: ListNode?) -\u0026gt; Bool { var seen: Set\u0026lt;ListNode\u0026gt; = [] var curr = head while curr != nil { if seen.contains(curr!) { return true } seen.insert(curr!) curr = curr?.next } return false } Explanation We can solve this problem in a brute-force way using additional memory with a Set. By iterating through all nodes in head and checking if seen contains the current node, we can determine the result.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(n) Slow/Fast Pointers Solution func hasCycle(_ head: ListNode?) -\u0026gt; Bool { var slow = head var fast = head while fast != nil \u0026amp;\u0026amp; fast?.next != nil { slow = slow?.next fast = fast?.next?.next if slow === fast { return true } } return false } Explanation The slow/fast pointer technique solves the problem with constant memory space. We start from the beginning of head and move the slow pointer by one step and the fast pointer by two steps.\nFor example, in the case of input [1, 2, 3, 4] with pos = 1 (which corresponds to the value 2), the fast and slow pointers will eventually meet at the same position with value 2.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(1) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-linked-list-cycle/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven \u003ccode\u003ehead\u003c/code\u003e, the head of a linked list, determine if the linked list has a cycle in it.\u003cbr\u003e\nThere is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the \u003ccode\u003enext\u003c/code\u003e pointer. Internally, \u003ccode\u003epos\u003c/code\u003e is used to denote the index of the node that the tail\u0026rsquo;s \u003ccode\u003enext\u003c/code\u003e pointer is connected to. Note that \u003ccode\u003epos\u003c/code\u003e is not passed as a parameter.\u003cbr\u003e\nReturn \u003ccode\u003etrue\u003c/code\u003e if there is a cycle in the linked list. Otherwise, return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e","title":"LeetCode - Blind 75 - Linked List Cycle"},{"content":"The Problem Given the head of a linked list, remove the nth node from the end of the list and return its head.\nExamples Input: head = [1,2,3,4,5], n = 2 Output: [1,2,3,5] Input: head = [1], n = 1 Output: [] Input: head = [1,2], n = 1 Output: [1] Constraints The number of nodes in the list is sz. 1 \u0026lt;= sz \u0026lt;= 30 0 \u0026lt;= Node.val \u0026lt;= 100 1 \u0026lt;= n \u0026lt;= sz Brute Force Solution func removeNthFromEnd(_ head: ListNode?, _ n: Int) -\u0026gt; ListNode? { var nodes: [ListNode] = [] var curr = head while curr != nil { nodes.append(curr!) curr = curr!.next } let removeIndex = nodes.count - n if removeIndex == 0 { return head?.next } nodes[removeIndex - 1].next = nodes[removeIndex].next return head } Explanation One way to solve this problem is to use extra memory by iterating over all elements in head and storing them in an array. The brute force solution allows us to know the index of each element and delete the node.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(n) Recursive Solution func rec(_ head: ListNode?, _ n: inout Int) -\u0026gt; ListNode? { guard let head = head else { return nil } head.next = rec(head.next, \u0026amp;n) n -= 1 if n == 0 { return head.next } return head } func removeNthFromEnd(_ head: ListNode?, _ n: Int) -\u0026gt; ListNode? { var n = n return rec(head, \u0026amp;n) } Explanation If you take a closer look, the recursive solution is no different from the brute force solution and uses the same time and space complexity.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(n) Two Pointers Solution func removeNthFromEnd(_ head: ListNode?, _ n: Int) -\u0026gt; ListNode? { let dummyNode = ListNode(0, head) var n = n var curr = head var l: ListNode? = dummyNode var r: ListNode? = head while n \u0026gt; 0 \u0026amp;\u0026amp; r != nil { r = r?.next n -= 1 } while r != nil { l = l?.next r = r?.next } l?.next = l?.next?.next return dummyNode.next } Explanation We can solve this problem in a more memory-efficient way by using the two-pointers technique. We create an offset between the left and right pointers by looking at the nth node. The right pointer is shifted by n, while the left pointer starts from 0 and moves by 1. When the right pointer becomes nil, the left pointer will point to the node we need to delete.\nFor example, for the input [1, 2, 3, 4, 5] and n = 2, at the start, the left pointer will be at 1, and the right pointer will be at 3. We keep shifting pointers until the right pointer reaches the end of the list. At this point, the left pointer will be at 4, and the right pointer will be nil.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(1) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-remove-nth-node-from-end-of-list/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven the \u003ccode\u003ehead\u003c/code\u003e of a linked list, remove the \u003ccode\u003enth\u003c/code\u003e node from the end of the list and return its head.\u003c/p\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-3c7b9\" hidden\u003e\n    \u003clabel for=\"zoomCheck-3c7b9\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/remove_ex1.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: head = [1,2,3,4,5], n = 2\nOutput: [1,2,3,5]\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: head = [1], n = 1\nOutput: []\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: head = [1,2], n = 1\nOutput: [1]\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eThe number of nodes in the list is \u003ccode\u003esz\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e1 \u0026lt;= sz \u0026lt;= 30\u003c/li\u003e\n\u003cli\u003e0 \u0026lt;= Node.val \u0026lt;= 100\u003c/li\u003e\n\u003cli\u003e1 \u0026lt;= n \u0026lt;= sz\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"brute-force-solution\"\u003eBrute Force Solution\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eremoveNthFromEnd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eListNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?,\u003c/span\u003e \u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eListNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003enodes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eListNode\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ecurr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003enodes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e!)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e!.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eremoveIndex\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enodes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eremoveIndex\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003enodes\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eremoveIndex\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enodes\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eremoveIndex\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"explanation\"\u003eExplanation\u003c/h4\u003e\n\u003cp\u003eOne way to solve this problem is to use extra memory by iterating over all elements in \u003ccode\u003ehead\u003c/code\u003e and storing them in an array. The brute force solution allows us to know the index of each element and delete the node.\u003c/p\u003e","title":"LeetCode - Blind 75 - Remove Nth Node From End of List"},{"content":"The Problem You are given the head of a singly linked list. The list can be represented as:\nL0 ‚Üí L1 ‚Üí ‚Ä¶ ‚Üí Ln - 1 ‚Üí Ln\nReorder the list to be in the following form:\nL0 ‚Üí Ln ‚Üí L1 ‚Üí Ln - 1 ‚Üí L2 ‚Üí Ln - 2 ‚Üí ‚Ä¶\nYou may not modify the values in the list\u0026rsquo;s nodes. Only the nodes themselves may be changed.\nExamples Input: head = [1,2,3,4] Output: [1,4,2,3] Input: head = [1,2,3,4,5] Output: [1,5,2,4,3] Constraints The number of nodes in the list is in the range [1, 5 * 10‚Å¥]. 1 \u0026lt;= Node.val \u0026lt;= 1000 Brute Force Solution func reorderList(_ head: ListNode?) { guard let head = head else { return } var nodes: [ListNode] = [] var curr: ListNode? = head while curr != nil { nodes.append(curr!) curr = curr!.next } var l = 0 var r = nodes.count - 1 while l \u0026lt; r { nodes[l].next = nodes[r] l += 1 if l \u0026gt;= r { break } nodes[r].next = nodes[l] r -= 1 } nodes[l].next = nil } Explanation We can solve this problem using additional memory and the two-pointer technique.\nWhen we iterate over all nodes in head and add them to an array, we can precisely know the index of each value. By knowing this, we can reorder the list by updating the next pointer. For example, Input: head = [1,2,3,4] will look like this: 1 -\u0026gt; 4 -\u0026gt; 2 -\u0026gt; 3 -\u0026gt; nil.\nTime/Space Complexity Time Complexity: O(n) Space Complexity: O(n) Slow/Fast Pointers Solution func reorderList(_ head: ListNode?) { guard let head = head else { return } var slow: ListNode? = head var fast = head.next // Find middle while fast != nil \u0026amp;\u0026amp; fast?.next != nil { slow = slow?.next fast = fast?.next?.next } var second = slow?.next slow?.next = nil var prev: ListNode? // Reverse second half while second != nil { let tmp = second?.next second?.next = prev prev = second second = tmp } var first: ListNode? = head second = prev // Merge two halves while second != nil { let tmp1 = first?.next let tmp2 = second?.next first?.next = second second?.next = tmp1 first = tmp1 second = tmp2 } } Explanation To solve this problem in O(1) memory, we reverse the second half of the list.\nTo find the second half, we use slow and fast pointers by shifting the slow pointer by one step and the fast pointer by two steps. Finally, we merge the two halves to get the result.\nTime/Space Complexity Time Complexity: O(n) Space Complexity: O(1) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-reorder-list/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eYou are given the head of a singly linked list. The list can be represented as:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eL0 ‚Üí L1 ‚Üí ‚Ä¶ ‚Üí Ln - 1 ‚Üí Ln\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eReorder the list to be in the following form:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eL0 ‚Üí Ln ‚Üí L1 ‚Üí Ln - 1 ‚Üí L2 ‚Üí Ln - 2 ‚Üí ‚Ä¶\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eYou may not modify the values in the list\u0026rsquo;s nodes. Only the nodes themselves may be changed.\u003c/p\u003e","title":"LeetCode - Blind 75 - Reorder List"},{"content":"The Problem You are given the heads of two sorted linked lists, list1 and list2.\nMerge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists.\nReturn the head of the merged linked list.\nExamples Input: list1 = [1,2,4], list2 = [1,3,4] Output: [1,1,2,3,4,4] Input: list1 = [], list2 = [] Output: [] Input: list1 = [], list2 = [0] Output: [0] Constraints The number of nodes in both lists is in the range [0, 50]. -100 \u0026lt;= Node.val \u0026lt;= 100 Both list1 and list2 are sorted in non-decreasing order. Recursive Solution func mergeTwoLists(_ list1: ListNode?, _ list2: ListNode?) -\u0026gt; ListNode? { guard let list1 = list1 else { return list2 } guard let list2 = list2 else { return list1 } if list1.val \u0026lt;= list2.val { list1.next = mergeTwoLists(list1.next, list2) return list1 } else { list2.next = mergeTwoLists(list1, list2.next) return list2 } } Explanation Before moving to the part where we use recursion, we need to handle the base case and check list1 and list2 for nil values. Then we compare the node values and move the next pointer accordingly.\nFor example, with input list1 = [1,2,4] and list2 = [1,3,5], we first move the list1.next pointer because the condition list1.val \u0026lt;= list2.val with values 1 and 1 is true. The output at this step looks like 1. After that, we move list2.next because the list1 input now equals 2 and the condition list1.val \u0026lt;= list2.val becomes false.\nTime and Space Complexity Time Complexity: O(n) Space Complexity: O(n) Iterative Solution func mergeTwoLists(_ list1: ListNode?, _ list2: ListNode?) -\u0026gt; ListNode? { let dummyNode = ListNode() var list1 = list1 var list2 = list2 var tail: ListNode? = dummyNode while list1 != nil \u0026amp;\u0026amp; list2 != nil { if list1!.val \u0026lt; list2!.val { tail?.next = list1 list1 = list1?.next } else { tail?.next = list2 list2 = list2?.next } tail = tail?.next } tail?.next = list1 ?? list2 return dummyNode.next } Explanation The iterative solution uses the same logic as the recursive one with an additional trick: the dummyNode. This helps avoid edge cases related to the initialization of the node. This solution is memory-efficient (O(1)) because it does not require additional memory allocation.\nTime and Space Complexity Time Complexity: O(n) Space Complexity: O(1) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-merge-two-sorted-lists/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eYou are given the heads of two sorted linked lists, \u003ccode\u003elist1\u003c/code\u003e and \u003ccode\u003elist2\u003c/code\u003e.\u003cbr\u003e\nMerge the two lists into one \u003cstrong\u003esorted\u003c/strong\u003e list. The list should be made by splicing together the nodes of the first two lists.\u003cbr\u003e\nReturn the head of the merged linked list.\u003c/p\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-85057\" hidden\u003e\n    \u003clabel for=\"zoomCheck-85057\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/merge_ex1.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eInput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003elist1\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003elist2\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eOutput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eInput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003elist1\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"n\"\u003elist2\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eOutput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eInput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003elist1\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e \u003cspan class=\"n\"\u003elist2\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eOutput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eThe number of nodes in both lists is in the range \u003ccode\u003e[0, 50]\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-100 \u0026lt;= Node.val \u0026lt;= 100\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eBoth \u003ccode\u003elist1\u003c/code\u003e and \u003ccode\u003elist2\u003c/code\u003e are sorted in \u003cstrong\u003enon-decreasing\u003c/strong\u003e order.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"recursive-solution\"\u003eRecursive Solution\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emergeTwoLists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003elist1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eListNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?,\u003c/span\u003e \u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003elist2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eListNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eListNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eguard\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003elist1\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elist1\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003elist2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eguard\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003elist2\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elist2\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003elist1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elist1\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003elist2\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003elist1\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emergeTwoLists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist1\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elist2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003elist1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003elist2\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emergeTwoLists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elist2\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003elist2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"explanation\"\u003eExplanation\u003c/h4\u003e\n\u003cp\u003eBefore moving to the part where we use recursion, we need to handle the base case and check \u003ccode\u003elist1\u003c/code\u003e and \u003ccode\u003elist2\u003c/code\u003e for \u003ccode\u003enil\u003c/code\u003e values. Then we compare the node values and move the \u003ccode\u003enext\u003c/code\u003e pointer accordingly.\u003c/p\u003e","title":"LeetCode - Blind 75 - Merge Two Sorted Lists"},{"content":"The problem Given the head of a singly linked list, reverse the list, and return the reversed list.\nExamples Input: head = [1,2,3,4,5] Output: [5,4,3,2,1] Input: head = [1,2] Output: [2,1] Input: head = [] Output: [] Constraints The number of nodes in the list is in the range [0, 5000]. -5000 \u0026lt;= Node.val \u0026lt;= 5000 Follow up: A linked list can be reversed either iteratively or recursively. Could you implement both?\nRecursive solution func reverseList(_ head: ListNode?) -\u0026gt; ListNode? { guard let head = head else { return nil } var newHead: ListNode? = head if head.next != nil { newHead = reverseList(head.next) head.next?.next = head } head.next = nil return newHead } Explanation For the recursive solution, we are going to reverse links between nodes; for example, for a node with values 1 -\u0026gt; 2 -\u0026gt; 3, we are going to change them to 3 -\u0026gt; 2 -\u0026gt; 1.\nWe can do it by replacing the link between the last and next element: head.next?.next = head.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(n) Iterative solution func reverseList(_ head: ListNode?) -\u0026gt; ListNode? { var prev: ListNode? = nil var curr: ListNode? = head while curr != nil { var next = curr?.next curr?.next = prev prev = curr curr = next } return prev } Explanation The iterative solution looks less confusing than the recursive one. We can use three pointers prev, curr, and next and update them accordingly. In the case of input 1, 2, 3, the prev pointer will look like this: nil \u0026lt;- 1 \u0026lt;- 2 \u0026lt;- 3.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(1) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-reverse-linked-list/","summary":"\u003ch3 id=\"the-problem\"\u003eThe problem\u003c/h3\u003e\n\u003cp\u003eGiven the \u003ccode\u003ehead\u003c/code\u003e of a singly linked list, reverse the list, and return the reversed list.\u003c/p\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-0d8dc\" hidden\u003e\n    \u003clabel for=\"zoomCheck-0d8dc\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/rev1ex1.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: head = [1,2,3,4,5]\nOutput: [5,4,3,2,1]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-4e3a4\" hidden\u003e\n    \u003clabel for=\"zoomCheck-4e3a4\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/rev1ex2.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: head = [1,2]\nOutput: [2,1]\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: head = []\nOutput: []\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eThe number of nodes in the list is in the range [0, 5000].\u003c/li\u003e\n\u003cli\u003e-5000 \u0026lt;= Node.val \u0026lt;= 5000\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eFollow up: A linked list can be reversed either iteratively or recursively. Could you implement both?\u003c/p\u003e","title":"LeetCode - Blind 75 - Reverse Linked List"},{"content":"The problem There is an integer array¬†nums¬†sorted in ascending order (with¬†distinct¬†values).\nPrior to being passed to your function,¬†nums¬†is¬†possibly rotated¬†at an unknown pivot index¬†k (1 \u0026lt;= k \u0026lt; nums.length) such that the resulting array is¬†[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]¬†(0-indexed). For example,¬†[0,1,2,4,5,6,7]¬†might be rotated at pivot index¬†3¬†and become¬†[4,5,6,7,0,1,2].\nGiven the array¬†nums¬†after¬†the possible rotation and an integer¬†target, return¬†the index of¬†target¬†if it is in¬†nums, or¬†-1¬†if it is not in¬†nums.\nYou must write an algorithm with¬†O(log n)¬†runtime complexity.\nExamples Input: nums = [4,5,6,7,0,1,2], target = 0 Output: 4 Input: nums = [4,5,6,7,0,1,2], target = 3 Output: -1 Input: nums = [1], target = 0 Output: -1 Constraints 1 \u0026lt;= nums.length \u0026lt;= 5000 -10‚Å¥ \u0026lt;= nums[i] \u0026lt;= 10‚Å¥ All values of¬†nums¬†are¬†unique. nums¬†is an ascending array that is possibly rotated. -10‚Å¥ \u0026lt;= target \u0026lt;= 10‚Å¥ Brute force solution func search(_ nums: [Int], _ target: Int) -\u0026gt; Int { for i in 0 ..\u0026lt; nums.count { if nums[i] == target { return i } } return -1 } Explanation The straightforward way to solve this problem is by iterating over all elements in the input and comparing each element with the target so that we can find the possible result. It is not a very efficient solution as it will take O(n) time, but we can achieve O(log n) time by using binary search.\nTime/space complexity Time complexity: O(n) Space complexity:¬†O(1) Solution - 2 - Binary Search func search(_ nums: [Int], _ target: Int) -\u0026gt; Int { var l = 0 var r = nums.count - 1 // Find the pivot while l \u0026lt; r { let m = (l + r) / 2 if nums[m] \u0026gt; nums[r] { l = m + 1 } else { r = m } } let pivot = l // Search in the left part let res = binarySearch(0, pivot - 1, nums, target) if res != -1 { return res } // Search in the right part return binarySearch(pivot, nums.count - 1, nums, target) } func binarySearch( _ left: Int, _ right: Int, _ nums: [Int], _ target: Int ) -\u0026gt; Int { var left = left var right = right while left \u0026lt;= right { let mid = (left + right) / 2 if nums[mid] == target { return mid } else if nums[mid] \u0026lt; target { left = mid + 1 } else { right = mid - 1 } } return -1 } Explanation In the example above, we are searching for the pivot that we need to determine the portion of the array (left or right) that we are going to search. This solution is much better than brute force and takes O(log n) time.\nTime/space complexity Time complexity: O(log n) Space complexity:¬†O(1) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-search-in-rotated-sorted-array/","summary":"\u003ch3 id=\"the-problem\"\u003eThe problem\u003c/h3\u003e\n\u003cp\u003eThere is an integer array¬†\u003ccode\u003enums\u003c/code\u003e¬†sorted in ascending order (with¬†distinct¬†values).\u003cbr\u003e\nPrior to being passed to your function,¬†\u003ccode\u003enums\u003c/code\u003e¬†is¬†possibly rotated¬†at an unknown pivot index¬†\u003ccode\u003ek (1 \u0026lt;= k \u0026lt; nums.length)\u003c/code\u003e such that the resulting array is¬†\u003ccode\u003e[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]\u003c/code\u003e¬†(0-indexed). For example,¬†\u003ccode\u003e[0,1,2,4,5,6,7]\u003c/code\u003e¬†might be rotated at pivot index¬†\u003ccode\u003e3\u003c/code\u003e¬†and become¬†\u003ccode\u003e[4,5,6,7,0,1,2]\u003c/code\u003e.\u003cbr\u003e\nGiven the array¬†\u003ccode\u003enums\u003c/code\u003e¬†after¬†the possible rotation and an integer¬†\u003ccode\u003etarget\u003c/code\u003e, return¬†the index of¬†\u003ccode\u003etarget\u003c/code\u003e¬†if it is in¬†\u003ccode\u003enums\u003c/code\u003e, or¬†\u003ccode\u003e-1\u003c/code\u003e¬†if it is not in¬†\u003ccode\u003enums\u003c/code\u003e.\u003cbr\u003e\nYou must write an algorithm with¬†\u003ccode\u003eO(log n)\u003c/code\u003e¬†runtime complexity.\u003c/p\u003e","title":"LeetCode - Blind 75 - Search in Rotated Sorted Array"},{"content":"The Problem Suppose an array of length¬†n¬†sorted in ascending order is¬†rotated¬†between¬†1¬†and¬†n¬†times. For example, the array¬†nums = [0,1,2,4,5,6,7]¬†might become:\n[4,5,6,7,0,1,2]¬†if it was rotated¬†4¬†times. [0,1,2,4,5,6,7]¬†if it was rotated¬†7¬†times. Notice that¬†rotating¬†an array¬†[a[0], a[1], a[2], ..., a[n-1]]¬†1 time results in the array¬†[a[n-1], a[0], a[1], a[2], ..., a[n-2]].\nGiven the sorted rotated array¬†nums¬†of¬†unique¬†elements, return¬†the minimum element of this array.\nYou must write an algorithm that runs in¬†O(log n) time.\nExamples Input: nums = [3,4,5,1,2] Output: 1 Explanation: The original array was [1,2,3,4,5] rotated 3 times. Input: nums = [4,5,6,7,0,1,2] Output: 0 Explanation: The original array was [0,1,2,4,5,6,7] and it was rotated 4 times. Input: nums = [11,13,15,17] Output: 11 Explanation: The original array was [11,13,15,17] and it was rotated 4 times. Constraints n == nums.length 1 \u0026lt;= n \u0026lt;= 5000 -5000 \u0026lt;= nums[i] \u0026lt;= 5000 All the integers of¬†nums¬†are¬†unique. nums¬†is sorted and rotated between¬†1¬†and¬†n¬†times. Brute Force Solution func findMin(_ nums: [Int]) -\u0026gt; Int { return nums.min()! } Explanation The easiest way to solve this problem is to use Swift\u0026rsquo;s built-in min function, but it takes O(n) time. Underline, it just loops through the entire input and finds the minimum element.\nThe more optimal way to solve this problem is to use binary search.\nTime/Space Complexity Time complexity: O(n) Space complexity:¬†O(1) Solution - 2 - Binary Search func findMin(_ nums: [Int]) -\u0026gt; Int { var res = nums[0] var l = 0 var r = nums.count - 1 while l \u0026lt;= r { if nums[l] \u0026lt; nums[r] { res = min(res, nums[l]) break } let m = (l + r) / 2 res = min(res, nums[m]) if nums[m] \u0026gt;= nums[l] { l = m + 1 } else { r = m - 1 } } return res } Explanation This solution uses a slightly modified binary search; the prerequisite for binary search is that to achieve O(log n) time, you need sorted input.\nIn this solution, we use a slightly different approach. Since we are using a rotated array as input, we use the condition\nnums[m] \u0026gt;= nums[l] to look into the left or right side of the input nums and update pointers. For example, if we have the rotated array [3, 4, 5, 1, 2], our middle pointer will be 5, and the left pointer will be 3. Following the condition nums[m] \u0026gt;= nums[l], we update the left pointer. When that condition is not satisfied, for example, when the middle pointer is at 5 and the left pointer is at 1, we update the right pointer.\nTime/Space Complexity Time complexity: O(log n) Space complexity:¬†O(1) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-find-minimum-in-rotated-sorted-array/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eSuppose an array of length¬†\u003ccode\u003en\u003c/code\u003e¬†sorted in ascending order is¬†rotated¬†between¬†\u003ccode\u003e1\u003c/code\u003e¬†and¬†\u003ccode\u003en\u003c/code\u003e¬†times. For example, the array¬†\u003ccode\u003enums = [0,1,2,4,5,6,7]\u003c/code\u003e¬†might become:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e[4,5,6,7,0,1,2]\u003c/code\u003e¬†if it was rotated¬†\u003ccode\u003e4\u003c/code\u003e¬†times.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e[0,1,2,4,5,6,7]\u003c/code\u003e¬†if it was rotated¬†\u003ccode\u003e7\u003c/code\u003e¬†times.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNotice that¬†rotating¬†an array¬†\u003ccode\u003e[a[0], a[1], a[2], ..., a[n-1]]\u003c/code\u003e¬†1 time results in the array¬†\u003ccode\u003e[a[n-1], a[0], a[1], a[2], ..., a[n-2]]\u003c/code\u003e.\u003cbr\u003e\nGiven the sorted rotated array¬†\u003ccode\u003enums\u003c/code\u003e¬†of¬†unique¬†elements, return¬†the minimum element of this array.\u003cbr\u003e\nYou must write an algorithm that runs in¬†\u003ccode\u003eO(log n)\u003c/code\u003e time.\u003c/p\u003e","title":"LeetCode - Blind 75 - Find Minimum in Rotated Sorted Array"},{"content":"The Problem Given a string¬†s¬†containing just the characters¬†'(',¬†')',¬†'{',¬†'}',¬†'[',¬†and¬†']', determine if the input string is valid.\nAn input string is valid if:\nOpen brackets must be closed by the same type of brackets. Open brackets must be closed in the correct order. Every closing bracket has a corresponding open bracket of the same type. Examples Input:¬†s = \u0026#34;()\u0026#34; Output:¬†true Input:¬†s = \u0026#34;()[]{}\u0026#34; Output:¬†true Input:¬†s = \u0026#34;(]\u0026#34; Output:¬†false Input:¬†s = \u0026#34;([])\u0026#34; Output:¬†true Constraints 1 \u0026lt;= s.length \u0026lt;= 10‚Å¥ s¬†consists of parentheses only¬†'()[]{}'. Brute Force Solution func isValid(_ s: String) -\u0026gt; Bool { var s = s while s.contains(\u0026#34;()\u0026#34;) || s.contains(\u0026#34;{}\u0026#34;) || s.contains(\u0026#34;[]\u0026#34;) { s = s.replacingOccurrences(of: \u0026#34;()\u0026#34;, with: \u0026#34;\u0026#34;) s = s.replacingOccurrences(of: \u0026#34;{}\u0026#34;, with: \u0026#34;\u0026#34;) s = s.replacingOccurrences(of: \u0026#34;[]\u0026#34;, with: \u0026#34;\u0026#34;) } return s.isEmpty } Explanation The brute force way to solve this problem is to check if the string contains¬†\u0026quot;()\u0026quot;,¬†\u0026quot;{}\u0026quot;,¬†\u0026quot;[]\u0026quot;¬†and replace them with an empty string. It\u0026rsquo;s not a very efficient algorithm and takes¬†O(n¬≤)¬†time because of the while loop and the replacing operation on the entire string. We can optimize it by using a stack data structure.\nTime/Space Complexity Time complexity: O(n¬≤) Space complexity:¬†O(n) Solution - 2: Stack func isValid(_ s: String) -\u0026gt; Bool { var stack: [Character] = [] let closeToOpen: [Character: Character] = [ \u0026#34;)\u0026#34; : \u0026#34;(\u0026#34;, \u0026#34;]\u0026#34; : \u0026#34;[\u0026#34;, \u0026#34;}\u0026#34; : \u0026#34;{\u0026#34; ] for c in s { if closeToOpen[c] != nil { if !stack.isEmpty \u0026amp;\u0026amp; stack.last! == closeToOpen[c] { stack.removeLast() } else { return false } } else { stack.append(c) } } return stack.isEmpty } Explanation By using a stack, we can compare the last parentheses with the current parentheses in the loop. For example ( and ). If they match, remove them; if they don‚Äôt match, return false.\nTo avoid repetitive work and writing code for every open and close parenthesis, we can use a dictionary.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(n) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-valid-parentheses/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven a string¬†\u003ccode\u003es\u003c/code\u003e¬†containing just the characters¬†\u003ccode\u003e'('\u003c/code\u003e,¬†\u003ccode\u003e')'\u003c/code\u003e,¬†\u003ccode\u003e'{'\u003c/code\u003e,¬†\u003ccode\u003e'}'\u003c/code\u003e,¬†\u003ccode\u003e'['\u003c/code\u003e,¬†and¬†\u003ccode\u003e']'\u003c/code\u003e, determine if the input string is valid.\u003cbr\u003e\nAn input string is valid if:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eOpen brackets must be closed by the same type of brackets.\u003c/li\u003e\n\u003cli\u003eOpen brackets must be closed in the correct order.\u003c/li\u003e\n\u003cli\u003eEvery closing bracket has a corresponding open bracket of the same type.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput:¬†s = \u0026#34;()\u0026#34;  \nOutput:¬†true  \n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput:¬†s = \u0026#34;()[]{}\u0026#34;  \nOutput:¬†true  \n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput:¬†s = \u0026#34;(]\u0026#34;  \nOutput:¬†false  \n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput:¬†s = \u0026#34;([])\u0026#34;  \nOutput:¬†true  \n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e1 \u0026lt;= s.length \u0026lt;= 10‚Å¥\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003es\u003c/code\u003e¬†consists of parentheses only¬†\u003ccode\u003e'()[]{}'\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"brute-force-solution\"\u003eBrute Force Solution\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eisValid\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;()\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;{}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;[]\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplacingOccurrences\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eof\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;()\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplacingOccurrences\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eof\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;{}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplacingOccurrences\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eof\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;[]\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003eisEmpty\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"explanation\"\u003eExplanation\u003c/h4\u003e\n\u003cp\u003eThe brute force way to solve this problem is to check if the string contains¬†\u003ccode\u003e\u0026quot;()\u0026quot;\u003c/code\u003e,¬†\u003ccode\u003e\u0026quot;{}\u0026quot;\u003c/code\u003e,¬†\u003ccode\u003e\u0026quot;[]\u0026quot;\u003c/code\u003e¬†and replace them with an empty string. It\u0026rsquo;s not a very efficient algorithm and takes¬†O(n¬≤)¬†time because of the \u003ccode\u003ewhile\u003c/code\u003e loop and the replacing operation on the entire string. We can optimize it by using a stack data structure.\u003c/p\u003e","title":"LeetCode - Blind 75 - Valid Parentheses"},{"content":"The Problem Given two strings¬†s¬†and¬†t¬†of lengths¬†m¬†and¬†n, respectively, return¬†the¬†minimum window¬†substring of¬†s¬†such that every character in¬†t¬†(including duplicates) is included in the window. If there is no such substring, return¬†the empty string¬†\u0026quot;\u0026quot;.\nA¬†substring¬†is a contiguous,¬†non-empty¬†sequence of characters within a string.\nThe test cases will be generated such that the answer is¬†unique.\nExamples Input: s = \u0026#34;ADOBECODEBANC\u0026#34;, t = \u0026#34;ABC\u0026#34; Output: \u0026#34;BANC\u0026#34; Explanation: The minimum window substring \u0026#34;BANC\u0026#34; includes \u0026#39;A\u0026#39;, \u0026#39;B\u0026#39;, and \u0026#39;C\u0026#39; from string t. Input: s = \u0026#34;a\u0026#34;, t = \u0026#34;a\u0026#34; Output: \u0026#34;a\u0026#34; Explanation: The entire string s is the minimum window. Input: s = \u0026#34;a\u0026#34;, t = \u0026#34;aa\u0026#34; Output: \u0026#34;\u0026#34; Explanation: Both \u0026#39;a\u0026#39;s from t must be included in the window. Since the largest window of s only has one \u0026#39;a\u0026#39;, return an empty string. Constraints m == s.length n == t.length 1 \u0026lt;= m, n \u0026lt;= 10‚Åµ s¬†and¬†t¬†consist of uppercase and lowercase English letters. Follow-up: Could you find an algorithm that runs in¬†O(m + n)¬†time?\nBrute Force Solution func minWindow(_ s: String, _ t: String) -\u0026gt; String { if t.isEmpty { return \u0026#34;\u0026#34; } var countT: [Character: Int] = [:] for c in t { countT[c, default: 0] += 1 } var res = (-1, -1) var resLen = Int.max let sArray = Array(s) let lenS = sArray.count for i in 0 ..\u0026lt; lenS { var countS: [Character: Int] = [:] for j in i ..\u0026lt; lenS { countS[sArray[j], default: 0] += 1 var flag = true for (key, value) in countT { if countS[key, default: 0] \u0026lt; value { flag = false break } } let windowSize = (j - i + 1) if flag \u0026amp;\u0026amp; windowSize \u0026lt; resLen { resLen = windowSize res = (i, j) } } } let (l, r) = res if resLen == Int.max { return \u0026#34;\u0026#34; } else { return String(sArray[l...r]) } } Explanation When you look at the solution, you can see that it is a very complicated problem. Let\u0026rsquo;s divide it into parts to help us understand it more deeply.\nBefore we find the result, we need to calculate the count for each character in the t string. This will help us find a similar substring in s.\nNow, when we have our count of t, we can compare it with the count of s and update our result. This is not a very efficient solution, and we can minimize repetitive work‚Äî‚Äúiterating through the input every iteration‚Äù‚Äîby getting rid of the second loop and applying the sliding window technique.\nTime/Space Complexity Time complexity: O(n¬≤) Space complexity:¬†O(m), where m is the total number of unique characters in strings s and t. Solution 2 - Optimal func minWindow(_ s: String, _ t: String) -\u0026gt; String { if t.isEmpty { return \u0026#34;\u0026#34; } var countT: [Character: Int] = [:] for c in t { countT[c, default: 0] += 1 } var window: [Character: Int] = [:] var res = (-1, -1) var resLen = Int.max let sArray = Array(s) let lenS = sArray.count var have = 0 let need = countT.count var l = 0 for r in 0 ..\u0026lt; lenS { let c = sArray[r] window[c, default: 0] += 1 if countT[c] != nil \u0026amp;\u0026amp; window[c] == countT[c] { have += 1 } while have == need { let windowSize = (r - l + 1) if windowSize \u0026lt; resLen { res = (l, r) resLen = windowSize } window[sArray[l], default: 0] -= 1 if countT[sArray[l]] != nil \u0026amp;\u0026amp; window[sArray[l], default: 0] \u0026lt; countT[sArray[l], default: 0] { have -= 1 } l += 1 } } l = res.0 let r = res.1 if resLen == Int.max { return \u0026#34;\u0026#34; } else { return String(sArray[l...r]) } } Explanation To solve this problem in an optimal way, we need to add two additional properties: have and need. These will help us determine when to move our pointers.\nThe need variable is simply the count of all characters inside the countT dictionary.\nhave is the number of characters in the current window that satisfy the condition.\nWe update the have property only when the value of window is equal to the value of countT. For example, a substring of s with \u0026ldquo;ADOB\u0026rdquo; and a substring of t with \u0026ldquo;ABC\u0026rdquo; will have:\nwindow with A: 1, B: 1, and countT with A: 1, B: 1, C: 1.\nWhen the condition have == need is satisfied, we update the result and move the pointers.\nTime/Space Complexity Time complexity: O(n) Space complexity:¬†O(m), where m is the total number of unique characters in strings s and t. Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-minimum-window-substring/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven two strings¬†\u003ccode\u003es\u003c/code\u003e¬†and¬†\u003ccode\u003et\u003c/code\u003e¬†of lengths¬†\u003ccode\u003em\u003c/code\u003e¬†and¬†\u003ccode\u003en\u003c/code\u003e, respectively, return¬†the¬†minimum window¬†substring of¬†\u003ccode\u003es\u003c/code\u003e¬†such that every character in¬†\u003ccode\u003et\u003c/code\u003e¬†(including duplicates) is included in the window. If there is no such substring, return¬†the empty string¬†\u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA¬†substring¬†is a contiguous,¬†non-empty¬†sequence of characters within a string.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe test cases will be generated such that the answer is¬†unique.\u003c/p\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: s = \u0026#34;ADOBECODEBANC\u0026#34;, t = \u0026#34;ABC\u0026#34;\nOutput: \u0026#34;BANC\u0026#34;\nExplanation: The minimum window substring \u0026#34;BANC\u0026#34; includes \u0026#39;A\u0026#39;, \u0026#39;B\u0026#39;, and \u0026#39;C\u0026#39; from string t.\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: s = \u0026#34;a\u0026#34;, t = \u0026#34;a\u0026#34;\nOutput: \u0026#34;a\u0026#34;\nExplanation: The entire string s is the minimum window.\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: s = \u0026#34;a\u0026#34;, t = \u0026#34;aa\u0026#34;\nOutput: \u0026#34;\u0026#34;\nExplanation: Both \u0026#39;a\u0026#39;s from t must be included in the window.\nSince the largest window of s only has one \u0026#39;a\u0026#39;, return an empty string.\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003em == s.length\u003c/li\u003e\n\u003cli\u003en == t.length\u003c/li\u003e\n\u003cli\u003e1 \u0026lt;= m, n \u0026lt;= 10‚Åµ\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003es\u003c/code\u003e¬†and¬†\u003ccode\u003et\u003c/code\u003e¬†consist of uppercase and lowercase English letters.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eFollow-up:\u003c/strong\u003e Could you find an algorithm that runs in¬†\u003ccode\u003eO(m + n)\u003c/code\u003e¬†time?\u003c/p\u003e","title":"LeetCode - Blind 75 - Minimum Window Substring"},{"content":"The problem You are given a string¬†s¬†and an integer¬†k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most¬†k¬†times.\nReturn¬†the length of the longest substring containing the same letter you can get after performing the above operations.\nExamples Input: s = \u0026#34;ABAB\u0026#34;, k = 2 Output: 4 Explanation: Replace the two \u0026#39;A\u0026#39;s with two \u0026#39;B\u0026#39;s or vice versa. Input: s = \u0026#34;AABABBA\u0026#34;, k = 1 Output: 4 Explanation: Replace the one \u0026#39;A\u0026#39; in the middle with \u0026#39;B\u0026#39; and form \u0026#34;AABBBBA\u0026#34;. The substring \u0026#34;BBBB\u0026#34; has the longest repeating letters, which is 4. There may exist other ways to achieve this answer too. Constraints 1 \u0026lt;= s.length \u0026lt;= 105 s consists of only uppercase English letters. 0 \u0026lt;= k \u0026lt;= s.length Brute force solution func characterReplacement(_ s: String, _ k: Int) -\u0026gt; Int { let n = s.count let s = Array(s) var res = 0 for i in 0 ..\u0026lt; n { var count: [Character: Int] = [:] var maxF = 0 for j in i ..\u0026lt; n { count[s[j], default: 0] += 1 maxF = max(maxF, count[s[j]]!) let windowSize = (j - i + 1) let numOfCharsToReplace = (windowSize - maxF) let canReplace = (numOfCharsToReplace \u0026lt;= k) if canReplace { res = max(res, windowSize) } } } return res } Explanation First things first, we need to figure out which character we are going to replace. We can do this by using a dictionary. This way, we can calculate the most frequent character in the substring. After that, we will be able to calculate the number of characters to replace and check if we can replace the character.\nThis algorithm is not very fast and takes O(n^2) time. We can improve it further and optimize it to achieve O(n) time complexity.\nTime/Space Complexity Time complexity: O(n^2) Space complexity:¬†O(m), where m is the total number of unique characters in the string. Solution 2 - Optimal func characterReplacement(_ s: String, _ k: Int) -\u0026gt; Int { let n = s.count let s = Array(s) var res = 0 var count: [Character: Int] = [:] var l = 0 var maxF = 0 for r in 0 ..\u0026lt; n { count[s[r], default: 0] += 1 maxF = max(maxF, count[s[r]]!) let numOfCharsToReplace = (windowSize(r: r, l: l) - maxF) let cantReplace = (numOfCharsToReplace \u0026gt; k) if cantReplace { count[s[l]]! -= 1 l += 1 } res = max(res, windowSize(r: r, l: l)) } return res } func windowSize(r: Int, l: Int) -\u0026gt; Int { return r - l + 1 } Explanation The optimal solution is very similar to the brute force solution, except we got rid of the second loop. The logic stays the same. What we did is store properties from the inner loop outside. In case numOfCharsToReplace is more than k, it means we exceeded the allowed number of replacements. We then need to shrink our window by decrementing the count of the current character and moving the l pointer.\nTime/Space Complexity Time complexity: O(n) Space complexity:¬†O(m), where m is the total number of unique characters in the string. Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-longest-repeating-character-replacement/","summary":"\u003ch3 id=\"the-problem\"\u003eThe problem\u003c/h3\u003e\n\u003cp\u003eYou are given a string¬†\u003ccode\u003es\u003c/code\u003e¬†and an integer¬†\u003ccode\u003ek\u003c/code\u003e. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most¬†\u003ccode\u003ek\u003c/code\u003e¬†times.\u003cbr\u003e\nReturn¬†the length of the longest substring containing the same letter you can get after performing the above operations.\u003c/p\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: s = \u0026#34;ABAB\u0026#34;, k = 2  \nOutput: 4  \nExplanation: Replace the two \u0026#39;A\u0026#39;s with two \u0026#39;B\u0026#39;s or vice versa.  \n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: s = \u0026#34;AABABBA\u0026#34;, k = 1  \nOutput: 4  \nExplanation: Replace the one \u0026#39;A\u0026#39; in the middle with \u0026#39;B\u0026#39; and form \u0026#34;AABBBBA\u0026#34;.  \nThe substring \u0026#34;BBBB\u0026#34; has the longest repeating letters, which is 4.  \nThere may exist other ways to achieve this answer too.  \n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e1 \u0026lt;= s.length \u0026lt;= 105\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003es\u003c/code\u003e consists of only uppercase English letters.\u003c/li\u003e\n\u003cli\u003e0 \u0026lt;= k \u0026lt;= s.length\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"brute-force-solution\"\u003eBrute force solution\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003echaracterReplacement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003ecount\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eres\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eCharacter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[:]\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003emaxF\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003emaxF\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emaxF\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"bp\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003ewindowSize\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003enumOfCharsToReplace\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewindowSize\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003emaxF\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003ecanReplace\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumOfCharsToReplace\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ecanReplace\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eres\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ewindowSize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eres\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"explanation\"\u003eExplanation\u003c/h4\u003e\n\u003cp\u003eFirst things first, we need to figure out which character we are going to replace. We can do this by using a dictionary. This way, we can calculate the most frequent character in the substring. After that, we will be able to calculate the number of characters to replace and check if we can replace the character.\u003cbr\u003e\nThis algorithm is not very fast and takes O(n^2) time. We can improve it further and optimize it to achieve O(n) time complexity.\u003c/p\u003e","title":"LeetCode - Blind 75 - Longest Repeating Character Replacement"},{"content":"The Problem Given a string s, find the length of the longest substring without repeating characters.\nA substring is a contiguous non-empty sequence of characters within a string.\nExamples Input: s = \u0026#34;abcabcbb\u0026#34; Output: 3 Explanation: The answer is \u0026#34;abc\u0026#34;, with the length of 3. Input: s = \u0026#34;bbbbb\u0026#34; Output: 1 Explanation: The answer is \u0026#34;b\u0026#34;, with the length of 1. Input: s = \u0026#34;pwwkew\u0026#34; Output: 3 Explanation: The answer is \u0026#34;wke\u0026#34;, with the length of 3. Notice that the answer must be a substring. \u0026#34;pwke\u0026#34; is a subsequence and not a substring. Constraints 0 \u0026lt;= s.length \u0026lt;= 5 * 10‚Å¥ s consists of English letters, digits, symbols, and spaces. Brute Force Solution func lengthOfLongestSubstring(_ s: String) -\u0026gt; Int { let n = s.count var res = 0 for i in 0 ..\u0026lt; n { var chars: [Character] = [] for j in i ..\u0026lt; n { if chars.contains(s[j]) { break } chars.append(s[j]) } res = max(res, chars.count) } return res } Explanation Let‚Äôs start by visualizing the problem:\nWe can compare every substring starting from the first element, iterating through all elements, and when we find a duplicate character, we update the result with the length of the substring.\nThis is not an efficient solution and will take O(n * m) time. We can optimize it with the sliding window technique.\nTime/Space Complexity Time complexity: O(n * m) - where n is the length of the string and m is the number of unique characters in the substring. Space complexity: O(m) Solution 2 - Sliding Window func lengthOfLongestSubstring(_ s: String) -\u0026gt; Int { let n = s.count let s = Array(s) var res = 0 var charSet: Set\u0026lt;Character\u0026gt; = [] var l = 0 for r in 0 ..\u0026lt; n { while charSet.contains(s[r]) { charSet.remove(s[l]) l += 1 } charSet.insert(s[r]) let windowSize = (r - l + 1) res = max(res, windowSize) } return res } Explanation As mentioned above, we can optimize our brute force solution by using the sliding window technique.\nWe control the window using a set data structure to eliminate duplicates.\nWhen we find a duplicate value during iteration, we remove that value from the set and move the left pointer to form a new window.\nBy iterating through all the input, we can find the length of the longest substring.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(m) - where m is the number of unique characters in the substring. Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-longest-substring-without-repeating-characters/","summary":"\u003ch4 id=\"the-problem\"\u003eThe Problem\u003c/h4\u003e\n\u003cp\u003eGiven a string \u003ccode\u003es\u003c/code\u003e, find the length of the longest substring without repeating characters.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA substring is a contiguous non-empty sequence of characters within a string.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: s = \u0026#34;abcabcbb\u0026#34;\nOutput: 3\nExplanation: The answer is \u0026#34;abc\u0026#34;, with the length of 3.\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: s = \u0026#34;bbbbb\u0026#34;\nOutput: 1\nExplanation: The answer is \u0026#34;b\u0026#34;, with the length of 1.\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: s = \u0026#34;pwwkew\u0026#34;\nOutput: 3\nExplanation: The answer is \u0026#34;wke\u0026#34;, with the length of 3.  \nNotice that the answer must be a substring. \u0026#34;pwke\u0026#34; is a subsequence and not a substring.\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e0 \u0026lt;= s.length \u0026lt;= 5 * 10‚Å¥\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003es\u003c/code\u003e consists of English letters, digits, symbols, and spaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"brute-force-solution\"\u003eBrute Force Solution\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003elengthOfLongestSubstring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eres\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eCharacter\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eres\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eres\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"explanation\"\u003eExplanation\u003c/h4\u003e\n\u003cp\u003eLet‚Äôs start by visualizing the problem:\u003cbr\u003e\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-286b4\" hidden\u003e\n    \u003clabel for=\"zoomCheck-286b4\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/problem_3.png#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e","title":"LeetCode - Blind 75 - Longest Substring Without Repeating Characters"},{"content":"The problem You are given an array¬†prices¬†where¬†prices[i]¬†is the price of a given stock on the¬†i-th¬†day.\nYou want to maximize your profit by choosing a¬†single day¬†to buy one stock and choosing a¬†different day in the future¬†to sell that stock.\nReturn¬†the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return¬†0.\nExamples Input: prices = [7,1,5,3,6,4] Output: 5 Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5. Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell. Input: prices = [7,6,4,3,1] Output: 0 Explanation: In this case, no transactions are done and the max profit = 0. Constraints 1 \u0026lt;= prices.length \u0026lt;= 10‚Åµ 0 \u0026lt;= prices[i] \u0026lt;= 10‚Å¥ Brute force solution func maxProfit(_ prices: [Int]) -\u0026gt; Int { let n = prices.count var res = 0 for i in 0 ..\u0026lt; n { for j in i + 1 ..\u0026lt; n { let profit = prices[j] - prices[i] if profit \u0026gt; 0 { res = max(res, profit) } } } return res } Explanation We can start with a brute force solution and find a way to a more optimal solution as we go.\nBy visualizing the problem using input from example 1 [7,1,5,3,6,4]:\nWe can see that the maximum profit is possible if you buy on day 2 for price 1 and sell on day 5 at price 6, resulting in a profit of 5.\nWe can iterate over all prices, compare the current price with the next one, and calculate the profit. This will work with a time complexity of O(n¬≤), but we can do better by using the two-pointer technique.\nTime/Space Complexity Time complexity: O(n¬≤) Space complexity: O(1) Solution 2 - Two Pointers func maxProfit(_ prices: [Int]) -\u0026gt; Int { let n = prices.count var res = 0 var l = 0 var r = 1 while r \u0026lt; n { let profit = prices[r] - prices[l] if profit \u0026gt; 0 { res = max(res, profit) } else { l = r } r += 1 } return res } Explanation From the brute force approach, we learned that it is possible to solve this problem in a more optimal way by using the two-pointer technique. The calculation of profit remains the same, but the solution is optimized to O(n) time complexity.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(1) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-best-time-to-buy-and-sell-stock/","summary":"\u003ch3 id=\"the-problem\"\u003eThe problem\u003c/h3\u003e\n\u003cp\u003eYou are given an array¬†\u003ccode\u003eprices\u003c/code\u003e¬†where¬†\u003ccode\u003eprices[i]\u003c/code\u003e¬†is the price of a given stock on the¬†\u003ccode\u003ei-th\u003c/code\u003e¬†day.\u003cbr\u003e\nYou want to maximize your profit by choosing a¬†single day¬†to buy one stock and choosing a¬†different day in the future¬†to sell that stock.\u003cbr\u003e\nReturn¬†the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return¬†\u003ccode\u003e0\u003c/code\u003e.\u003c/p\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: prices = [7,1,5,3,6,4]  \nOutput: 5  \nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.  \nNote that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.  \n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: prices = [7,6,4,3,1]  \nOutput: 0  \nExplanation: In this case, no transactions are done and the max profit = 0.  \n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e1 \u0026lt;= prices.length \u0026lt;= 10‚Åµ\u003c/li\u003e\n\u003cli\u003e0 \u0026lt;= prices[i] \u0026lt;= 10‚Å¥\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"brute-force-solution\"\u003eBrute force solution\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emaxProfit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eprices\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprices\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003ecount\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eres\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eprofit\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprices\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003eprices\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eprofit\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eres\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eprofit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eres\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"explanation\"\u003eExplanation\u003c/h4\u003e\n\u003cp\u003eWe can start with a brute force solution and find a way to a more optimal solution as we go.\u003cbr\u003e\nBy visualizing the problem using input from example 1 \u003ccode\u003e[7,1,5,3,6,4]\u003c/code\u003e:\u003cbr\u003e\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-15a67\" hidden\u003e\n    \u003clabel for=\"zoomCheck-15a67\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/problem_121.png#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e","title":"LeetCode - Blind 75 - Best Time to Buy and Sell Stock"},{"content":"The Problem You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).\nFind two lines that, together with the x-axis, form a container such that the container contains the most water.\nReturn the maximum amount of water a container can store.\nNotice that you may not slant the container.\nExamples Input: height = [1,8,6,2,5,4,8,3,7] Output: 49 Explanation: The above vertical lines are represented by the array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49. Input: height = [1,1] Output: 1 Constraints n == height.length 2 \u0026lt;= n \u0026lt;= 105 0 \u0026lt;= height[i] \u0026lt;= 104 Brute Force Solution func maxArea(_ height: [Int]) -\u0026gt; Int { let n = height.count var res = 0 for i in 0 ..\u0026lt; n { for j in i + 1 ..\u0026lt; n { let areaWidth = (j - i) let minHeight = min(height[i], height[j]) let area = minHeight * areaWidth res = max(res, area) } } return res } Explanation Let\u0026rsquo;s start with the brute force solution.\nBy looking at the picture of Example 1, we can see that the area with height 7 and width 7 holds the most water. To get to this step, we compare the current and the next elements to find a solution. For example, in [1,8,6,2,5,4,8,3,7], when we compare 1 and 8, we look for the maximum area of water. We can see that the area will be 1 by 1 because the water spills to the left.\nBy following this example and continuing the iterations, we calculate the area width, minimum height, the area filled with water, and find the result.\nTime/Space Complexity Time complexity: O(n^2) Space complexity: O(1) Solution 2 - Two Pointers func maxArea(_ height: [Int]) -\u0026gt; Int { let n = height.count var res = 0 var l = 0 var r = n - 1 while l \u0026lt; r { let areaWidth = (r - l) let minHeight = min(height[l], height[r]) let area = minHeight * areaWidth res = max(res, area) if height[l] \u0026lt; height[r] { l += 1 } else { r -= 1 } } return res } Explanation When we solved this problem using the brute force method, we saw that it could be done with two loops. Now, we can take it further and optimize it to O(n) time complexity using the two-pointer technique.\nThe computation of the max area stays the same: we calculate the area width, minimum height, area, and move pointers by comparing the left and right height elements.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(1) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-container-with-most-water/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eYou are given an integer array \u003ccode\u003eheight\u003c/code\u003e of length \u003ccode\u003en\u003c/code\u003e. There are \u003ccode\u003en\u003c/code\u003e vertical lines drawn such that the two endpoints of the \u003ccode\u003eith\u003c/code\u003e line are \u003ccode\u003e(i, 0)\u003c/code\u003e and \u003ccode\u003e(i, height[i])\u003c/code\u003e.\u003cbr\u003e\nFind two lines that, together with the x-axis, form a container such that the container contains the most water.\u003cbr\u003e\nReturn the maximum amount of water a container can store.\u003cbr\u003e\nNotice that you may not slant the container.\u003c/p\u003e","title":"LeetCode - Blind 75 - Container With Most Water"},{"content":"The Problem Given an integer array nums, return all the triplets¬†[nums[i], nums[j], nums[k]]¬†such that¬†i != j,¬†i != k, and¬†j != k, and¬†nums[i] + nums[j] + nums[k] == 0.\nNotice that the solution set must not contain duplicate triplets.\nExamples Input: nums = [-1,0,1,2,-1,-4] Output: [[-1,-1,2],[-1,0,1]] Explanation: nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0. nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0. nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0. The distinct triplets are [-1,0,1] and [-1,-1,2]. Notice that the order of the output and the order of the triplets does not matter. Input: nums = [0,1,1] Output: [] Explanation: The only possible triplet does not sum up to 0. Input: nums = [0,0,0] Output: [[0,0,0]] Explanation: The only possible triplet sums up to 0. Constraints 3 \u0026lt;= nums.length \u0026lt;= 3000 -10‚Åµ \u0026lt;= nums[i] \u0026lt;= 10‚Åµ Brute Force Solution func threeSum(_ nums: [Int]) -\u0026gt; [[Int]] { var nums = nums let n = nums.count var res: Set\u0026lt;[Int]\u0026gt; = [] nums.sort() for i in 0 ..\u0026lt; n { for j in i + 1 ..\u0026lt; n { for k in j + 1 ..\u0026lt; n { if nums[i] + nums[j] + nums[k] == 0 { let val = [nums[i], nums[j], nums[k]] res.insert(val) } } } } return Array(res) } Explanation Let\u0026rsquo;s start with the brute force solution.\nAccording to the problem, we need to find triplet elements that, when added together, equal 0. By looking at examples, the first thing that comes to mind is to use three loops, add each of the elements, and compare the result with 0. If the result equals 0, we add the elements to the result.\nTime/Space Complexity Time complexity: O(n¬≥) Space complexity: O(m), where m is the number of triplets. Solution 2 - Optimal func threeSum(_ nums: [Int]) -\u0026gt; [[Int]] { var nums = nums let n = nums.count var res: [[Int]] = [] nums.sort() for (i, num) in nums.enumerated() { if i \u0026gt; 0 \u0026amp;\u0026amp; num == nums[i - 1] { continue } var l = i + 1 var r = n - 1 while l \u0026lt; r { let tSum = num + nums[l] + nums[r] if tSum \u0026gt; 0 { r -= 1 } else if tSum \u0026lt; 0 { l += 1 } else { res.append([num, nums[l], nums[r]]) l += 1 while nums[l] == nums[l - 1] \u0026amp;\u0026amp; l \u0026lt; r { l += 1 } } } } return res } Explanation The time complexity of O(n¬≥) is not exactly blazingly fast, so we need a better approach. An optimal solution is exactly what we are looking for.\nUsing sorting, we can detect duplicate values. For example, before sorting: [-1,0,1,2,-1,-4], and after sorting: [-4, -1, -1, 0, 1, 2]. We can iterate and check in the base case if the current value is equal to the previous one, and if it is, skip and move to the next iteration.\nWe can find the second and third elements by using the two-pointer technique. We determine which pointer to move by calculating the total sum of the triplet and comparing it to 0.\nTime/Space Complexity Time complexity: O(n¬≤) Space complexity: O(1) or O(n), depending on the sorting algorithm. Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-3sum/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven an integer array \u003ccode\u003enums\u003c/code\u003e, return all the triplets¬†\u003ccode\u003e[nums[i], nums[j], nums[k]]\u003c/code\u003e¬†such that¬†\u003ccode\u003ei != j\u003c/code\u003e,¬†\u003ccode\u003ei != k\u003c/code\u003e, and¬†\u003ccode\u003ej != k\u003c/code\u003e, and¬†\u003ccode\u003enums[i] + nums[j] + nums[k] == 0\u003c/code\u003e.\u003cbr\u003e\nNotice that the solution set must not contain duplicate triplets.\u003c/p\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: nums = [-1,0,1,2,-1,-4]\nOutput: [[-1,-1,2],[-1,0,1]]\nExplanation: \nnums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.\nnums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.\nnums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.\nThe distinct triplets are [-1,0,1] and [-1,-1,2].\nNotice that the order of the output and the order of the triplets does not matter.\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: nums = [0,1,1]\nOutput: []\nExplanation: The only possible triplet does not sum up to 0.\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: nums = [0,0,0]\nOutput: [[0,0,0]]\nExplanation: The only possible triplet sums up to 0.\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e3 \u0026lt;= nums.length \u0026lt;= 3000\u003c/li\u003e\n\u003cli\u003e-10‚Åµ \u0026lt;= nums[i] \u0026lt;= 10‚Åµ\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch3 id=\"brute-force-solution\"\u003eBrute Force Solution\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ethreeSum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003enums\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eSet\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ek\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eval\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"explanation\"\u003eExplanation\u003c/h4\u003e\n\u003cp\u003eLet\u0026rsquo;s start with the brute force solution.\u003cbr\u003e\nAccording to the problem, we need to find triplet elements that, when added together, equal \u003ccode\u003e0\u003c/code\u003e. By looking at examples, the first thing that comes to mind is to use three loops, add each of the elements, and compare the result with \u003ccode\u003e0\u003c/code\u003e. If the result equals \u003ccode\u003e0\u003c/code\u003e, we add the elements to the result.\u003c/p\u003e","title":"LeetCode - Blind 75 - 3Sum"},{"content":"The Problem Given a string¬†s, return¬†true¬†if it is a¬†palindrome, or¬†false¬†otherwise.\nA phrase is a¬†palindrome¬†if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.\nExamples Input: s = \u0026#34;A man, a plan, a canal: Panama\u0026#34; Output: true Explanation: \u0026#34;amanaplanacanalpanama\u0026#34; is a palindrome. Input: s = \u0026#34;race a car\u0026#34; Output: false Explanation: \u0026#34;raceacar\u0026#34; is not a palindrome. Input: s = \u0026#34; \u0026#34; Output: true Explanation: s is an empty string \u0026#34;\u0026#34; after removing non-alphanumeric characters. Since an empty string reads the same forward and backward, it is a palindrome. Constraints 1 \u0026lt;= s.length \u0026lt;= 2 * 10^5 s¬†consists only of printable ASCII characters. Brute Force Solution func isPalindrome(_ s: String) -\u0026gt; Bool { var newStr = \u0026#34;\u0026#34; for c in s { if c.isLetter || c.isNumber { newStr += c.lowercased() } } return newStr == String(newStr.reversed()) } Explanation Let\u0026rsquo;s start with the brute force solution. According to the description, we need to check if the string contains only lowercase, alphanumeric characters and reads the same forward and backward. In Swift, you can check this using the built-in isLetter and isNumber properties. Based on this information, we iterate through all characters in the s string, verify that each character is a letter or number, update newStr with the current lowercased character, and compare the result with its reversed version.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(n) Solution - 2 - Optimal func isPalindrome(_ s: String) -\u0026gt; Bool { let s = Array(s) var l = 0 var r = s.count - 1 while l \u0026lt; r { if !isAlnum(s[l]) { l += 1 continue } if !isAlnum(s[r]) { r -= 1 continue } if s[l].lowercased() != s[r].lowercased() { return false } l += 1 r -= 1 } return true } func isAlnum(_ c: Character) -\u0026gt; Bool { let cAscii = c.asciiValue! return ( cAscii \u0026gt;= Character(\u0026#34;A\u0026#34;).asciiValue! \u0026amp;\u0026amp; cAscii \u0026lt;= Character(\u0026#34;Z\u0026#34;).asciiValue! || cAscii \u0026gt;= Character(\u0026#34;a\u0026#34;).asciiValue! \u0026amp;\u0026amp; cAscii \u0026lt;= Character(\u0026#34;z\u0026#34;).asciiValue! || cAscii \u0026gt;= Character(\u0026#34;0\u0026#34;).asciiValue! \u0026amp;\u0026amp; cAscii \u0026lt;= Character(\u0026#34;9\u0026#34;).asciiValue! ) } Explanation To solve the problem optimally, based on the description, we need to determine if each character is alphanumeric and lowercase. We can accomplish this by introducing an isAlnum helper function that checks if a character is alphanumeric within the loop, using the two-pointer technique. For example, in the array \u0026quot;car rac\u0026quot;, the first left and right characters are both \u0026quot;c\u0026quot;, the second are both \u0026quot;a\u0026quot;, and the third are both \u0026quot;r\u0026quot;. Following this logic, we can confirm that the input string s is a palindrome.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(1) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-valid-palindrome/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven a string¬†\u003ccode\u003es\u003c/code\u003e, return¬†\u003ccode\u003etrue\u003c/code\u003e¬†if it is a¬†palindrome, or¬†\u003ccode\u003efalse\u003c/code\u003e¬†otherwise.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA phrase is a¬†palindrome¬†if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: s = \u0026#34;A man, a plan, a canal: Panama\u0026#34;\nOutput: true\nExplanation: \u0026#34;amanaplanacanalpanama\u0026#34; is a palindrome.\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: s = \u0026#34;race a car\u0026#34;\nOutput: false\nExplanation: \u0026#34;raceacar\u0026#34; is not a palindrome.\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: s = \u0026#34; \u0026#34;\nOutput: true\nExplanation: s is an empty string \u0026#34;\u0026#34; after removing non-alphanumeric characters.\nSince an empty string reads the same forward and backward, it is a palindrome.\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e1 \u0026lt;= s.length \u0026lt;= 2 * 10^5\u003c/li\u003e\n\u003cli\u003es¬†consists only of printable ASCII characters.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"brute-force-solution\"\u003eBrute Force Solution\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eisPalindrome\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003enewStr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisLetter\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisNumber\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003enewStr\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elowercased\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003enewStr\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewStr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereversed\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"explanation\"\u003eExplanation\u003c/h4\u003e\n\u003cp\u003eLet\u0026rsquo;s start with the brute force solution. According to the description, we need to check if the string contains only lowercase, alphanumeric characters and reads the same forward and backward. In Swift, you can check this using the built-in \u003ccode\u003eisLetter\u003c/code\u003e and \u003ccode\u003eisNumber\u003c/code\u003e properties. Based on this information, we iterate through all characters in the \u003ccode\u003es\u003c/code\u003e string, verify that each character is a letter or number, update \u003ccode\u003enewStr\u003c/code\u003e with the current \u003ccode\u003elowercased\u003c/code\u003e character, and compare the result with its \u003ccode\u003ereversed\u003c/code\u003e version.\u003c/p\u003e","title":"LeetCode - Blind 75 - Valid Palindrome"},{"content":"The Problem Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence. You must write an algorithm that runs in O(n) time.\nA consecutive sequence is a sequence of elements in which each element is exactly 1 greater than the previous element.\nExamples Input: nums = [100, 4, 200, 1, 3, 2] Output: 4 Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4. Input: nums = [0, 3, 7, 2, 5, 8, 4, 6, 0, 1] Output: 9 Constraints 0 \u0026lt;= nums.length \u0026lt;= 10^5 -10^9 \u0026lt;= nums[i] \u0026lt;= 10^9 Brute Force Solution func longestConsecutive(_ nums: [Int]) -\u0026gt; Int { var res = 0 let setOfNums: Set\u0026lt;Int\u0026gt; = Set(nums) for num in nums { var streak = 0 var curr = num while setOfNums.contains(curr) { streak += 1 curr += 1 } res = max(res, streak) } return res } Explanation Let\u0026rsquo;s start with the brute force solution. We need to increment each element by 1 to check if the incremented value exists in our input array. For example, if we have an array nums with [3, 2, 1, 100, 5], the longest consecutive sequence will be 3.\nIf you look closely at the array [3, 2, 1, 100, 5], it has a sequence of 2, 1, which when incremented forms elements that already exist in the array (1 -\u0026gt; 2, 2 -\u0026gt; 3). By counting the number of increments, you can determine the longest sequence. The solution above does exactly that:\nIterates through the array of nums Checks if the element exists in the array and updates streak by 1 Calculates the max of res and streak Returns the result This solution uses a set to avoid duplicate values, which could lead to incorrect results.\nTime/Space Complexity Time complexity: O(n^2) Space complexity: O(n) Solution - 2 - Sorting func longestConsecutive(_ nums: [Int]) -\u0026gt; Int { if nums.isEmpty { return 0 } let n = nums.count var nums = nums nums.sort() var res = 0 var curr = nums[0] var streak = 0 var i = 0 while i \u0026lt; n { if curr != nums[i] { curr = nums[i] streak = 0 } while i \u0026lt; n \u0026amp;\u0026amp; nums[i] == curr { i += 1 } streak += 1 curr += 1 res = max(res, streak) } return res } Explanation The next way to solve this problem is by sorting. Sorting will transform your array, for example [3, 2, 1, 100, 5] to [1, 2, 3, 5, 100]. In this case, the longest sequence will be on the left side of the array, so you can iterate from left to right to find the result.\nThe condition if curr != nums[i] checks if curr value is not the same as the element nums[i] and resets the streak. The following steps are similar to the brute force solution.\nTime/Space Complexity Time complexity: O(n log n) Space complexity: O(1) Solution - 3 - Optimal func longestConsecutive(_ nums: [Int]) -\u0026gt; Int { var longestSCount = 0 let setOfNums: Set\u0026lt;Int\u0026gt; = Set(nums) for num in setOfNums { if !setOfNums.contains(num - 1) { var length = 0 while setOfNums.contains(num + length) { length += 1 } longestSCount = max(length, longestSCount) } } return longestSCount } Explanation Let\u0026rsquo;s look at the optimal solution using the example input [1, 2, 3, 5, 100]. When you look at it, you can recognise patterns such as elements 2, 3 having a neighbor on the left side. If you decrement each of them by 1, you will see that values (1 \u0026lt;- 2, 2 \u0026lt;- 3) have a neighbor. After that, all you need is to calculate the length of the longest sequence.\nThis solution also uses a set to avoid duplicate values, which would cause incorrect results.\nTime/Space Complexity Time complexity: O(n) Space complexity: O(n) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-longest-consecutive-sequence/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven an unsorted array of integers \u003ccode\u003enums\u003c/code\u003e, return the length of the longest consecutive elements sequence.\nYou must write an algorithm that runs in \u003ccode\u003eO(n)\u003c/code\u003e time.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA \u003cstrong\u003econsecutive sequence\u003c/strong\u003e is a sequence of elements in which each element is exactly 1 greater than the previous element.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eInput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eOutput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eExplanation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eThe\u003c/span\u003e \u003cspan class=\"n\"\u003elongest\u003c/span\u003e \u003cspan class=\"n\"\u003econsecutive\u003c/span\u003e \u003cspan class=\"n\"\u003eelements\u003c/span\u003e \u003cspan class=\"n\"\u003esequence\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e \u003cspan class=\"n\"\u003eTherefore\u003c/span\u003e \u003cspan class=\"n\"\u003eits\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"mf\"\u003e4.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eInput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eOutput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e0 \u0026lt;= nums.length \u0026lt;= 10^5\u003c/li\u003e\n\u003cli\u003e-10^9 \u0026lt;= nums[i] \u0026lt;= 10^9\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"brute-force-solution\"\u003eBrute Force Solution\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003elongestConsecutive\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eres\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003esetOfNums\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eSet\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003estreak\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ecurr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003esetOfNums\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003estreak\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eres\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estreak\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eres\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"explanation\"\u003eExplanation\u003c/h4\u003e\n\u003cp\u003eLet\u0026rsquo;s start with the brute force solution. We need to increment each element by \u003ccode\u003e1\u003c/code\u003e to check if the incremented value exists in our input array. For example, if we have an array \u003ccode\u003enums\u003c/code\u003e with \u003ccode\u003e[3, 2, 1, 100, 5]\u003c/code\u003e, the longest consecutive sequence will be \u003ccode\u003e3\u003c/code\u003e.\u003cbr\u003e\nIf you look closely at the array \u003ccode\u003e[3, 2, 1, 100, 5]\u003c/code\u003e, it has a sequence of \u003ccode\u003e2, 1\u003c/code\u003e, which when incremented forms elements that already exist in the array \u003ccode\u003e(1 -\u0026gt; 2, 2 -\u0026gt; 3)\u003c/code\u003e. By counting the number of increments, you can determine the longest sequence. The solution above does exactly that:\u003c/p\u003e","title":"LeetCode - Blind 75 - Longest Consecutive Sequence"},{"content":"The problem Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].\nThe product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.\nYou must write an algorithm that runs in O(n) time and without using the division operation.\nExamples Input: nums = [1,2,3,4] Output: [24,12,8,6] Input: nums = [-1,1,0,-3,3] Output: [0,0,9,0,0] Constraints 2 \u0026lt;= nums.length \u0026lt;= 10^5 -30 \u0026lt;= nums[i] \u0026lt;= 30 The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer. Follow up: Can you solve the problem in O(1) extra space complexity? (The output array does not count as extra space for space complexity analysis.)\nBrute force solution func productExceptSelf(_ nums: [Int]) -\u0026gt; [Int] { let n = nums.count var res = [Int](repeating: 0, count: n) for i in 0 ..\u0026lt; n { var val = 1 for j in 0 ..\u0026lt; n { if i == j { continue } val *= nums[j] res[i] = val } } return res } Explanation The brute force solution:\nIterates through all indices i in the range from 0 to n (excluded). Creates a second loop and iterates through all indices j in the range from 0 to n (excluded). Checks if i and j indices are equal; if they are, skips the current iteration to the next one. Updates val property. Updates res property by index i and val. Returns result. Time/Space Complexity Time complexity: O(n^2) Space complexity: O(1) Solution - 2 - Division func productExceptSelf(_ nums: [Int]) -\u0026gt; [Int] { let n = nums.count var val = 1 var zeroCnt = 0 for num in nums { if num != 0 { val *= num } else { zeroCnt += 1 } } if zeroCnt \u0026gt; 1 { return [Int](repeating: 0, count: n) } var res = [Int](repeating: 0, count: n) for (i, c) in nums.enumerated() { if zeroCnt != 0 { if c != 0 { res[i] = 0 } else { res[i] = val } } else { res[i] = val / c } } return res } Explanation Solution - 2:\nIterates through all elements in input nums and multiplies val with num if the element is not equal to 0; if it is, increments zeroCnt. Checks if zeroCnt is more than 1; if it is, returns an array with 0 elements with length of n, otherwise moves to the next step. Iterates through enumerated nums and checks if zeroCnt is not equal to 0; if so, it divides val by c. If zeroCnt is 0, checks if c does not equal 0 and sets res[i] to val; if it does, sets 0 to res[i]. Returns result. Time/Space Complexity Time complexity: O(n) Space complexity: O(1) Solution - 3 - Prefix/Postfix func productExceptSelf(_ nums: [Int]) -\u0026gt; [Int] { let n = nums.count var res = [Int](repeating: 0, count: n) var prefix = [Int](repeating: 0, count: n) var suffix = [Int](repeating: 0, count: n) prefix[0] = 1 suffix[n - 1] = 1 for i in 1 ..\u0026lt; n { prefix[i] = nums[i - 1] * prefix[i - 1] } for i in stride(from: n - 2, to: -1, by: -1) { suffix[i] = nums[i + 1] * suffix[i + 1] } for i in 0 ..\u0026lt; n { res[i] = prefix[i] * suffix[i] } return res } Explanation Solution - 3:\nInitializes res, prefix, and suffix arrays. Updates the first prefix element with 1. Updates the last suffix element with 1. Iterates from 0 to n (excluded); updates prefix[i] with the product of num and prefix elements at index i - 1. Iterates in reverse from n - 2 to -1; updates suffix[i] with the product of num and suffix elements at index i + 1. Iterates from 0 to n (excluded); updates res[i] with the product of prefix and suffix elements at index i. Time/Space Complexity Time complexity: O(n) Space complexity: O(n) Solution - 4 - Prefix/Postfix (Optimized) func productExceptSelf(_ nums: [Int]) -\u0026gt; [Int] { let n = nums.count var res = [Int](repeating: 1, count: n) var prefix = 1 for i in 0 ..\u0026lt; n { res[i] = prefix prefix *= nums[i] } var postfix = 1 for i in stride(from: n - 1, to: -1, by: -1) { res[i] *= postfix postfix *= nums[i] } return res } Explanation Solution - 4:\nIterates through the range of indices from 0 to n (excluded). Sets prefix to res[i]. Multiplies prefix with the element of nums[i]. Iterates in reversed order. Sets postfix to res[i]. Multiplies postfix with the element of nums[i]. Returns result. Time/Space Complexity Time complexity: O(n) Space complexity: O(1) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-product-of-array-except-self/","summary":"\u003ch3 id=\"the-problem\"\u003eThe problem\u003c/h3\u003e\n\u003cp\u003eGiven an integer array \u003ccode\u003enums\u003c/code\u003e, return an array \u003ccode\u003eanswer\u003c/code\u003e such that \u003ccode\u003eanswer[i]\u003c/code\u003e is equal to the product of all the elements of \u003ccode\u003enums\u003c/code\u003e except \u003ccode\u003enums[i]\u003c/code\u003e.\u003cbr\u003e\nThe product of any prefix or suffix of \u003ccode\u003enums\u003c/code\u003e is guaranteed to fit in a 32-bit integer.\u003cbr\u003e\nYou must write an algorithm that runs in \u003ccode\u003eO(n)\u003c/code\u003e time and without using the division operation.\u003c/p\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: nums = [1,2,3,4]\nOutput: [24,12,8,6]\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: nums = [-1,1,0,-3,3]\nOutput: [0,0,9,0,0]\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e2 \u0026lt;= nums.length \u0026lt;= 10^5\u003c/li\u003e\n\u003cli\u003e-30 \u0026lt;= nums[i] \u0026lt;= 30\u003c/li\u003e\n\u003cli\u003eThe product of any prefix or suffix of \u003ccode\u003enums\u003c/code\u003e is guaranteed to fit in a 32-bit integer.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eFollow up: Can you solve the problem in \u003ccode\u003eO(1)\u003c/code\u003e extra space complexity? (The output array does not count as extra space for space complexity analysis.)\u003c/p\u003e","title":"LeetCode - Blind 75 - Product of Array Except Self"},{"content":"The problem Given an integer array¬†nums¬†and an integer¬†k, return the¬†k¬†most frequent elements. You may return the answer in any order.\nExamples Input: nums = [1,1,1,2,2,3], k = 2 Output: [1,2] Input: nums = [1], k = 1 Output: [1] Constraints 1 \u0026lt;= nums.length \u0026lt;= 10^5 -10^4 \u0026lt;= nums[i] \u0026lt;= 10^4 k¬†is in the range¬†[1, the number of unique elements in the array]. It is¬†guaranteed¬†that the answer is unique. Follow-up: Your algorithm\u0026rsquo;s time complexity must be better than¬†O(n log n), where n is the array\u0026rsquo;s size.\nBrute Force Solution - Sorting func topKFrequent(nums: [Int], k: Int) -\u0026gt; [Int] { var count: [Int: Int] = [:] for num in nums { if count[num] != nil { count[num]! += 1 } else { count[num] = 1 } } var arr: [Items] = [] for element in count { let item = Items(num: element.key, cnt: element.value) arr.append(item) } arr.sort() var res: [Int] = [] while res.count \u0026lt; k { res.append(arr.popLast()!.num) } return res } struct Items: Comparable { static func \u0026lt; (lhs: Items, rhs: Items) -\u0026gt; Bool { return lhs.cnt \u0026lt; rhs.cnt } let num: Int let cnt: Int } Explanation The brute force solution:\nIterates through all nums elements and determines the frequency of each element Based on count, creates arr that will later be sorted Loops through sorted arr and pops the most frequent elements until res.count is less than k Time/Space Complexity Time complexity: O(n log n), as it uses a sorting algorithm Space complexity: O(n) Solution 2 - Max Heap import Collections func topKFrequent(nums: [Int], k: Int) -\u0026gt; [Int] { var count: [Int: Int] = [:] for num in nums { if count[num] != nil { count[num]! += 1 } else { count[num] = 1 } } var maxHeap: Heap\u0026lt;Item\u0026gt; = [] for element in count { maxHeap.insert(Item(num: element.key, cnt: element.value)) if maxHeap.count \u0026gt; k { maxHeap.popMin() } } var res: [Int] = [] for _ in 0 ..\u0026lt; k { res.append(maxHeap.popMax()!.num) } return res } struct Item: Comparable { static func \u0026lt; (lhs: Item, rhs: Item) -\u0026gt; Bool { return lhs.cnt \u0026lt; rhs.cnt } let num: Int let cnt: Int } Explanation Solution 2:\nIterates through input nums and counts the frequency of each number Iterates through the count dictionary and inserts elements into the heap; if the heap size is more than k, it pops the minimum element Iterates through a range from 0 to k, pops the maximum elements, and appends them to the res array Returns the result Time/Space Complexity Time complexity: O(n log k) Space complexity:¬†O(n + k), where n is the length of the input nums and k is the number of frequent elements. Solution 3 - Bucket Sort func topKFrequent(nums: [Int], k: Int) -\u0026gt; [Int] { var count: [Int: Int] = [:] for num in nums { if count[num] != nil { count[num]! += 1 } else { count[num] = 1 } } var freq: [[Int]] = Array(repeating: [], count: nums.count + 1) for element in count { freq[element.value].append(element.key) } var res: [Int] = [] for i in stride(from: freq.count - 1, to: 0, by: -1) { for n in freq[i] { res.append(n) if res.count == k { return res } } } return res } Explanation Solution 3:\nIterates through input nums and counts the frequency of each number Iterates through the count dictionary and appends each number by its frequency Iterates in reverse order, finds the numbers, and appends them to the res array Returns the result Time/Space Complexity Time complexity: O(n) Space complexity:¬†O(n) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-top-k-frequent-elements/","summary":"\u003ch3 id=\"the-problem\"\u003eThe problem\u003c/h3\u003e\n\u003cp\u003eGiven an integer array¬†\u003ccode\u003enums\u003c/code\u003e¬†and an integer¬†\u003ccode\u003ek\u003c/code\u003e, return the¬†\u003ccode\u003ek\u003c/code\u003e¬†most frequent elements. You may return the answer in any order.\u003c/p\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: nums = [1,1,1,2,2,3], k = 2\nOutput: [1,2]\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: nums = [1], k = 1\nOutput: [1]\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e1 \u0026lt;= nums.length \u0026lt;= 10^5\u003c/li\u003e\n\u003cli\u003e-10^4 \u0026lt;= nums[i] \u0026lt;= 10^4\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ek\u003c/code\u003e¬†is in the range¬†[1, the number of unique elements in the array].\u003c/li\u003e\n\u003cli\u003eIt is¬†guaranteed¬†that the answer is unique.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eFollow-up: Your algorithm\u0026rsquo;s time complexity must be better than¬†O(n log n), where \u003ccode\u003en\u003c/code\u003e is the array\u0026rsquo;s size.\u003c/p\u003e","title":"LeetCode - Blind 75 - Top K Frequent Elements"},{"content":"The problem Given an array of strings strs, group the anagrams together. You can return the answer in any order.\nAn anagram is a word or phrase formed by rearranging the letters of a different word or phrase, using all the original letters exactly once.\nExamples Input: strs = [\u0026#34;eat\u0026#34;,\u0026#34;tea\u0026#34;,\u0026#34;tan\u0026#34;,\u0026#34;ate\u0026#34;,\u0026#34;nat\u0026#34;,\u0026#34;bat\u0026#34;] Output: [[\u0026#34;bat\u0026#34;],[\u0026#34;nat\u0026#34;,\u0026#34;tan\u0026#34;],[\u0026#34;ate\u0026#34;,\u0026#34;eat\u0026#34;,\u0026#34;tea\u0026#34;]] Explanation: * There is no string in strs that can be rearranged to form \u0026#34;bat.\u0026#34; * The strings \u0026#34;nat\u0026#34; and \u0026#34;tan\u0026#34; are anagrams as they can be rearranged to form each other. * The strings \u0026#34;ate,\u0026#34; \u0026#34;eat,\u0026#34; and \u0026#34;tea\u0026#34; are anagrams as they can be rearranged to form each other. Input: strs = [\u0026#34;\u0026#34;] Output: [[\u0026#34;\u0026#34;]] Input: strs = [\u0026#34;a\u0026#34;] Output: [[\u0026#34;a\u0026#34;]] Constraints 1 \u0026lt;= strs.length \u0026lt;= 1000 0 \u0026lt;= strs[i].length \u0026lt;= 100 strs[i] is made up of lowercase English letters. Brute force solution func groupAnagrams(_ strs: [String]) -\u0026gt; [[String]] { var res: [String: [String]] = [:] for s in strs { let sortedS = String(s.sorted()) res[sortedS, default: []].append(s) } return Array(res.values) } Explanation The brute force solution:\nUses additional space res to store the result Iterates through all input strings in strs Sorts each string Appends the current element to the res dictionary by the sortedS key Returns the result Time/Space Complexity Time complexity: O(m * n log n), where m is the length of input strs and n log n is the time complexity of the sorting algorithm, where n is the length of the longest string. Space complexity: O(m ‚àó n), as it uses additional space to store the sorted string. Solution 2 func groupAnagrams(_ strs: [String]) -\u0026gt; [[String]] { var res: [[Int]: [String]] = [:] let aAsciiValue = Character(\u0026#34;a\u0026#34;).asciiValue! for s in strs { var count = Array(repeating: 0, count: 26) for c in s { count[Int(c.asciiValue! - aAsciiValue)] += 1 } if res[count] == nil { res[count] = [s] } else { res[count]!.append(s) } } return Array(res.values) } Explanation Solution 2:\nIterates through each string in strs Iterates through every character in string s and counts its occurrences Updates the result property res Returns the result value Time/Space Complexity Time complexity: O(m * n), where m is the length of input strs and n is the length of a single string. Space complexity: O(m), where m is the number of strings. Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-group-anagrams/","summary":"\u003ch3 id=\"the-problem\"\u003eThe problem\u003c/h3\u003e\n\u003cp\u003eGiven an array of strings \u003ccode\u003estrs\u003c/code\u003e, group the anagrams together. You can return the answer in any order.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAn anagram is a word or phrase formed by rearranging the letters of a different word or phrase, using all the original letters exactly once.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: strs = [\u0026#34;eat\u0026#34;,\u0026#34;tea\u0026#34;,\u0026#34;tan\u0026#34;,\u0026#34;ate\u0026#34;,\u0026#34;nat\u0026#34;,\u0026#34;bat\u0026#34;]\nOutput: [[\u0026#34;bat\u0026#34;],[\u0026#34;nat\u0026#34;,\u0026#34;tan\u0026#34;],[\u0026#34;ate\u0026#34;,\u0026#34;eat\u0026#34;,\u0026#34;tea\u0026#34;]]\nExplanation:\n* There is no string in strs that can be rearranged to form \u0026#34;bat.\u0026#34;\n* The strings \u0026#34;nat\u0026#34; and \u0026#34;tan\u0026#34; are anagrams as they can be rearranged to form each other.\n* The strings \u0026#34;ate,\u0026#34; \u0026#34;eat,\u0026#34; and \u0026#34;tea\u0026#34; are anagrams as they can be rearranged to form each other.\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: strs = [\u0026#34;\u0026#34;]\nOutput: [[\u0026#34;\u0026#34;]]\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: strs = [\u0026#34;a\u0026#34;]\nOutput: [[\u0026#34;a\u0026#34;]]\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"constraints\"\u003eConstraints\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e1 \u0026lt;= strs.length \u0026lt;= 1000\u003c/li\u003e\n\u003cli\u003e0 \u0026lt;= strs[i].length \u0026lt;= 100\u003c/li\u003e\n\u003cli\u003estrs[i] is made up of lowercase English letters.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"brute-force-solution\"\u003eBrute force solution\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003egroupAnagrams\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003estrs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[[\u003c/span\u003e\u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[:]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003estrs\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003esortedS\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003esorted\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003esortedS\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[]].\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"explanation\"\u003eExplanation\u003c/h4\u003e\n\u003cp\u003eThe brute force solution:\u003c/p\u003e","title":"LeetCode - Blind 75 - Group Anagrams"},{"content":"The Problem Given two strings s and t, return true if t is an anagram of s, and false otherwise.\nAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, using all the original letters exactly once.\nExamples Input: s = \u0026#34;anagram\u0026#34;, t = \u0026#34;nagaram\u0026#34; Output: true Input: s = \u0026#34;rat\u0026#34;, t = \u0026#34;car\u0026#34; Output: false Follow-up: What if the inputs contain Unicode characters? How would you adapt your solution to such a case?\nBrute Force Solution func isAnagram(s: String, t: String) -\u0026gt; Bool { if s.count != t.count { return false } return s.sorted() == t.sorted() } Explanation The brute force solution is to check the lengths of s and t, and if they are not equal, return false. Otherwise, compare the sorted s and t strings and return the result.\nTime/Space Complexity Time complexity: Depends on the sorting algorithm, on average O(N log N). Space complexity: O(1) or O(N) depending on the sorting algorithm. Solution - 2 func isAnagram(s: String, t: String) -\u0026gt; Bool { if s.count != t.count { return false } var sDict: [Character: Int] = [:] var tDict: [Character: Int] = [:] for i in 0 ..\u0026lt; s.count { sDict[s[i], default: 0] += 1 tDict[t[i], default: 0] += 1 } return sDict == tDict } extension StringProtocol { subscript(offset: Int) -\u0026gt; Character { self[index(startIndex, offsetBy: offset)] } } Explanation Solution 2 has a base case that checks the lengths of s and t, and if they are not equal, it returns false. Otherwise, it iterates through all characters in s and t, storing the count of each character\u0026rsquo;s occurrence. In the final step, it returns the result of comparing the two dictionaries.\nTime/Space Complexity Time complexity: O(N) - iterates through the entire string. Space complexity: O(N) - uses additional space to store characters and their counts. Solution - 3 func isAnagram(s: String, t: String) -\u0026gt; Bool { if s.count != t.count { return false } var count: [Int] = Array(repeating: 0, count: 26) let aAsciiValue = Character(\u0026#34;a\u0026#34;).asciiValue! for char in s.utf8 { count[Int(char - aAsciiValue)] += 1 } for char in t.utf8 { count[Int(char - aAsciiValue)] -= 1 } for val in count { if val != 0 { return false } } return true } Explanation Solution 3 has a base case that checks the lengths of s and t, and if they are not equal, it returns false.\nAfter that, it iterates through the array of encoded utf8 s elements, calculates the character index, and increments the count of that specific character in s. In the next step, it iterates through the array of encoded utf8 t elements, calculates the character index, and decrements the count of that specific character. The last step is to iterate through the count array and check if any val is not equal to 0; if so, it returns false (indicating an extra character was found, and it is no longer an anagram). Time/Space Complexity Time complexity: O(N) Space complexity: O(1) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-valid-anagram/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven two strings \u003ccode\u003es\u003c/code\u003e and \u003ccode\u003et\u003c/code\u003e, return \u003ccode\u003etrue\u003c/code\u003e if \u003ccode\u003et\u003c/code\u003e is an anagram of \u003ccode\u003es\u003c/code\u003e, and \u003ccode\u003efalse\u003c/code\u003e otherwise.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, using all the original letters exactly once.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"examples\"\u003eExamples\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: s = \u0026#34;anagram\u0026#34;, t = \u0026#34;nagaram\u0026#34;\nOutput: true\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: s = \u0026#34;rat\u0026#34;, t = \u0026#34;car\u0026#34;\nOutput: false \n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFollow-up: What if the inputs contain Unicode characters? How would you adapt your solution to such a case?\u003c/p\u003e","title":"LeetCode - Blind 75 - Valid Anagram"},{"content":"The Problem Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.\nExample Input: nums = [1,2,3,1] Output: true Explanation: The element 1 occurs at indices 0 and 3. Follow-up: Can you come up with an algorithm that has less than O(NlogN) time complexity?\nBrute Force Solution func containsDuplicate(_ nums: [Int]) -\u0026gt; Bool { var nums = nums let N = nums.count if N == 0 { return false } nums.sort() var prev = nums[0] for i in 1 ..\u0026lt; N { let num = nums[i] if num == prev { return true } else { prev = num } } return false } Explanation The brute force solution for this problem uses sorting to allow us to quickly detect duplicates since identical elements will be adjacent. After sorting, it iterates through all elements, checking if the current element is equal to the previous one; if it is, it returns true immediately. If not, it updates prev. If no duplicates are detected, it returns false.\nTime/Space Complexity Time complexity: O(NlogN) or O(N^2) depending on the sorting algorithm. Space complexity: O(1) or O(N) depending on the sorting algorithm; some sorting algorithms may use additional space. Solution - 2 func containsDuplicate(_ nums: [Int]) -\u0026gt; Bool { var seen: Set\u0026lt;Int\u0026gt; = [] for num in nums { if seen.contains(num) { return true } else { seen.insert(num) } } return false } Explanation Solution - 2 is more optimized than brute force, trading memory for faster execution time.\nIt uses a seen set and iterates over nums. It checks if num has already been seen; if it has, it returns true; if not, it inserts num into the seen set. When iteration is completed, it returns false because no duplicates were found. Time/Space Complexity Time complexity: O(N) - in the worst case, the algorithm iterates over all nums. Space complexity: O(N) - extra space is needed to store seen values in a set. Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-contains-duplicate/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven an integer array \u003ccode\u003enums\u003c/code\u003e, return \u003ccode\u003etrue\u003c/code\u003e if any value appears at least twice in the array, and return \u003ccode\u003efalse\u003c/code\u003e if every element is distinct.\u003c/p\u003e\n\u003ch4 id=\"example\"\u003eExample\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: nums = [1,2,3,1]\nOutput: true\nExplanation:\nThe element 1 occurs at indices 0 and 3.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFollow-up: Can you come up with an algorithm that has less than O(NlogN) time complexity?\u003c/p\u003e\n\u003ch3 id=\"brute-force-solution\"\u003eBrute Force Solution\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003econtainsDuplicate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003enums\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eN\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eN\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eprev\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eN\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003enum\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eprev\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eprev\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"explanation\"\u003eExplanation\u003c/h4\u003e\n\u003cp\u003eThe brute force solution for this problem uses sorting to allow us to quickly detect duplicates since identical elements will be adjacent. After sorting, it iterates through all elements, checking if the current element is equal to the previous one; if it is, it returns \u003ccode\u003etrue\u003c/code\u003e immediately. If not, it updates \u003ccode\u003eprev\u003c/code\u003e. If no duplicates are detected, it returns \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e","title":"LeetCode - Blind 75 - Contains Duplicate"},{"content":"The Problem Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to the target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order.\nExample Input: nums = [2,7,11,15], target = 9 Output: [0,1] Explanation: Because nums[0] + nums[1] == 9, we return [0, 1]. Follow-up: Can you come up with an algorithm that has less than O(N^2) time complexity?\nBrute Force Solution func twoSum(nums: [Int], target: Int) -\u0026gt; [Int] { for i in 0 ..\u0026lt; nums.count { for j in i + 1 ..\u0026lt; nums.count { if nums[i] + nums[j] == target { return [i, j] } } } return [] } Explanation The brute force solution for this problem is to use two loops, iterating through all of the current and next elements, finding the sum between them, and comparing the result to the target.\nThis solution is not very efficient and has an O(N^2) time complexity.\nTime/Space Complexity Time complexity: O(N^2) Space complexity: O(1) Solution - 2 func twoSum(nums: [Int], target: Int) -\u0026gt; [Int] { var hashmap: [Int: Int] = [:] for i in 0 ..\u0026lt; nums.count { let num = nums[i] let diff = target - num if hashmap[diff] != nil { return [hashmap[diff]!, i] } hashmap[num] = i } return [] } Explanation Solution 2 has an O(N) time complexity and an O(N) space complexity by taking advantage of a hashmap. It stores i to its num value at the end of each iteration. Before storing, it calculates the diff and checks if the diff value exists in hashmap; if it does, it returns an array with the index from hashmap[diff] and the current index i.\nTime/Space Complexity Time complexity: O(N) ‚Äì because in the worst case, the algorithm needs to iterate through all elements in hashmap. Space complexity: O(N) ‚Äì because the algorithm needs additional space to store i and num. Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/leetcode-blind-75-two-sum/","summary":"\u003ch3 id=\"the-problem\"\u003eThe Problem\u003c/h3\u003e\n\u003cp\u003eGiven an array of integers \u003ccode\u003enums\u003c/code\u003e and an integer \u003ccode\u003etarget\u003c/code\u003e, return indices of the two numbers such that they add up to the \u003ccode\u003etarget\u003c/code\u003e.\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\nYou can return the answer in any order.\u003c/p\u003e\n\u003ch4 id=\"example\"\u003eExample\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eInput: nums = [2,7,11,15], target = 9\nOutput: [0,1]\nExplanation: Because nums[0] + nums[1] == 9, we return [0, 1].\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFollow-up: Can you come up with an algorithm that has less than O(N^2) time complexity?\u003c/p\u003e","title":"LeetCode - Blind 75 - Two Sum"},{"content":"Introduction The selection sort is an in-place comparison sorting algorithm. It\u0026rsquo;s similar to bubble sort in that it works by repeatedly swapping items in a list and not very efficient on larger lists.\nsource\nCode Example func selectionSort(_ array: [Int]) -\u0026gt; [Int] { var A = array let N = array.count for i in 0 ..\u0026lt; N { var jMin = i for j in (i + 1) ..\u0026lt; N { if A[j] \u0026lt; A[jMin] { jMin = j } } if jMin != i { let tmp = A[i] A[i] = A[jMin] A[jMin] = tmp } } return A } Implementation For each index:\nSet jMin index to the current index For each index from i + 1 to the end of the list: If the element at inner index j is less than the element at index jMin, set jMin to j If jMin does not equal i, swap the element at the current index i with the element at index jMin Time/Space Complexity Time complexity: O(N^2)\nSpace complexity: O(1) auxiliary\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-sorting-selection-sort/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eThe \u003ca href=\"https://en.wikipedia.org/wiki/Selection_sort\"\u003eselection sort\u003c/a\u003e is an in-place comparison sorting algorithm. It\u0026rsquo;s similar to bubble sort in that it works by repeatedly swapping items in a list and not very efficient on larger lists.\u003c/p\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-51096\" hidden\u003e\n    \u003clabel for=\"zoomCheck-51096\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/Selection-Sort-Animation.gif#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\n\u003ca href=\"https://en.wikipedia.org/wiki/Selection_sort#/media/File:Selection-Sort-Animation.gif\"\u003esource\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"code-example\"\u003eCode Example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eselectionSort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eA\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eN\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eN\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ejMin\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eN\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ejMin\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003ejMin\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ejMin\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003etmp\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ejMin\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ejMin\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"implementation\"\u003eImplementation\u003c/h4\u003e\n\u003cp\u003eFor each index:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSet \u003ccode\u003ejMin\u003c/code\u003e index to the current index\u003c/li\u003e\n\u003cli\u003eFor each index from \u003ccode\u003ei + 1\u003c/code\u003e to the end of the list:\n\u003cul\u003e\n\u003cli\u003eIf the element at inner index \u003ccode\u003ej\u003c/code\u003e is less than the element at index \u003ccode\u003ejMin\u003c/code\u003e, set \u003ccode\u003ejMin\u003c/code\u003e to \u003ccode\u003ej\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIf \u003ccode\u003ejMin\u003c/code\u003e does not equal \u003ccode\u003ei\u003c/code\u003e, swap the element at the current index \u003ccode\u003ei\u003c/code\u003e with the element at index \u003ccode\u003ejMin\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"timespace-complexity\"\u003eTime/Space Complexity\u003c/h3\u003e\n\u003cp\u003eTime complexity: O(N^2)\u003cbr\u003e\nSpace complexity: O(1) \u003ca href=\"https://en.wikipedia.org/wiki/Computer_data_storage#Secondary_storage\"\u003eauxiliary\u003c/a\u003e\u003c/p\u003e","title":"DSA - Sorting - Selection Sort"},{"content":"Introduction The quick sort is an efficient sorting algorithm commonly used widely in production. Quick sort is a divide-and-conquer algorithm. It works by selecting a pivot from the array and partitioning the other elements into two subarrays.\nsource\nCode example // Sorts a (portion of an) array, divides it into partitions, then sorts those func quickSort(array: inout [Int], low: Int, high: Int) { // Ensure indices are in correct order if low \u0026lt; high { // Partition array and get the pivot index let p = partition(array: \u0026amp;array, low: low, high: high) // Sort the two partitions quickSort(array: \u0026amp;array, low: low, high: p - 1) // Left side of pivot quickSort(array: \u0026amp;array, low: p + 1, high: high) // Right side of pivot } } // Divides array into two partitions func partition(array: inout [Int], low: Int, high: Int) -\u0026gt; Int { let pivot = array[high] // Choose the last element as the pivot // Temporary pivot index var i = low for j in low ..\u0026lt; high { // If the current element is less than or equal to the pivot if array[j] \u0026lt;= pivot { // Swap the current element with the element at the temporary pivot index let tmp = array[i] array[i] = array[j] array[j] = tmp // Move the temporary pivot index forward i += 1 } } // Swap the pivot with the last element let tmp = array[i] array[i] = array[high] array[high] = tmp return i } Implementation quickSort Ensure that the low and high indices are in the correct order. Partition the input list using the partition function. Recursively call quickSort on the left side of the pivot. Recursively call quickSort on the right side of the pivot. partition Choose the last element as the pivot. Set i to low. For each j from low to high (not inclusive), compare if the current element is less than or equal to the pivot:\n3.1 Swap the element at index i with the element at index j.\n3.2 Increment i by 1. Swap the element at index i with the last element. Return i. Time/Space complexity Time complexity: O(N^2)\nSpace complexity: O(N)\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-sorting-quick-sort/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eThe \u003ca href=\"https://en.wikipedia.org/wiki/Quicksort\"\u003equick sort\u003c/a\u003e is an efficient sorting algorithm commonly used widely in production. Quick sort is a \u003ca href=\"https://en.wikipedia.org/wiki/Divide-and-conquer_algorithm\"\u003edivide-and-conquer algorithm\u003c/a\u003e. It works by selecting a pivot from the array and partitioning the other elements into two subarrays.\u003c/p\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-a81ce\" hidden\u003e\n    \u003clabel for=\"zoomCheck-a81ce\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/Sorting_quicksort_anim.gif#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\n\u003ca href=\"https://en.wikipedia.org/wiki/Quicksort#/media/File:Sorting_quicksort_anim.gif\"\u003esource\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"code-example\"\u003eCode example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Sorts a (portion of an) array, divides it into partitions, then sorts those\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003equickSort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kr\"\u003einout\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003elow\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ehigh\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// Ensure indices are in correct order\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elow\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ehigh\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// Partition array and get the pivot index\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003ep\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003epartition\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elow\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003elow\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ehigh\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ehigh\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// Sort the two partitions\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003equickSort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elow\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003elow\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ehigh\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Left side of pivot\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003equickSort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elow\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ehigh\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ehigh\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Right side of pivot\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Divides array into two partitions\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003epartition\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kr\"\u003einout\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003elow\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ehigh\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003epivot\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ehigh\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Choose the last element as the pivot\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// Temporary pivot index\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elow\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003elow\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ehigh\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// If the current element is less than or equal to the pivot\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003epivot\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"c1\"\u003e// Swap the current element with the element at the temporary pivot index\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003etmp\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"c1\"\u003e// Move the temporary pivot index forward\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// Swap the pivot with the last element\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003etmp\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ehigh\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ehigh\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"implementation\"\u003eImplementation\u003c/h4\u003e\n\u003ch5 id=\"quicksort\"\u003equickSort\u003c/h5\u003e\n\u003col\u003e\n\u003cli\u003eEnsure that the \u003ccode\u003elow\u003c/code\u003e and \u003ccode\u003ehigh\u003c/code\u003e indices are in the correct order.\u003c/li\u003e\n\u003cli\u003ePartition the input list using the \u003ccode\u003epartition\u003c/code\u003e function.\u003c/li\u003e\n\u003cli\u003eRecursively call \u003ccode\u003equickSort\u003c/code\u003e on the left side of the pivot.\u003c/li\u003e\n\u003cli\u003eRecursively call \u003ccode\u003equickSort\u003c/code\u003e on the right side of the pivot.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch5 id=\"partition\"\u003epartition\u003c/h5\u003e\n\u003col\u003e\n\u003cli\u003eChoose the last element as the pivot.\u003c/li\u003e\n\u003cli\u003eSet \u003ccode\u003ei\u003c/code\u003e to \u003ccode\u003elow\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFor each \u003ccode\u003ej\u003c/code\u003e from \u003ccode\u003elow\u003c/code\u003e to \u003ccode\u003ehigh\u003c/code\u003e (not inclusive), compare if the current element is less than or equal to the pivot:\u003cbr\u003e\n3.1 Swap the element at index \u003ccode\u003ei\u003c/code\u003e with the element at index \u003ccode\u003ej\u003c/code\u003e.\u003cbr\u003e\n3.2 Increment \u003ccode\u003ei\u003c/code\u003e by \u003ccode\u003e1\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eSwap the element at index \u003ccode\u003ei\u003c/code\u003e with the last element.\u003c/li\u003e\n\u003cli\u003eReturn \u003ccode\u003ei\u003c/code\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"timespace-complexity\"\u003eTime/Space complexity\u003c/h3\u003e\n\u003cp\u003eTime complexity: O(N^2)\u003cbr\u003e\nSpace complexity: O(N)\u003c/p\u003e","title":"DSA - Sorting - Quick Sort"},{"content":"Introduction The insertion sort algorithm builds a sorted list one item at a time by comparison. It is more efficient on small datasets but much less efficient on larger ones.\nsource\nsource\nCode Example func insertionSort(_ array: [Int]) -\u0026gt; [Int] { var A = array for i in 0 ..\u0026lt; A.count { var j = i while j \u0026gt; 0 \u0026amp;\u0026amp; A[j - 1] \u0026gt; A[j] { let tmp = A[j] A[j] = A[j - 1] A[j - 1] = tmp j -= 1 } } return A } Implementation For each index in the input array: Set the j variable to i. Loop while j is greater than 0 and the element at index j - 1 is greater than the element at index j: Swap the elements at index j and j - 1. Decrement j by 1. Why use Insertion Sort? Fast for small data sets. More efficient in practice than most other algorithms, such as selection sort or bubble sort. Adaptive: Efficient for datasets that are already substantially sorted; the time complexity is O(kn) when each element in the input is no more than k places away from its sorted position. Stable: Does not change the relative order of elements with equal keys. In-place: Only requires O(1) of additional memory space. Online: Can sort a list as it receives it. Time/Space Complexity Time: O(N^2) Space: O(1) (in-place) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-sorting-insertion-sort/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eThe \u003ca href=\"https://en.wikipedia.org/wiki/Insertion_sort\"\u003einsertion sort\u003c/a\u003e algorithm builds a sorted list one item at a time \u003ca href=\"https://en.wikipedia.org/wiki/Comparison_sort\"\u003eby comparison\u003c/a\u003e. It is more efficient on small datasets but much less efficient on larger ones.\u003c/p\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-6d2b5\" hidden\u003e\n    \u003clabel for=\"zoomCheck-6d2b5\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/Insertion_sort.gif#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\n\u003ca href=\"https://en.wikipedia.org/wiki/Insertion_sort#/media/File:Insertion_sort.gif\"\u003esource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-0b710\" hidden\u003e\n    \u003clabel for=\"zoomCheck-0b710\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/Insertion-sort-example-300px.gif#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\n\u003ca href=\"https://en.wikipedia.org/wiki/Insertion_sort#/media/File:Insertion-sort-example-300px.gif\"\u003esource\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"code-example\"\u003eCode Example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003einsertionSort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eA\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003ecount\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ej\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003etmp\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"implementation\"\u003eImplementation\u003c/h4\u003e\n\u003col\u003e\n\u003cli\u003eFor each index in the input array:\n\u003col\u003e\n\u003cli\u003eSet the \u003ccode\u003ej\u003c/code\u003e variable to \u003ccode\u003ei\u003c/code\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003eLoop while \u003ccode\u003ej\u003c/code\u003e is greater than \u003ccode\u003e0\u003c/code\u003e and the element at index \u003ccode\u003ej - 1\u003c/code\u003e is greater than the element at index \u003ccode\u003ej\u003c/code\u003e:\n\u003col\u003e\n\u003cli\u003eSwap the elements at index \u003ccode\u003ej\u003c/code\u003e and \u003ccode\u003ej - 1\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eDecrement \u003ccode\u003ej\u003c/code\u003e by 1.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"why-use-insertion-sort\"\u003eWhy use Insertion Sort?\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eFast for small data sets. More efficient in practice than most other algorithms, such as selection sort or bubble sort.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Adaptive_sort\"\u003eAdaptive\u003c/a\u003e: Efficient for datasets that are already substantially sorted; the time complexity is O(kn) when each element in the input is no more than \u003cem\u003ek\u003c/em\u003e places away from its sorted position.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Stable_sort\"\u003eStable\u003c/a\u003e: Does not change the relative order of elements with equal keys.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/In-place_algorithm\"\u003eIn-place\u003c/a\u003e: Only requires O(1) of additional memory space.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Online_algorithm\"\u003eOnline\u003c/a\u003e: Can sort a list as it receives it.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"timespace-complexity\"\u003eTime/Space Complexity\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eTime: O(N^2)\u003c/li\u003e\n\u003cli\u003eSpace: O(1) (in-place)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"thank-you-for-reading-\"\u003eThank you for reading! üòä\u003c/h4\u003e","title":"DSA - Sorting - Insertion Sort"},{"content":"What is Merge Sort? Merge sort is a recursive algorithm that uses the divide and conquer algorithm design paradigm to find the solution.\nsource\nThe merge sort conceptually consists of two separate functions: mergeSort and merge. It works as follows:\nDivide the unsorted list into two equal halves. Recursively sort the two halves. Merge the two halves to form a sorted array. There are multiple implementations of merge sort. I will be focusing on the top-down implementation using lists.\nCode Example func mergeSort(_ array: [Int]) -\u0026gt; [Int] { if array.count \u0026lt; 2 { return array } let sortedLeftSide = mergeSort(Array(array[0 ..\u0026lt; array.count / 2])) let sortedRightSide = mergeSort(Array(array[array.count / 2 ..\u0026lt; array.count])) return merge(sortedLeftSide, sortedRightSide) } func merge(_ first: [Int], _ second: [Int]) -\u0026gt; [Int] { var result: [Int] = [] var i = 0 var j = 0 while i \u0026lt; first.count \u0026amp;\u0026amp; j \u0026lt; second.count { if first[i] \u0026lt;= second[j] { result.append(first[i]) i += 1 } else { result.append(second[j]) j += 1 } } while i \u0026lt; first.count { result.append(first[i]) i += 1 } while j \u0026lt; second.count { result.append(second[j]) j += 1 } return result } Explanation mergeSort method: If the array‚Äôs count is less than 2, it means the array is already sorted and is returned as-is. Splits the array into two halves down the middle. Recursively calls the mergeSort method on the left side of the split array. Recursively calls the mergeSort method on the right side of the split array. Returns the result of the merge method with sortedLeftSide and sortedRightSide properties. merge method: Creates a result list of integers. Sets i and j pointers to zero. Uses a loop to iterate over both the first and second input arrays. If an element in first is less than or equal to the respective element in second, it adds it to the final list and increments i. Otherwise, it adds the item from second to the final list and increments j. After comparing all the items, if there are any leftover elements in either first or second, it adds them to the result. Time Complexity This algorithm has a time complexity of O(n log n).\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-sorting-merge-sort/","summary":"\u003ch3 id=\"what-is-merge-sort\"\u003eWhat is Merge Sort?\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Merge_sort\"\u003eMerge sort\u003c/a\u003e is a recursive algorithm that uses the \u003ca href=\"https://en.wikipedia.org/wiki/Divide-and-conquer_algorithm\"\u003edivide and conquer\u003c/a\u003e algorithm design paradigm to find the solution.\u003c/p\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-438f5\" hidden\u003e\n    \u003clabel for=\"zoomCheck-438f5\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/Merge-sort-example-300px.gif#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\n\u003ca href=\"https://en.wikipedia.org/wiki/Merge_sort#/media/File:Merge-sort-example-300px.gif\"\u003esource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThe merge sort conceptually consists of two separate functions: \u003ccode\u003emergeSort\u003c/code\u003e and \u003ccode\u003emerge\u003c/code\u003e. It works as follows:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDivide the unsorted list into two equal halves.\u003c/li\u003e\n\u003cli\u003eRecursively sort the two halves.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Merge_algorithm\"\u003eMerge\u003c/a\u003e the two halves to form a sorted array.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThere are multiple implementations of merge sort. I will be focusing on the \u003ca href=\"https://en.wikipedia.org/wiki/Merge_sort#Top-down_implementation_using_lists\"\u003etop-down implementation using lists\u003c/a\u003e.\u003c/p\u003e","title":"DSA - Sorting - Merge Sort"},{"content":"What is the Bubble Sort Algorithm? The bubble sort is a basic sorting algorithm named after the way elements progressively \u0026ldquo;bubble up\u0026rdquo; to the top of the list.\nsource\nCode Example func bubbleSort(_ array: [Int]) -\u0026gt; [Int] { var A = array var N = array.count var swapping = true while swapping { swapping = false for i in 1 ..\u0026lt; N { if A[i - 1] \u0026gt; A[i] { let tmp = A[i - 1] A[i - 1] = A[i] A[i] = tmp swapping = true } } N -= 1 } return A } Implementation The bubble sort uses an loop and swapping property to control it behaviour. Inside the loop, it iterates over all elements, comparing the current and next elements. If the current element is greater than the next, it swaps them.\nThe example above uses optimized bubble sort, where the inner loop avoids looking at the last¬†n¬†‚àí 1 items when running for the¬†n-th time, resulting in about a 50% improvement in the worst-case scenario.\nTime/Space Complexity Bubble sort has a worst-case and average time complexity of¬†O(n¬≤), where¬†n¬†is the number of items being sorted.\nThe worst-case space complexity is O(n) total, O(1) auxiliary.\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-sorting-bubble-sort/","summary":"\u003ch3 id=\"what-is-the-bubble-sort-algorithm\"\u003eWhat is the Bubble Sort Algorithm?\u003c/h3\u003e\n\u003cp\u003eThe \u003ca href=\"https://en.wikipedia.org/wiki/Bubble_sort\"\u003ebubble sort\u003c/a\u003e is a basic sorting algorithm named after the way elements progressively \u0026ldquo;bubble up\u0026rdquo; to the top of the list.\u003c/p\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-ec9d1\" hidden\u003e\n    \u003clabel for=\"zoomCheck-ec9d1\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/Bubble-sort-example-300px.gif#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\n\u003ca href=\"https://en.wikipedia.org/wiki/Bubble_sort#/media/File:Bubble-sort-example-300px.gif\"\u003esource\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"code-example\"\u003eCode Example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ebubbleSort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eA\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eN\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eswapping\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003eswapping\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eswapping\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e..\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eN\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003etmp\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eswapping\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eN\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"implementation\"\u003eImplementation\u003c/h4\u003e\n\u003cp\u003eThe bubble sort uses an loop and \u003ccode\u003eswapping\u003c/code\u003e property to control it behaviour. Inside the loop, it iterates over all elements, comparing the current and next elements. If the current element is greater than the next, it swaps them.\u003c/p\u003e","title":"DSA - Sorting - Bubble Sort"},{"content":"Introduction Previously, we discussed a custom hashmap implementation. That implementation has a lot of collisions because we are using a fixed-size array.\nIf we want to reduce the chances of collisions, we can increase the number of slots in the hashmap, or in other words, resize our hashmap. Resizing cannot guarantee that collisions will be entirely eliminated, but it will help reduce the likelihood of one happening.\nCode Example private func loadFactor() -\u0026gt; Double? { if self.hashMap.isEmpty { return nil } else { var filledSlots = 0 for slot in self.hashMap { if slot != nil { filledSlots += 1 } } return Double(filledSlots / self.hashMap.count) } } private func resize() { if self.hashMap.isEmpty { self.hashMap = [nil] return } guard let load = self.loadFactor() else { return } if load \u0026lt; 0.05 { return } let oldHashMap = self.hashMap self.hashMap = Array(repeating: nil, count: oldHashMap.count * 10) for kvp in oldHashMap { if let kvp = kvp { self.insert(key: kvp.key, value: kvp.value) } } } Implementation When resizing, we create a new hashmap with a larger number of slots. Then, we re-insert all the key-value pairs from the old hashmap into the new one.\nThe resize method requires a helper function, load factor, which determines the number of filled buckets as a percentage of the total number of buckets.\nAs for the resize algorithm, it checks if the underlying hashmap is empty. If it is, it creates a new hashmap with a length of 1. It then gets the current load, and if it\u0026rsquo;s more than 5%, it creates a new empty array hashmap with 10x the size of the current one. After that, it uses the insert method to re-insert all key-value pairs from the old hashmap into the new one.\nThe final step is to update the insert method and perform a resize check before inserting to ensure there is enough space.\nComplete Code Example final class HashMap\u0026lt;Key: StringProtocol, Value\u0026gt; { private(set) var hashMap: [(key: Key, value: Value)?] init(size: Int) { self.hashMap = Array(repeating: nil, count: size) } func getValue(by key: Key) -\u0026gt; Value? { let index = hashFunction(key: key) return self.hashMap[index]?.value } func insert(key: Key, value: Value) { self.resize() let index = hashFunction(key: key) self.hashMap[index] = (key, value) } private func hashFunction(key: Key) -\u0026gt; Int { var count = 0 for element in key.unicodeScalars { count += Int(element.value) } return count % self.hashMap.count } private func resize() { if self.hashMap.isEmpty { self.hashMap = [nil] return } guard let load = self.loadFactor() else { return } if load \u0026lt; 0.05 { return } let oldHashMap = self.hashMap self.hashMap = Array(repeating: nil, count: oldHashMap.count * 10) for kvp in oldHashMap { if let kvp = kvp { self.insert(key: kvp.key, value: kvp.value) } } } private func loadFactor() -\u0026gt; Double? { if self.hashMap.isEmpty { return nil } else { var filledSlots = 0 for slot in self.hashMap { if slot != nil { filledSlots += 1 } } return Double(filledSlots / self.hashMap.count) } } } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-hashmap-resize/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003ePreviously, we discussed a \u003ca href=\"https://open.substack.com/pub/dmytrosblog/p/dsa-hashmap-custom-implementation?r=2fepxg\u0026amp;utm_campaign=post\u0026amp;utm_medium=web\u0026amp;showWelcomeOnShare=true\"\u003ecustom hashmap implementation\u003c/a\u003e. That implementation has a lot of \u003ca href=\"https://en.wikipedia.org/wiki/Hash_collision\"\u003ecollisions\u003c/a\u003e because we are using a fixed-size array.\u003c/p\u003e\n\u003cp\u003eIf we want to reduce the chances of \u003ccode\u003ecollisions\u003c/code\u003e, we can increase the number of slots in the hashmap, or in other words, \u003ccode\u003eresize\u003c/code\u003e our hashmap. Resizing cannot guarantee that collisions will be entirely eliminated, but it will help reduce the likelihood of one happening.\u003c/p\u003e\n\u003ch3 id=\"code-example\"\u003eCode Example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eloadFactor\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehashMap\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003eisEmpty\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003efilledSlots\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eslot\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehashMap\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eslot\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003efilledSlots\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efilledSlots\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehashMap\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eresize\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehashMap\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003eisEmpty\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehashMap\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eguard\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eload\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eloadFactor\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eload\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.05\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eoldHashMap\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehashMap\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehashMap\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erepeating\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"bp\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eoldHashMap\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ekvp\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eoldHashMap\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003ekvp\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ekvp\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ekvp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ekvp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"implementation\"\u003eImplementation\u003c/h4\u003e\n\u003cp\u003eWhen resizing, we create a \u003ccode\u003enew hashmap\u003c/code\u003e with a \u003ccode\u003elarger number of slots\u003c/code\u003e. Then, we \u003ccode\u003ere-insert\u003c/code\u003e all the key-value pairs from the \u003ccode\u003eold hashmap\u003c/code\u003e into the \u003ccode\u003enew\u003c/code\u003e one.\u003c/p\u003e","title":"DSA - Hashmap - Resize"},{"content":"Introduction Let\u0026rsquo;s take a closer look at a HashMap implementation by building it without using the built-in dictionary in Swift. The HashMap will use a fixed-size array underneath the hash function that will transform the key into an index. In this example, the hash function is based on taking the modulo of the sum of all key.unicodeScalars integer values with the size of the array.\nCode Example final class HashMap\u0026lt;Key: StringProtocol, Value\u0026gt; { private var hashMap: [(key: Key, value: Value)?] init(size: Int) { self.hashMap = Array(repeating: nil, count: size) } private func hashFunction(key: Key) -\u0026gt; Int { var count = 0 for element in key.unicodeScalars { count += Int(element.value) } return count % self.hashMap.count } } Insert The insert operation uses the index provided by the hashFunction and sets the value at this index.\nfunc insert(key: Key, value: Value) { let index = hashFunction(key: key) self.hashMap[index] = (key, value) } Get The get operation uses the index provided by the hashFunction and retrieves the value at this index.\nfunc getValue(by key: Key) -\u0026gt; Value? { let index = hashFunction(key: key) return self.hashMap[index]?.value } Complete Code Example final class HashMap\u0026lt;Key: StringProtocol, Value\u0026gt; { private var hashMap: [(key: Key, value: Value)?] init(size: Int) { self.hashMap = Array(repeating: nil, count: size) } func getValue(by key: Key) -\u0026gt; Value? { let index = hashFunction(key: key) return self.hashMap[index]?.value } func insert(key: Key, value: Value) { let index = hashFunction(key: key) self.hashMap[index] = (key, value) } private func hashFunction(key: Key) -\u0026gt; Int { var count = 0 for element in key.unicodeScalars { count += Int(element.value) } return count % self.hashMap.count } } Time/Space Complexity Time complexity in Big O notation:\nOperation Average Worst Case Insert Œò(1) O(n) Space complexity: Œò(n)\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-hashmap-custom-implementation/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eLet\u0026rsquo;s take a closer look at a HashMap implementation by building it without using the built-in dictionary in Swift. The HashMap will use a fixed-size array underneath the hash function that will transform the \u003ccode\u003ekey\u003c/code\u003e into an \u003ccode\u003eindex\u003c/code\u003e. In this example, the hash function is based on taking the modulo of the sum of all \u003ccode\u003ekey.unicodeScalars\u003c/code\u003e integer values with the size of the array.\u003c/p\u003e\n\u003ch3 id=\"code-example\"\u003eCode Example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003efinal\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHashMap\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eKey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eStringProtocol\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ehashMap\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eKey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e)?]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehashMap\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erepeating\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"bp\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ehashFunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eKey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ecount\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eelement\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eunicodeScalars\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eelement\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehashMap\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"insert\"\u003eInsert\u003c/h3\u003e\n\u003cp\u003eThe insert operation uses the \u003ccode\u003eindex\u003c/code\u003e provided by the \u003ccode\u003ehashFunction\u003c/code\u003e and sets the value at this \u003ccode\u003eindex\u003c/code\u003e.\u003c/p\u003e","title":"DSA - HashMap - Custom Implementation"},{"content":"What is Hashmap (aka Hash Table)? A hashmap is a data structure that implements an associative array, also called a dictionary. An associative array maps keys to values. A hash table uses a hash function to compute an index, also called a hash code, into an array of buckets or slots, from which the desired value can be found. During a lookup, the key is hashed, and the resulting hash indicates where the corresponding value is stored.\nIdeally, the hash function will assign each key to a unique bucket, but most hash tables are designed to employ an imperfect hash function, which might cause hash collisions, where the hash function generates the same index for more than one key. Therefore, collisions must typically be accommodated in some way.\nCode Example Here is an example in Swift, using the built-in hashmap implementation called a dictionary.\nlet p: [String: Int] = [ \u0026#34;Michael Jordan\u0026#34;: 23, \u0026#34;Kobe Bryant\u0026#34;: 24, \u0026#34;LeBron James\u0026#34;: 6 ] Time/Space Complexity Time complexity Operation Average Worst case Search Œò(1) O(n) Insert Œò(1) O(n) Delete Œò(1) O(n) Space complexity Space Average Worst case Space Œò(n) O(n) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-hashmap/","summary":"\u003ch3 id=\"what-is-hashmap-aka-hash-table\"\u003eWhat is Hashmap (aka Hash Table)?\u003c/h3\u003e\n\u003cp\u003eA \u003ca href=\"https://en.wikipedia.org/wiki/Hash_table\"\u003ehashmap\u003c/a\u003e is a data structure that implements an associative array, also called a dictionary. An associative array maps keys to values. A hash table uses a \u003ca href=\"https://en.wikipedia.org/wiki/Hash_function\"\u003ehash function\u003c/a\u003e to compute an index, also called a \u003ccode\u003ehash code\u003c/code\u003e, into an array of \u003ccode\u003ebuckets or slots\u003c/code\u003e, from which the desired value can be found. During a lookup, the \u003ccode\u003ekey\u003c/code\u003e is hashed, and the resulting hash indicates where the corresponding value is stored.\u003c/p\u003e","title":"DSA - Hashmap"},{"content":"What is a Red-Black Tree? A Red-Black tree is a self-balancing binary search tree data structure. When the tree is modified, the new tree is rearranged and \u0026ldquo;repainted\u0026rdquo; to restore the coloring properties that constrain how unbalanced the tree can become in the worst case.\nsource\nProperties A Red-Black tree has all binary search tree properties, with some additional properties:\nEvery node is either red or black. All nil nodes are considered black. A red node does not have a red child. If a node is red, then both its children are black. Every path from a given node to any of its descendant nil nodes goes through the same number of black nodes. Time Complexity The (re-)balancing is not perfect, but guarantees searching in O(log n) time, where n is the number of entries in the tree. The insert and delete operations, along with tree rearrangement and recoloring, also execute in O(log n) time.\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-red-black-tree/","summary":"\u003ch3 id=\"what-is-a-red-black-tree\"\u003eWhat is a Red-Black Tree?\u003c/h3\u003e\n\u003cp\u003eA \u003ca href=\"https://en.wikipedia.org/wiki/Red%E2%80%93black_tree\"\u003eRed-Black tree\u003c/a\u003e is a \u003ca href=\"https://en.wikipedia.org/wiki/Self-balancing_binary_search_tree\"\u003eself-balancing\u003c/a\u003e binary search tree data structure. When the tree is modified, the new tree is rearranged and \u0026ldquo;repainted\u0026rdquo; to restore the coloring properties that constrain how unbalanced the tree can become in the worst case.\u003cbr\u003e\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-197fb\" hidden\u003e\n    \u003clabel for=\"zoomCheck-197fb\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/Red-black_tree_example.png\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003cbr\u003e\n\u003ca href=\"https://upload.wikimedia.org/wikipedia/commons/4/41/Red-black_tree_example_with_NIL.svg\"\u003esource\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"properties\"\u003eProperties\u003c/h3\u003e\n\u003cp\u003eA Red-Black tree has all binary search tree properties, with some additional properties:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eEvery node is either \u003ccode\u003ered\u003c/code\u003e or \u003ccode\u003eblack\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eAll \u003ccode\u003enil\u003c/code\u003e nodes are considered \u003ccode\u003eblack\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eA \u003ccode\u003ered\u003c/code\u003e node does not have a \u003ccode\u003ered\u003c/code\u003e child.\u003c/li\u003e\n\u003cli\u003eIf a node is \u003ccode\u003ered\u003c/code\u003e, then both its children are \u003ccode\u003eblack\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eEvery path from a given node to any of its descendant \u003ccode\u003enil\u003c/code\u003e nodes goes through the same number of \u003ccode\u003eblack\u003c/code\u003e nodes.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"time-complexity\"\u003eTime Complexity\u003c/h3\u003e\n\u003cp\u003eThe (re-)balancing is not perfect, but guarantees searching in O(log n) time, where n is the number of entries in the tree. The insert and delete operations, along with tree rearrangement and recoloring, also execute in O(log n) time.\u003c/p\u003e","title":"DSA - Red-Black Tree"},{"content":"What is the BST inorder algorithm? The inorder algorithm returns values in ascending order (sorted from smallest to the largest value).\nCode example final class BSTNode\u0026lt;Value: Comparable\u0026gt; { var val: Value? var left: BSTNode? var right: BSTNode? init(val: Value? = nil) { self.val = val } func inorder(_ visited: inout [Value]) -\u0026gt; [Value] { if self.left != nil { self.left!.inorder(\u0026amp;visited) } if self.val != nil { visited.append(self.val!) } if self.right != nil { self.right!.inorder(\u0026amp;visited) } return visited } } Implementation The inorder algorithm:\nRecursively traverse the left subtree. Visit the current node. Recursively traverse the right subtree. Time/Space complexity The time complexity of the inorder algorithm is O(N), where N is the total number of nodes. The space complexity:\nO(1) if recursion stack space is not considered. Otherwise, O(H), where H is the height of the tree. In the worst case, H can be the same as N (when the tree is skewed). In the best case, H can be the same as logN (when the tree is complete). Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-binary-search-tree-inorder/","summary":"\u003ch3 id=\"what-is-the-bst-inorder-algorithm\"\u003eWhat is the BST inorder algorithm?\u003c/h3\u003e\n\u003cp\u003eThe inorder algorithm returns values in ascending order (sorted from smallest to the largest value).\u003c/p\u003e\n\u003ch3 id=\"code-example\"\u003eCode example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003efinal\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eComparable\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003einorder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003evisited\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kr\"\u003einout\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e!.\u003c/span\u003e\u003cspan class=\"n\"\u003einorder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003evisited\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003evisited\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e!)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e!.\u003c/span\u003e\u003cspan class=\"n\"\u003einorder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003evisited\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003evisited\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"implementation\"\u003eImplementation\u003c/h4\u003e\n\u003cp\u003eThe inorder algorithm:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eRecursively traverse the \u003ccode\u003eleft\u003c/code\u003e subtree.\u003c/li\u003e\n\u003cli\u003eVisit the current node.\u003c/li\u003e\n\u003cli\u003eRecursively traverse the \u003ccode\u003eright\u003c/code\u003e subtree.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"timespace-complexity\"\u003eTime/Space complexity\u003c/h3\u003e\n\u003cp\u003eThe time complexity of the inorder algorithm is O(N), where N is the total number of nodes.\nThe space complexity:\u003c/p\u003e","title":"DSA - Binary Search Tree - Inorder"},{"content":"Code Example final class BSTNode\u0026lt;Value: Comparable\u0026gt; { var val: Value? var left: BSTNode? var right: BSTNode? init(val: Value? = nil) { self.val = val } func exists(_ val: Value) -\u0026gt; Bool { // 1 guard let selfVal = self.val else { return false } // 2 if self.val == val { return true } // 3 if val \u0026lt; self.val! { if self.left == nil { return false } return self.left!.exists(val) } // 4 if self.right == nil { return false } // 5 return self.right!.exists(val) } } Implementation The exists algorithm:\nCheck if self.val exists. If it does not exist, return false. If it does, move to the next step. Compare self.val with the input value. If the values are equal, return true. If they are not equal, move to the next step. If the input val is less than self.val, and the left node exists, return a recursive call of the exists method on the left node; otherwise, return false. If the input val is greater than self.val, move to the next step. Check if the right node exists. If it does not exist, return false. If it does exist, move to the next step. Return a recursive call of the exists method on the right node. Time/Space Complexity Time complexity: The time complexity of the exists algorithm is O(N), where N is the total number of nodes. Space complexity: O(1) if recursion stack space is not considered. Otherwise, O(H), where H is the height of the tree. In the worst case, H can be the same as N (when the tree is skewed). In the best case, H can be the same as log N (when the tree is complete). Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-binary-search-tree-exists/","summary":"\u003ch3 id=\"code-example\"\u003eCode Example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003efinal\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eComparable\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// 1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eguard\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eselfVal\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// 2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// 3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e!\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e!.\u003c/span\u003e\u003cspan class=\"n\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// 4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// 5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e!.\u003c/span\u003e\u003cspan class=\"n\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"implementation\"\u003eImplementation\u003c/h4\u003e\n\u003cp\u003eThe \u003ccode\u003eexists\u003c/code\u003e algorithm:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCheck if \u003ccode\u003eself.val\u003c/code\u003e exists. If it does not exist, return \u003ccode\u003efalse\u003c/code\u003e. If it does, move to the next step.\u003c/li\u003e\n\u003cli\u003eCompare \u003ccode\u003eself.val\u003c/code\u003e with the input value. If the values are equal, return \u003ccode\u003etrue\u003c/code\u003e. If they are not equal, move to the next step.\u003c/li\u003e\n\u003cli\u003eIf the input \u003ccode\u003eval\u003c/code\u003e is less than \u003ccode\u003eself.val\u003c/code\u003e, and the \u003ccode\u003eleft\u003c/code\u003e node exists, return a recursive call of the \u003ccode\u003eexists\u003c/code\u003e method on the \u003ccode\u003eleft\u003c/code\u003e node; otherwise, return \u003ccode\u003efalse\u003c/code\u003e. If the input \u003ccode\u003eval\u003c/code\u003e is greater than \u003ccode\u003eself.val\u003c/code\u003e, move to the next step.\u003c/li\u003e\n\u003cli\u003eCheck if the \u003ccode\u003eright\u003c/code\u003e node exists. If it does not exist, return \u003ccode\u003efalse\u003c/code\u003e. If it does exist, move to the next step.\u003c/li\u003e\n\u003cli\u003eReturn a recursive call of the \u003ccode\u003eexists\u003c/code\u003e method on the \u003ccode\u003eright\u003c/code\u003e node.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"timespace-complexity\"\u003eTime/Space Complexity\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eTime complexity:\u003c/strong\u003e The time complexity of the \u003ccode\u003eexists\u003c/code\u003e algorithm is O(N), where N is the total number of nodes.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSpace complexity:\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eO(1) if recursion stack space is not considered.\u003c/li\u003e\n\u003cli\u003eOtherwise, O(H), where H is the height of the tree.\u003c/li\u003e\n\u003cli\u003eIn the worst case, H can be the same as N (when the tree is skewed).\u003c/li\u003e\n\u003cli\u003eIn the best case, H can be the same as log N (when the tree is complete).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"thank-you-for-reading-\"\u003eThank you for reading! üòä\u003c/h4\u003e","title":"DSA - Binary Search Tree - Exists"},{"content":"What is the postorder algorithm? The postorder algorithm, similar to the preorder algorithm, returns a list of values in the order they are visited.\nCode Example final class BSTNode\u0026lt;Value: Comparable\u0026gt; { var val: Value? var left: BSTNode? var right: BSTNode? init(val: Value? = nil) { self.val = val } func postorder(_ visited: inout [Value]) -\u0026gt; [Value] { if self.left != nil { self.left!.postorder(\u0026amp;visited) } if self.right != nil { self.right!.postorder(\u0026amp;visited) } if self.val != nil { visited.append(self.val!) } return visited } } Implementation The postorder algorithm:\nRecursively traverse the current node\u0026rsquo;s left subtree. Recursively traverse the current node\u0026rsquo;s right subtree. Visit the current node. Time/Space Complexity The time complexity of the postorder algorithm is O(N), where N is the total number of nodes. The space complexity: O(1) if recursion stack space is not considered. Otherwise, O(H), where H is the height of the tree. In the worst case, H can be the same as N (when the tree is skewed). In the best case, H can be the same as logN (when the tree is complete). Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-binary-search-tree-postorder/","summary":"\u003ch3 id=\"what-is-the-postorder-algorithm\"\u003eWhat is the postorder algorithm?\u003c/h3\u003e\n\u003cp\u003eThe postorder algorithm, similar to the \u003ca href=\"https://open.substack.com/pub/dmytrosblog/p/dsa-binary-search-tree-traverse-preorder?r=2fepxg\u0026amp;utm_campaign=post\u0026amp;utm_medium=web\u0026amp;showWelcomeOnShare=true\"\u003epreorder\u003c/a\u003e algorithm, returns a list of values in the order they are visited.\u003c/p\u003e\n\u003ch3 id=\"code-example\"\u003eCode Example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003efinal\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eComparable\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003epostorder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003evisited\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kr\"\u003einout\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e!.\u003c/span\u003e\u003cspan class=\"n\"\u003epostorder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003evisited\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e!.\u003c/span\u003e\u003cspan class=\"n\"\u003epostorder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003evisited\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003evisited\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e!)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003evisited\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"implementation\"\u003eImplementation\u003c/h4\u003e\n\u003cp\u003eThe postorder algorithm:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eRecursively traverse the current node\u0026rsquo;s \u003ccode\u003eleft\u003c/code\u003e subtree.\u003c/li\u003e\n\u003cli\u003eRecursively traverse the current node\u0026rsquo;s \u003ccode\u003eright\u003c/code\u003e subtree.\u003c/li\u003e\n\u003cli\u003eVisit the current node.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"timespace-complexity\"\u003eTime/Space Complexity\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eThe time complexity of the postorder algorithm is O(N), where N is the total number of nodes.\u003c/li\u003e\n\u003cli\u003eThe space complexity:\n\u003cul\u003e\n\u003cli\u003eO(1) if recursion stack space is not considered.\u003c/li\u003e\n\u003cli\u003eOtherwise, O(H), where H is the height of the tree.\u003c/li\u003e\n\u003cli\u003eIn the worst case, H can be the same as N (when the tree is skewed).\u003c/li\u003e\n\u003cli\u003eIn the best case, H can be the same as logN (when the tree is complete).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"thank-you-for-reading-\"\u003eThank you for reading! üòä\u003c/h4\u003e","title":"DSA - Binary Search Tree - Postorder"},{"content":"What is tree traversal? Tree traversal, also known as \u0026ldquo;tree search\u0026rdquo; or \u0026ldquo;walking the tree,\u0026rdquo; is the process of visiting each node in a tree data structure exactly once.\nWhat is the BST preorder algorithm? The preorder algorithm returns a list of values in the order they are visited. It makes a copy that preserves the structure and recursively traverses the BST.\nCode example func preorder(_ visited: inout [Value]) -\u0026gt; [Value] { if self.val != nil { visited.append(self.val!) } if self.left != nil { self.left!.preorder(\u0026amp;visited) } if self.right != nil { self.right!.preorder(\u0026amp;visited) } return visited } Implementation The first step is to check if val exists. If it does, append val to the visited array. The second step is to check if the left node exists. If it does, recursively call the preorder method on the left node. The third step is similar to the second one but for the right node. Time/Space Complexity The time complexity of the preorder algorithm is O(N), where N is the total number of nodes. The space complexity: O(1) if no recursion stack space is considered. Otherwise, O(H), where H is the height of the tree. In the worst case, H can be the same as N (when the tree is skewed). In the best case, H can be the same as logN (when the tree is complete). Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-binary-search-tree-traverse-preorder/","summary":"\u003ch3 id=\"what-is-tree-traversal\"\u003eWhat is tree traversal?\u003c/h3\u003e\n\u003cp\u003eTree traversal, also known as \u0026ldquo;tree search\u0026rdquo; or \u0026ldquo;walking the tree,\u0026rdquo; is the process of visiting each node in a tree data structure exactly once.\u003c/p\u003e\n\u003ch3 id=\"what-is-the-bst-preorder-algorithm\"\u003eWhat is the BST preorder algorithm?\u003c/h3\u003e\n\u003cp\u003eThe preorder algorithm returns a list of values in the order they are visited. It makes a copy that preserves the structure and recursively traverses the BST.\u003c/p\u003e\n\u003ch3 id=\"code-example\"\u003eCode example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003epreorder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003evisited\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kr\"\u003einout\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003evisited\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e!)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e!.\u003c/span\u003e\u003cspan class=\"n\"\u003epreorder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003evisited\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e!.\u003c/span\u003e\u003cspan class=\"n\"\u003epreorder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003evisited\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003evisited\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"implementation\"\u003eImplementation\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eThe first step is to check if \u003ccode\u003eval\u003c/code\u003e exists. If it does, append \u003ccode\u003eval\u003c/code\u003e to the \u003ccode\u003evisited\u003c/code\u003e array.\u003c/li\u003e\n\u003cli\u003eThe second step is to check if the \u003ccode\u003eleft\u003c/code\u003e node exists. If it does, recursively call the \u003ccode\u003epreorder\u003c/code\u003e method on the \u003ccode\u003eleft\u003c/code\u003e node.\u003c/li\u003e\n\u003cli\u003eThe third step is similar to the second one but for the \u003ccode\u003eright\u003c/code\u003e node.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"timespace-complexity\"\u003eTime/Space Complexity\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eThe time complexity of the preorder algorithm is O(N), where N is the total number of nodes.\u003c/li\u003e\n\u003cli\u003eThe space complexity:\n\u003cul\u003e\n\u003cli\u003eO(1) if no recursion stack space is considered.\u003c/li\u003e\n\u003cli\u003eOtherwise, O(H), where H is the height of the tree.\u003c/li\u003e\n\u003cli\u003eIn the worst case, H can be the same as N (when the tree is skewed).\u003c/li\u003e\n\u003cli\u003eIn the best case, H can be the same as logN (when the tree is complete).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"thank-you-for-reading-\"\u003eThank you for reading! üòä\u003c/h4\u003e","title":"DSA - Binary Search Tree - Traverse - Preorder"},{"content":"Introduction The delete algorithm is perhaps one of the hardest parts of managing a binary search tree (BST).\nCode Example final class BSTNode { var val: Int? var left: BSTNode? var right: BSTNode? init(val: Int? = nil) { self.val = val } func delete(_ val: Int) -\u0026gt; BSTNode? { // 1 guard let selfVal = self.val else { return nil } // 2 if val \u0026lt; selfVal { if self.left == nil { return self } self.left = self.left!.delete(val) } // 3 if val \u0026gt; selfVal { if self.right == nil { return self } self.right = self.right!.delete(val) } // 4 if self.right == nil { return self.left } // 5 if self.left == nil { return self.right } // 6 var minLargerNode = self.right while minLargerNode?.left != nil { minLargerNode = minLargerNode?.left } guard let minLargerNode = minLargerNode else { return self } self.val = minLargerNode.val self.right = self.right?.delete(minLargerNode.val!) return self } } Implementation Let‚Äôs look at the details:\nThe first step is to check for the base scenario: whether the BST has a self.val. If it does not, return nil. If it has a value, move to the second step. The second step is to check if the delete value is less than self.val. If it is, check if the left node exists. If it does not exist, return the self node. If it does exist, call delete on the left node and assign the new result to the left node. The third step is the opposite of the second step but for the right node. The fourth step is to check if the right node is nil. If it is, return the left node. The fifth step is the opposite of the fourth but for the left and right nodes. The sixth step is to find the minLargerNode, update self.val with minLargerNode.val, and delete minLargerNode.val from the right node, assigning the new result to it. Time Complexity The time complexity of the BST deletion algorithm is O(h), where h is the height of the tree.\nIn the case where the BST becomes skewed, the height of the BST h becomes O(n), making the time complexity O(n).\nIn the case where the BST is balanced, the height of the BST h becomes O(log n), making the time complexity O(log n).\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-binary-search-tree-delete/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eThe \u003ca href=\"https://en.wikipedia.org/wiki/Binary_search_tree#Deletion\"\u003edelete\u003c/a\u003e algorithm is perhaps one of the hardest parts of managing a binary search tree (BST).\u003c/p\u003e\n\u003ch3 id=\"code-example\"\u003eCode Example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003efinal\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBSTNode\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// 1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eguard\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eselfVal\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// 2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eselfVal\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e!.\u003c/span\u003e\u003cspan class=\"n\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// 3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eselfVal\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e!.\u003c/span\u003e\u003cspan class=\"n\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// 4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// 5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// 6\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eminLargerNode\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003eminLargerNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eminLargerNode\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eminLargerNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eguard\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eminLargerNode\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eminLargerNode\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eminLargerNode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"n\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eminLargerNode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e!)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"implementation\"\u003eImplementation\u003c/h4\u003e\n\u003cp\u003eLet‚Äôs look at the details:\u003c/p\u003e","title":"DSA - Binary Search Tree - Delete"},{"content":"Introduction Finding the min and max elements is one of the simplest algorithms regarding BST (Binary Search Tree). The findMin method loops through the left child nodes and returns the value from the last node. The findMax method does the same but traverses the right child nodes.\nCode Example - Min func findMin() -\u0026gt; Int? { var min: Int? var curr: BSTNode? = self while curr != nil { min = curr?.val curr = curr?.left } return min } Code Example - Max func findMax() -\u0026gt; Int? { var max: Int? var curr: BSTNode? = self while curr != nil { max = curr?.val curr = curr?.right } return max } Complete Code Example final class BSTNode { var val: Int? var left: BSTNode? var right: BSTNode? init(val: Int? = nil) { self.val = val } func insert(_ val: Value) { if self.val == nil { self.val = val return } if self.val == val { return } if val \u0026lt; self.val! { if self.left != nil { self.left!.insert(val) return } else { self.left = BSTNode(val: val) return } } if self.right != nil { self.right!.insert(val) return } self.right = BSTNode(val: val) } func findMin() -\u0026gt; Int? { var min: Int? var curr: BSTNode? = self while curr != nil { min = curr?.val curr = curr?.left } return min } func findMax() -\u0026gt; Int? { var max: Int? var curr: BSTNode? = self while curr != nil { max = curr?.val curr = curr?.right } return max } } Time/Space Complexity For both findMin and findMax:\nTime Complexity is O(h), where h is the height of the tree. Space Complexity is O(1). Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-binary-search-tree-min-max/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eFinding the \u003ccode\u003emin\u003c/code\u003e and \u003ccode\u003emax\u003c/code\u003e elements is one of the simplest algorithms regarding \u003ccode\u003eBST\u003c/code\u003e (Binary Search Tree). The \u003ccode\u003efindMin\u003c/code\u003e method loops through the \u003ccode\u003eleft\u003c/code\u003e child nodes and returns the value from the last node. The \u003ccode\u003efindMax\u003c/code\u003e method does the same but traverses the \u003ccode\u003eright\u003c/code\u003e child nodes.\u003c/p\u003e\n\u003ch4 id=\"code-example---min\"\u003eCode Example - Min\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003efindMin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003emin\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003emin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"code-example---max\"\u003eCode Example - Max\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003efindMax\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003emax\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003emax\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"complete-code-example\"\u003eComplete Code Example\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003efinal\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBSTNode\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e!\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e!.\u003c/span\u003e\u003cspan class=\"bp\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e!.\u003c/span\u003e\u003cspan class=\"bp\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003efindMin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003emin\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003emin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003efindMax\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eBSTNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003emax\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003emax\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"timespace-complexity\"\u003eTime/Space Complexity\u003c/h3\u003e\n\u003cp\u003eFor both \u003ccode\u003efindMin\u003c/code\u003e and \u003ccode\u003efindMax\u003c/code\u003e:\u003c/p\u003e","title":"DSA - Binary Search Tree Min/Max"},{"content":"What is a Queue? A Queue is an abstract data type that serves as an ordered collection of elements.\nA simple queue typically has several operations:\npush(item) - adds an item to the tail pop() - removes and returns an item from the head These operations make a queue a FIFO (First In, First Out) data structure.\nImplementation There are two ways to implement a queue.\nThe first and simplest (but less efficient) way is by using an array and basic operations:\nstruct Queue { private(set) var queue: [Int] init(queue: [Int] = []) { self.queue = queue } mutating func push(_ item: Int) { self.queue.insert(item, at: 0) } mutating func pop() -\u0026gt; Int? { return self.queue.popLast() } func peek() -\u0026gt; Int? { return self.queue.last } } The second, more efficient way is by using a linked list, which allows push and pop operations in O(1) time.\nfinal class Node { private(set) var val: Int var next: Node? init( val: Int, next: Node? = nil ) { self.val = val self.next = next } } final class LinkedListQueue { private(set) var head: Node? private(set) var tail: Node? func push(_ item: Int) { let newNode = Node(val: item) if head == nil { self.head = newNode self.tail = newNode return } self.tail?.next = newNode self.tail = newNode } func pop() -\u0026gt; Int? { if head == nil { return nil } let tmp = self.head self.head = tmp?.next if self.head == nil { self.tail = nil } return tmp?.val } } Time/Space Complexity using a Linked List Queue Operation Average Worst Case Insert O(1) O(1) Delete O(1) O(1) Space Complexity: O(n) for both average and worst case.\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-queue/","summary":"\u003ch3 id=\"what-is-a-queue\"\u003eWhat is a Queue?\u003c/h3\u003e\n\u003cp\u003eA \u003ca href=\"https://en.wikipedia.org/wiki/Queue_%28abstract_data_type%29\"\u003eQueue\u003c/a\u003e is an abstract data type that serves as an ordered collection of elements.\u003c/p\u003e\n\u003cp\u003eA simple queue typically has several operations:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003epush(item)\u003c/code\u003e - adds an item to the \u003ccode\u003etail\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epop()\u003c/code\u003e - removes and returns an item from the \u003ccode\u003ehead\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThese operations make a queue a \u003cstrong\u003eFIFO\u003c/strong\u003e (First In, First Out) data structure.\u003c/p\u003e\n\u003ch3 id=\"implementation\"\u003eImplementation\u003c/h3\u003e\n\u003cp\u003eThere are two ways to implement a queue.\u003c/p\u003e\n\u003cp\u003eThe first and simplest (but less efficient) way is by using an array and basic operations:\u003c/p\u003e","title":"DSA - Queue"},{"content":"What is an Adjacency List? An Adjacency List helps store a list of connections between each vertex in a finite graph.\nVertex Connects with 0 1 1 0, 2, 3 2 1, 3 3 1, 2 Implementation The addEdge method takes vertices as input and adds an edge to the adjacency list. In this example, the adjacency list is represented as a dictionary that maps vertices to a set of all connected vertices.\nIn JSON form, it looks like this:\n{ \u0026#34;0\u0026#34;: [1], \u0026#34;1\u0026#34;: [0, 2, 3], \u0026#34;2\u0026#34;: [1, 3], \u0026#34;3\u0026#34;: [1, 2] } Code Example final class Graph { private(set) var graph: [Int: Set\u0026lt;Int\u0026gt;] init() { self.graph = [:] } func addEdge(u: Int, v: Int) -\u0026gt; [Int: Set\u0026lt;Int\u0026gt;] { if self.graph[u] == nil { self.graph[u] = [v] } else { self.graph[u]!.insert(v) } if self.graph[v] == nil { self.graph[v] = [u] } else { self.graph[v]!.insert(u) } return self.graph } } As for the implementation, the addEdge algorithm checks:\nIf vertex u is already in the graph, it inserts vertex v into the set. Otherwise, it creates a new set for u with vertex v. Finally, it repeats steps 1 \u0026amp; 2 but swaps u and v. Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-adjacency-list/","summary":"\u003ch3 id=\"what-is-an-adjacency-list\"\u003eWhat is an Adjacency List?\u003c/h3\u003e\n\u003cp\u003eAn \u003ca href=\"https://en.wikipedia.org/wiki/Adjacency_list\"\u003eAdjacency List\u003c/a\u003e helps store a list of connections between each vertex in a finite \u003ca href=\"https://open.substack.com/pub/dmytrosblog/p/dsa-graph?r=2fepxg\u0026amp;utm_campaign=post\u0026amp;utm_medium=web\u0026amp;showWelcomeOnShare=true\"\u003egraph\u003c/a\u003e.\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eVertex\u003c/th\u003e\n          \u003cth\u003eConnects with\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e0\u003c/td\u003e\n          \u003ctd\u003e1\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e1\u003c/td\u003e\n          \u003ctd\u003e0, 2, 3\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e2\u003c/td\u003e\n          \u003ctd\u003e1, 3\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e3\u003c/td\u003e\n          \u003ctd\u003e1, 2\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"implementation\"\u003eImplementation\u003c/h3\u003e\n\u003cp\u003eThe \u003ccode\u003eaddEdge\u003c/code\u003e method takes vertices as input and adds an edge to the adjacency list. In this example, the adjacency list is represented as a dictionary that maps vertices to a \u003ccode\u003eset\u003c/code\u003e of all connected vertices.\u003c/p\u003e","title":"DSA - Adjacency List"},{"content":"What is a graph? A graph is an abstract data type that represents vertices and edges that connect those vertices.\nSource\nImplementation A graph can be represented as a matrix with edges connecting each pair of vertices. For example, a graph with vertices 0, 1, 2, 3, 4 and edges between them can be represented as a matrix:\n0 1 2 3 4 0 false true false false true 1 true false true true true 2 false true false true false 3 false true true false true 4 true true false true false In Swift, you can use a list of lists (2D array) to represent the matrix:\n[ [false, true, false, false, true], [true, false, true, true, true], [false, true, false, true, false], [false, true, true, false, true], [true, true, false, true, false] ] In any cell where true is found, the corresponding vertices are connected by an edge.\nCode Example final class Graph { private(set) var graph: [[Bool]] init(numVertices: Int) { self.graph = Array( repeating: Array( repeating: false, count: numVertices ), count: numVertices ) } func addEdge(u: Int, v: Int) { graph[u][v] = true graph[v][u] = true } } The addEdge method takes u and v vertices and adds an edge between them by setting the corresponding cells to true. There are two cells in the matrix for each pair of vertices. For example, (0, 1) corresponds to these cells:\n0 1 2 3 4 0 false true false false false 1 true false false false false 2 false false false false false 3 false false false false false 4 false false false false false Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-graph/","summary":"\u003ch3 id=\"what-is-a-graph\"\u003eWhat is a graph?\u003c/h3\u003e\n\u003cp\u003eA \u003ca href=\"https://en.wikipedia.org/wiki/Graph_%28abstract_data_type%29\"\u003egraph\u003c/a\u003e is an abstract data type that represents vertices and edges that connect those vertices.\u003c/p\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-cafc5\" hidden\u003e\n    \u003clabel for=\"zoomCheck-cafc5\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/ada_cs_struct_graph_components.svg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://adacomputerscience.org/images/content/computer_science/data_structures_and_algorithms/data_structures/figures/ada_cs_struct_graph_components.svg\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"implementation\"\u003eImplementation\u003c/h3\u003e\n\u003cp\u003eA graph can be represented as a matrix with edges connecting each pair of vertices. For example, a graph with vertices 0, 1, 2, 3, 4 and edges between them can be represented as a matrix:\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e\u003c/th\u003e\n          \u003cth\u003e0\u003c/th\u003e\n          \u003cth\u003e1\u003c/th\u003e\n          \u003cth\u003e2\u003c/th\u003e\n          \u003cth\u003e3\u003c/th\u003e\n          \u003cth\u003e4\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e0\u003c/td\u003e\n          \u003ctd\u003efalse\u003c/td\u003e\n          \u003ctd\u003etrue\u003c/td\u003e\n          \u003ctd\u003efalse\u003c/td\u003e\n          \u003ctd\u003efalse\u003c/td\u003e\n          \u003ctd\u003etrue\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e1\u003c/td\u003e\n          \u003ctd\u003etrue\u003c/td\u003e\n          \u003ctd\u003efalse\u003c/td\u003e\n          \u003ctd\u003etrue\u003c/td\u003e\n          \u003ctd\u003etrue\u003c/td\u003e\n          \u003ctd\u003etrue\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e2\u003c/td\u003e\n          \u003ctd\u003efalse\u003c/td\u003e\n          \u003ctd\u003etrue\u003c/td\u003e\n          \u003ctd\u003efalse\u003c/td\u003e\n          \u003ctd\u003etrue\u003c/td\u003e\n          \u003ctd\u003efalse\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e3\u003c/td\u003e\n          \u003ctd\u003efalse\u003c/td\u003e\n          \u003ctd\u003etrue\u003c/td\u003e\n          \u003ctd\u003etrue\u003c/td\u003e\n          \u003ctd\u003efalse\u003c/td\u003e\n          \u003ctd\u003etrue\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e4\u003c/td\u003e\n          \u003ctd\u003etrue\u003c/td\u003e\n          \u003ctd\u003etrue\u003c/td\u003e\n          \u003ctd\u003efalse\u003c/td\u003e\n          \u003ctd\u003etrue\u003c/td\u003e\n          \u003ctd\u003efalse\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eIn Swift, you can use a list of lists (2D array) to represent the matrix:\u003c/p\u003e","title":"DSA - Graph"},{"content":"What is Breadth First Search? Breadth-first search (BFS) is an algorithm for traversing tree or graph data structures. It starts at the root and explores all the neighboring nodes at the current depth before moving on to nodes at the next depth level.\nSource\nImplementation The implementation of BFS may vary depending on the problem. The main idea of BFS is:\nIt has a visited array that collects all elements that have already been visited. It has a queue with all elements it\u0026rsquo;s going to visit. It loops through the queue, removes the first element, and appends it to the visited list. Finally, it loops through all the neighbors and appends the neighbor to the queue if it has not been visited and is not already in the queue. Code Example func bfs(_ value: String) -\u0026gt; [String] { let graph: [String: [String]] = [ \u0026#34;New York\u0026#34;: [\u0026#34;Buenos Aires\u0026#34;, \u0026#34;Cairo\u0026#34;, \u0026#34;Tokyo\u0026#34;, \u0026#34;London\u0026#34;] ] var visited: [String] = [] var queue: [String] = [] queue.append(value) while !queue.isEmpty { let tmp = queue.removeFirst() visited.append(tmp) if let neighbors = graph[tmp] { for neighbor in neighbors.sorted() { if !visited.contains(neighbor) \u0026amp;\u0026amp; !queue.contains(neighbor) { queue.append(neighbor) } } } } return visited } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-breadth-first-search/","summary":"\u003ch3 id=\"what-is-breadth-first-search\"\u003eWhat is Breadth First Search?\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Breadth-first_search\"\u003eBreadth-first search (BFS)\u003c/a\u003e is an algorithm for traversing tree or graph data structures. It starts at the root and explores all the neighboring nodes at the current depth before moving on to nodes at the next depth level.\u003c/p\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-1b6ce\" hidden\u003e\n    \u003clabel for=\"zoomCheck-1b6ce\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/Breadth-first-tree.png#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003cbr\u003e\n\u003ca href=\"https://upload.wikimedia.org/wikipedia/commons/3/33/Breadth-first-tree.svg\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"implementation\"\u003eImplementation\u003c/h3\u003e\n\u003cp\u003eThe implementation of BFS may vary depending on the problem. The main idea of BFS is:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIt has a \u003ccode\u003evisited\u003c/code\u003e array that collects all elements that have already been visited.\u003c/li\u003e\n\u003cli\u003eIt has a \u003ccode\u003equeue\u003c/code\u003e with all elements it\u0026rsquo;s going to visit.\u003c/li\u003e\n\u003cli\u003eIt loops through the \u003ccode\u003equeue\u003c/code\u003e, removes the first element, and appends it to the \u003ccode\u003evisited\u003c/code\u003e list.\u003c/li\u003e\n\u003cli\u003eFinally, it loops through all the \u003ccode\u003eneighbors\u003c/code\u003e and appends the neighbor to the \u003ccode\u003equeue\u003c/code\u003e if it has not been visited and is not already in the queue.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"code-example\"\u003eCode Example\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ebfs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003egraph\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003e\u0026#34;New York\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Buenos Aires\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Cairo\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Tokyo\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;London\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003evisited\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003eisEmpty\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003etmp\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eremoveFirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003evisited\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eneighbors\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egraph\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eneighbor\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eneighbors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003esorted\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003evisited\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eneighbor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eneighbor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eneighbor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003evisited\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"thank-you-for-reading-\"\u003eThank you for reading! üòä\u003c/h4\u003e","title":"DSA - Breadth First Search"},{"content":"What is Backtracking? Backtracking is a class of algorithms for finding solutions to complex problems. A backtracking algorithm uses recursion and is based on depth-first search (DFS).\nDepth First Search (DFS) Depth First Search (DFS) is an essential part of backtracking. DFS is an algorithm for traversing or searching tree or graph data structures. The algorithm starts at the root node (or an arbitrary node in the case of a graph) and explores as far as possible along each branch before backtracking.\nCode Example The implementation of the DFS algorithm for a graph looks like this:\nfunc dfs(_ r: Int, _ c: Int, _ visited: inout [[Int]]) { guard r \u0026gt;= 0, r \u0026lt; visited.count, c \u0026gt;= 0, c \u0026lt; visited[0].count, visited[r][c] == 0 else { return } visited[r][c] = 1 dfs(r - 1, c, \u0026amp;visited) dfs(r + 1, c, \u0026amp;visited) dfs(r, c - 1, \u0026amp;visited) dfs(r, c + 1, \u0026amp;visited) } It can vary depending on the problem, but the main idea is that it first checks if the r and c parameters are within bounds and if the value has not been visited before. After that, it recursively walks between the top, bottom, left, and right neighboring cells.\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-backtracking/","summary":"\u003ch3 id=\"what-is-backtracking\"\u003eWhat is Backtracking?\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Backtracking\"\u003eBacktracking\u003c/a\u003e is a class of algorithms for finding solutions to complex problems. A backtracking algorithm uses \u003ca href=\"https://en.wikipedia.org/wiki/Recursion_%28computer_science%29\"\u003erecursion\u003c/a\u003e and is based on \u003ca href=\"https://en.wikipedia.org/wiki/Depth-first_search\"\u003edepth-first search\u003c/a\u003e (DFS).\u003c/p\u003e\n\u003ch3 id=\"depth-first-search-dfs\"\u003eDepth First Search (DFS)\u003c/h3\u003e\n\u003cp\u003eDepth First Search (DFS) is an essential part of backtracking. DFS is an algorithm for traversing or searching tree or graph data structures. The algorithm starts at the root node (or an arbitrary node in the case of a graph) and explores as far as possible along each branch before backtracking.\u003c/p\u003e","title":"DSA - Backtracking"},{"content":"What is a Trie? A Trie is a data structure usually called a \u0026ldquo;prefix tree,\u0026rdquo; often represented as a nested tree of dictionaries where each key is a character that maps to the next character in a word.\nLet\u0026rsquo;s look at some examples of a Trie. The Trie consists of two main classes: the TrieNode class and the Trie class.\nTrieNode The TrieNode class has two properties:\nchildren - a property that represents all characters in a given word and points to the next character. isEndSymbol - a property that indicates the end of the word in a given sequence of characters. final class TrieNode { var children: [Character: TrieNode?] var isEndSymbol: Bool init() { self.children = [:] self.isEndSymbol = false } } Trie The Trie class has two main operations, insert and exists, and a root property that stores all possible combinations of words.\nfinal class Trie { var root: TrieNode init() { self.root = TrieNode() } } Insert extension Trie { func insert(_ word: String) { var current = self.root for c in word { if current.children[c] == nil { let newNode = TrieNode() current.children[c] = newNode current = newNode } else { current = current.children[c]!! } } current.isEndSymbol = true } } The insert operation loops through all the characters of word and checks if the character exists in the current node:\nIf it does not exist, it creates a newNode, sets it in the current.children node, and updates the current node. If it does exist, it updates the current node with the children node containing that character. Exists extension Trie { func exists(_ word: String) -\u0026gt; Bool { var current = self.root for c in word { if current.children[c] == nil { return false } else { current = current.children[c]!! } } return current.isEndSymbol } } The exists operation loops over all the characters in the input word and checks if the current node contains the character:\nIf the current node does not have the character, it returns false. If the current node does have the character, it updates the current node with the node containing that character. When the loop completes, it returns the result based on whether the current node\u0026rsquo;s isEndSymbol is true. Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-trie/","summary":"\u003ch3 id=\"what-is-a-trie\"\u003eWhat is a Trie?\u003c/h3\u003e\n\u003cp\u003eA \u003ca href=\"https://en.wikipedia.org/wiki/Trie\"\u003eTrie\u003c/a\u003e is a data structure usually called a \u0026ldquo;prefix tree,\u0026rdquo; often represented as a nested tree of dictionaries where each key is a character that maps to the next character in a word.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s look at some examples of a Trie. The Trie consists of two main classes: the \u003ccode\u003eTrieNode\u003c/code\u003e class and the \u003ccode\u003eTrie\u003c/code\u003e class.\u003c/p\u003e\n\u003ch3 id=\"trienode\"\u003eTrieNode\u003c/h3\u003e\n\u003cp\u003eThe \u003ccode\u003eTrieNode\u003c/code\u003e class has two properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003echildren\u003c/code\u003e - a property that represents all characters in a given word and points to the next character.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eisEndSymbol\u003c/code\u003e - a property that indicates the end of the word in a given sequence of characters.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003efinal\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTrieNode\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003echildren\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eCharacter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTrieNode\u003c/span\u003e\u003cspan class=\"p\"\u003e?]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eisEndSymbol\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003echildren\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[:]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisEndSymbol\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"trie\"\u003eTrie\u003c/h3\u003e\n\u003cp\u003eThe \u003ccode\u003eTrie\u003c/code\u003e class has two main operations, \u003ccode\u003einsert\u003c/code\u003e and \u003ccode\u003eexists\u003c/code\u003e, and a \u003ccode\u003eroot\u003c/code\u003e property that stores all possible combinations of words.\u003c/p\u003e","title":"DSA - Trie"},{"content":"What is a Tree? A Tree is a data structure that has a root and subtrees of children, representing a set of linked nodes. Trees behave similarly to a LinkedList in that they have a collection of nodes starting with a head (root). The main difference is that Trees can have multiple children, whereas a LinkedList, on the other hand, can have only one next child.\nI‚Äôm going to focus on a commonly used type of tree, the Binary Search Tree.\nBinary Search Tree A Binary Search Tree (BST) is also called an ordered tree. A BST has two children, left and right. The left child value is always less than its parent value, and the right child value is always greater than its parent value. Duplicate values are not allowed. These constraints help to add, remove, and find nodes very quickly (on average O(log n), worst case O(n)).\nCode Example final class BSTNode { let val: Int var left: BSTNode? var right: BSTNode? init( val: Int, left: BSTNode? = nil, right: BSTNode? = nil ) { self.val = val self.left = left self.right = right } } BST - Insert Let‚Äôs look at how binary search tree insertion works:\nOne of the BST constraints is that duplicate values are not allowed, so we need to check for duplicates before adding any logic. The next step is to check if the inserting value is less than self.val and recursively insert this value into the left child node, or create a new left child node if it does not exist. The final step is to recursively insert the value into the right child if it exists, or create a new node. func insert(_ val: Int) { if self.val == val { return } if val \u0026lt; self.val { if self.left != nil { self.left!.insert(val) return } else { self.left = BSTNode(val: val) return } } if self.right != nil { self.right!.insert(val) return } self.right = BSTNode(val: val) } BST - Delete Let\u0026rsquo;s look at another operation, delete, which is slightly more complicated than insert:\nThe first step is to compare the value the user is trying to delete with self.val. If it is less and the left child exists, then delete the value from left recursively and update left. The second step is the opposite of the previous step but for the right child. The third and fourth steps are base cases, where we need to check if right and left children exist. If the right child does not exist, return the left child, and vice versa for the left child. The final step is to find the minLargerNode, update the value, and replace the right child with this node. func delete(_ val: Int) -\u0026gt; BSTNode? { if val \u0026lt; self.val { if self.left != nil { self.left = self.left!.delete(val) } return self } if val \u0026gt; self.val { if self.right != nil { self.right = self.right!.delete(val) } return self } if self.right == nil { return self.left } if self.left == nil { return self.right } var minLargerNode = self.right while minLargerNode?.left != nil { minLargerNode = minLargerNode!.left } self.val = minLargerNode!.val self.right = self.right?.delete(minLargerNode!.val) return self } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-binary-search-tree/","summary":"\u003ch3 id=\"what-is-a-tree\"\u003eWhat is a Tree?\u003c/h3\u003e\n\u003cp\u003eA \u003ca href=\"https://en.wikipedia.org/wiki/Tree_%28data_structure%29\"\u003e\u003ccode\u003eTree\u003c/code\u003e\u003c/a\u003e is a data structure that has a root and subtrees of children, representing a set of linked nodes. \u003ccode\u003eTrees\u003c/code\u003e behave similarly to a \u003ca href=\"https://dmytrosblog.substack.com/p/dsa-linked-list?r=2fepxg\"\u003e\u003ccode\u003eLinkedList\u003c/code\u003e\u003c/a\u003e in that they have a collection of nodes starting with a \u003ccode\u003ehead (root)\u003c/code\u003e. The main difference is that \u003ccode\u003eTrees\u003c/code\u003e can have multiple children, whereas a \u003ccode\u003eLinkedList\u003c/code\u003e, on the other hand, can have only one \u003ccode\u003enext\u003c/code\u003e child.\u003c/p\u003e\n\u003cp\u003eI‚Äôm going to focus on a commonly used type of tree, the Binary Search Tree.\u003c/p\u003e","title":"DSA - Binary Search Tree"},{"content":"What is the sliding window technique? The sliding window technique is a common algorithmic approach used to create a fixed-sized window that moves through the data one step at a time, typically from left to right, to perform specific operations or computations on the elements within the window.\nWhat is the sliding window algorithm? The sliding window algorithm is a method for finding a subset of elements that satisfy certain conditions in a given problem.\nHow does the sliding window algorithm work? Let‚Äôs look at the \u0026ldquo;maximum sum of a subarray\u0026rdquo; problem to better understand how it works:\nProblem: Given an array of integers, find the maximum sum of a subarray with a fixed window size.\nIn this case, the sliding window algorithm uses a fixed size window that the user can pass to a function as a parameter. It iterates through all the elements inside that window by accessing the current value(nums[i]) and previous value(nums[i - k]) and calculates the window sum, which is needed to determine the max sum result.\nCode Example func maxSubArraySum(_ nums: [Int], _ k: Int) -\u0026gt; Int { var maxSum = Int.min var windowSum = nums[0 ..\u0026lt; k].reduce(0, +) for i in k ..\u0026lt; nums.count { windowSum += nums[i] - nums[i - k] maxSum = max(maxSum, windowSum) } return maxSum } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-sliding-window/","summary":"\u003ch3 id=\"what-is-the-sliding-window-technique\"\u003eWhat is the sliding window technique?\u003c/h3\u003e\n\u003cp\u003eThe sliding window technique is a common algorithmic approach used to create a fixed-sized window that moves through the data one step at a time, typically from left to right, to perform specific operations or computations on the elements within the window.\u003c/p\u003e\n\u003ch3 id=\"what-is-the-sliding-window-algorithm\"\u003eWhat is the sliding window algorithm?\u003c/h3\u003e\n\u003cp\u003eThe sliding window algorithm is a method for finding a subset of elements that satisfy certain conditions in a given problem.\u003c/p\u003e","title":"DSA - Sliding Window"},{"content":"What is a Linked List? A linked list is a common data structure that is similar to an array, but its order is based on pointers to the next element in memory instead of using physical placement (indices).\nA linked list has two main components:\nListNode class: This class has a val property that represents the value and a next property that represents a pointer to the next element in memory. LinkedList class: This class stores a collection of ListNode elements and provides operations like add to tail and add to head. The add to tail operation takes O(n) time because it needs to iterate through the list to find the last element. The add to head operation takes O(1) time because it only needs to set the next pointer of the new node to the current head and update the head with the new node. Where can it be used? A linked list can be used in stacks, queues, and lists.\nCode Example final class ListNode { let val: Int var next: ListNode? init(val: Int, next: ListNode? = nil) { self.val = val self.next = next } } final class LinkedList { private(set) var head: ListNode? init(head: ListNode? = nil) { self.head = head } func addToTail(_ newNode: ListNode?) { if self.head == nil { self.head = newNode return } var node: ListNode? = self.head while node?.next != nil { node = node!.next } node?.next = newNode } func addToHead(_ newNode: ListNode?) { newNode?.next = self.head self.head = newNode } } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-linked-list/","summary":"\u003ch3 id=\"what-is-a-linked-list\"\u003eWhat is a Linked List?\u003c/h3\u003e\n\u003cp\u003eA \u003ca href=\"https://en.wikipedia.org/wiki/Linked_list\"\u003elinked list\u003c/a\u003e is a common data structure that is similar to an array, but its order is based on pointers to the next element in memory instead of using physical placement (indices).\u003c/p\u003e\n\u003cp\u003eA linked list has two main components:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eListNode\u003c/strong\u003e class: This class has a \u003ccode\u003eval\u003c/code\u003e property that represents the value and a \u003ccode\u003enext\u003c/code\u003e property that represents a pointer to the next element in memory.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLinkedList\u003c/strong\u003e class: This class stores a collection of \u003ccode\u003eListNode\u003c/code\u003e elements and provides operations like \u003ccode\u003eadd to tail\u003c/code\u003e and \u003ccode\u003eadd to head\u003c/code\u003e.\n\u003cul\u003e\n\u003cli\u003eThe \u003ccode\u003eadd to tail\u003c/code\u003e operation takes O(n) time because it needs to iterate through the list to find the last element.\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eadd to head\u003c/code\u003e operation takes O(1) time because it only needs to set the next pointer of the new node to the current head and update the head with the new node.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"where-can-it-be-used\"\u003eWhere can it be used?\u003c/h3\u003e\n\u003cp\u003eA linked list can be used in stacks, queues, and lists.\u003c/p\u003e","title":"DSA - Linked List"},{"content":"What is binary search? Binary search is an algorithm that helps find an element in a sorted array in O(log n) time.\nWhy should the input be sorted before performing binary search? The input array for binary search needs to be sorted because the algorithm eliminates half of the choices at each step. If the guessed value is greater than the target value, it knows that the right part can‚Äôt contain the target value.\nHow does binary search work? It uses the two pointers technique, which helps divide the input into two halves with each iteration, compares the middle array element with the target value, and shifts the pointers based on which half contains the target value.\nCode Example func binarySearch(_ arr: [Int], _ target: Int) -\u0026gt; Int? { var l: Int = 0 var r: Int = arr.count - 1 while l \u0026lt;= r { let m = (l + r) / 2 if arr[m] \u0026lt; target { l = m + 1 } else if arr[m] \u0026gt; target { r = m - 1 } else { return m } } return nil } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-binary-search/","summary":"\u003ch3 id=\"what-is-binary-search\"\u003eWhat is binary search?\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Binary_search\"\u003eBinary search\u003c/a\u003e is an algorithm that helps find an element in a sorted array in O(log n) time.\u003c/p\u003e\n\u003ch3 id=\"why-should-the-input-be-sorted-before-performing-binary-search\"\u003eWhy should the input be sorted before performing binary search?\u003c/h3\u003e\n\u003cp\u003eThe input array for binary search needs to be sorted because the algorithm eliminates half of the choices at each step. If the guessed value is greater than the target value, it knows that the right part can‚Äôt contain the target value.\u003c/p\u003e","title":"DSA - Binary Search"},{"content":"What is a Stack? A stack is an abstract data type that serves as a collection of elements and implements operations like push, pop, and peek at the end in O(1) time. It uses the LIFO (last in, first out) order. For example, a stack can be a collection of items where adding or removing is practical at the top.\nCode Example struct Stack\u0026lt;Element\u0026gt; { private var array: [Element] init(array: [Element] = []) { self.array = array } mutating func push(_ element: Element) { array.append(element) } mutating func pop() -\u0026gt; Element? { if array.isEmpty { return nil } return array.popLast() } func peek() -\u0026gt; Element? { if array.isEmpty { return nil } return array.last } } Practical Applications of Stacks You can observe stack-like behavior in many places, such as redo-undo features in text editors, Photoshop, and the forward and backward navigation features in web browsers.\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-stack/","summary":"\u003ch3 id=\"what-is-a-stack\"\u003eWhat is a Stack?\u003c/h3\u003e\n\u003cp\u003eA \u003ca href=\"https://en.wikipedia.org/wiki/Stack_%28abstract_data_type%29\"\u003estack\u003c/a\u003e is an abstract data type that serves as a collection of elements and implements operations like \u003ccode\u003epush\u003c/code\u003e, \u003ccode\u003epop\u003c/code\u003e, and \u003ccode\u003epeek\u003c/code\u003e at the end in O(1) time. It uses the LIFO (\u003cstrong\u003elast in\u003c/strong\u003e, \u003cstrong\u003efirst out\u003c/strong\u003e) order. For example, a stack can be a collection of items where adding or removing is practical at the top.\u003c/p\u003e\n\u003ch4 id=\"code-example\"\u003eCode Example\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eStack\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eElement\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eElement\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eElement\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[])\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kr\"\u003emutating\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eelement\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eElement\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eelement\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kr\"\u003emutating\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003epop\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eElement\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003eisEmpty\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epopLast\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003epeek\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eElement\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003eisEmpty\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003elast\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"practical-applications-of-stacks\"\u003ePractical Applications of Stacks\u003c/h3\u003e\n\u003cp\u003eYou can observe stack-like behavior in many places, such as redo-undo features in text editors, Photoshop, and the forward and backward navigation features in web browsers.\u003c/p\u003e","title":"DSA - Stack"},{"content":"What is the Two Pointers Technique? The two pointers technique helps track indices in a collection of elements to access objects in memory by index with O(1) space. This technique is very handy when you need to optimize the time and space of a solution.\nWhat Problems Does It Solve? The two pointers technique solves problems involving collections. For example, it is useful when you need to compare each element to other elements in that collection.\nWhat Are the Ways to Use It? The first way to use the two pointers technique is to set the left pointer at the beginning of the array and the right pointer at the end, then increment the left and decrement the right pointer until they meet.\nwhile l \u0026lt; r { l += 1 r -= 1 } The second way is to use slow and fast pointers for cycle detection in a LinkedList. It is called fast and slow because the fast pointer moves twice as fast as the slow pointer.\nclass Node { var val: Int var next: Node? init(val: Int, next: Node? = nil) { self.val = val self.next = next } } func hasCycle(_ head: Node?) -\u0026gt; Bool { var fast = head var slow = head while fast != nil \u0026amp;\u0026amp; fast?.next != nil { fast = fast?.next?.next slow = slow?.next if fast == slow { return true } } return false } Problem As an example, let\u0026rsquo;s look at the Two Sum II - Input Array Is Sorted problem.\nGiven a¬†1-indexed¬†array of integers¬†numbers¬†that is already¬†sorted in non-decreasing order, find two numbers such that they add up to a specific¬†target¬†number. Let these two numbers be¬†numbers[index1]¬†and¬†numbers[index2]¬†where¬†1 \u0026lt;= index1 \u0026lt; index2 \u0026lt;= numbers.length. Return¬†the indices of the two numbers,¬†index1¬†and¬†index2,¬†added by one,¬†as an integer array¬†[index1, index2]¬†of length 2. The tests are generated such that there is¬†exactly one solution. You¬†may not¬†use the same element twice. Your solution must use only constant extra space.\nSolution Let\u0026rsquo;s look at the solution to the Two Sum II - Input Array Is Sorted problem that uses the two pointers technique, where the left pointer is initialized with the first index in the array and the right pointer is initialized with the last index.\nclass Solution { func twoSum(_ numbers: [Int], _ target: Int) -\u0026gt; [Int] { var l: Int = 0 var r: Int = numbers.count - 1 while l \u0026lt; r { if numbers[l] + numbers[r] \u0026lt; target { l += 1 } else if numbers[l] + numbers[r] \u0026gt; target { r -= 1 } else { return [l+1,r+1] } } return [] } } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-two-pointers-technique/","summary":"\u003ch3 id=\"what-is-the-two-pointers-technique\"\u003eWhat is the Two Pointers Technique?\u003c/h3\u003e\n\u003cp\u003eThe two pointers technique helps track indices in a collection of elements to access objects in memory by index with O(1) space. This technique is very handy when you need to optimize the time and space of a solution.\u003c/p\u003e\n\u003ch3 id=\"what-problems-does-it-solve\"\u003eWhat Problems Does It Solve?\u003c/h3\u003e\n\u003cp\u003eThe two pointers technique solves problems involving collections. For example, it is useful when you need to compare each element to other elements in that collection.\u003c/p\u003e","title":"DSA - Two Pointers Technique"},{"content":"Introduction In the previous chapter, we discussed Data Structures and Algorithms, delved into an overview of Dynamic Arrays, and solved the \u0026ldquo;Remove Element\u0026rdquo; problem.\nIn this article, I\u0026rsquo;m going to show one of the ways to solve the 88. Merge Sorted Array problem.\nProblem You are given two integer arrays,¬†nums1¬†and¬†nums2, sorted in¬†non-decreasing order, and two integers,¬†m¬†and¬†n, representing the number of elements in¬†nums1¬†and¬†nums2, respectively. Merge¬†nums1¬†and¬†nums2¬†into a single array sorted in¬†non-decreasing order. The final sorted array should not be returned by the function but should instead be¬†stored inside the array¬†nums1. To accommodate this,¬†nums1¬†has a length of¬†m + n, where the first¬†m¬†elements denote the elements that should be merged, and the last¬†n¬†elements are set to¬†0¬†and should be ignored.¬†nums2¬†has a length of¬†n.\nSolution class Solution { func merge(_ nums1: inout [Int], _ m: Int, _ nums2: [Int], _ n: Int) { if m == 0 { nums1 = nums2 } else if n == 0 { let tmp = nums1 nums1 = tmp } else { var num1result: [Int] = [] for i in 0 ..\u0026lt; m { num1result.append(nums1[i]) } var num2result: [Int] = [] for i in 0 ..\u0026lt; n { num2result.append(nums2[i]) } var result = num1result + num2result result.sort() nums1 = result } } } Approach The brute-force way to solve this problem is to check the lengths of m and n, and if it\u0026rsquo;s 0, assign a copy of nums2 or nums1 appropriately. In case m and n are not equal to 0, create additional arrays and loop through nums1 and nums2, taking into account the number of elements in the m and n properties.\nTime Complexity: O(logn) because it uses the underlying sort method. Space Complexity: O(m+n) because it uses additional arrays for num1 and num2 results. Optimized Approach I found a more optimal solution that uses Time Complexity: O(m + n), Space Complexity: O(1), and a three-pointer technique. In this solution, the i pointer reads values from nums1, the j pointer reads values from nums2, and the w pointer writes values to nums1. Loop backward through the sum of m + n elements and update the nums1 values. Decrement the i pointer if i is greater than or equal to 0 and the value of nums1[i] is greater than nums2[j]. If not, update the value in nums1 and decrement the j pointer.\nclass Solution { func merge(_ nums1: inout [Int], _ m: Int, _ nums2: [Int], _ n: Int) { var i = m - 1 var j = n - 1 for w in stride(from:n+m-1, through:0, by:-1) { if j \u0026lt; 0 { break } if i \u0026gt;= 0 \u0026amp;\u0026amp; nums1[i] \u0026gt; nums2[j] { nums1[w] = nums1[i] i -= 1 } else { nums1[w] = nums2[j] j -= 1 } } } } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/dsa-merge-sorted-array-problem/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eIn the \u003ca href=\"https://dmytros.blog/posts/data-structures-and-algorithms-arrays-swift/\"\u003eprevious chapter\u003c/a\u003e, we discussed Data Structures and Algorithms, delved into an overview of Dynamic Arrays, and solved the \u0026ldquo;Remove Element\u0026rdquo; problem.\u003c/p\u003e\n\u003cp\u003eIn this article, I\u0026rsquo;m going to show one of the ways to solve the \u003ca href=\"https://leetcode.com/problems/merge-sorted-array/description/?envType=study-plan-v2\u0026amp;envId=top-interview-150\"\u003e88. Merge Sorted Array\u003c/a\u003e problem.\u003c/p\u003e\n\u003ch3 id=\"problem\"\u003eProblem\u003c/h3\u003e\n\u003cp\u003eYou are given two integer arrays,¬†\u003ccode\u003enums1\u003c/code\u003e¬†and¬†\u003ccode\u003enums2\u003c/code\u003e, sorted in¬†non-decreasing order, and two integers,¬†\u003ccode\u003em\u003c/code\u003e¬†and¬†\u003ccode\u003en\u003c/code\u003e, representing the number of elements in¬†\u003ccode\u003enums1\u003c/code\u003e¬†and¬†\u003ccode\u003enums2\u003c/code\u003e, respectively. Merge¬†\u003ccode\u003enums1\u003c/code\u003e¬†and¬†\u003ccode\u003enums2\u003c/code\u003e¬†into a single array sorted in¬†non-decreasing order. The final sorted array should not be returned by the function but should instead be¬†stored inside the array¬†\u003ccode\u003enums1\u003c/code\u003e. To accommodate this,¬†\u003ccode\u003enums1\u003c/code\u003e¬†has a length of¬†\u003ccode\u003em + n\u003c/code\u003e, where the first¬†\u003ccode\u003em\u003c/code\u003e¬†elements denote the elements that should be merged, and the last¬†\u003ccode\u003en\u003c/code\u003e¬†elements are set to¬†\u003ccode\u003e0\u003c/code\u003e¬†and should be ignored.¬†\u003ccode\u003enums2\u003c/code\u003e¬†has a length of¬†\u003ccode\u003en\u003c/code\u003e.\u003c/p\u003e","title":"DSA - Merge Sorted Array Problem"},{"content":"Introduction I‚Äôve always been curious about data structures and algorithms, and how they can improve user experiences while saving money for businesses through optimized computations.\nIn this series of articles, I‚Äôm going to solve LeetCode problems and share my approach with you.\nI‚Äôve just started my journey in solving LeetCode problems, so my solutions might not be as efficient as they could be, but I‚Äôm always looking for improvement.\nBefore each topic, I‚Äôll provide a brief introduction to the data structure, algorithm, or technique I‚Äôll be using to solve a specific problem.\nData Structure Let‚Äôs actually find out what a data structure is.\nA data structure is a way of organizing and storing data that is chosen for efficient access and modification. A data structure is a collection of data values and the relationships among them.\nAlgorithm An algorithm is a finite set of instructions that helps solve a specific problem. A real-world example could be a cooking recipe or the steps to prepare coffee with a coffee machine.\nArrays In the Swift programming language, arrays are dynamic by default. A dynamic array is a commonly used data structure that consists of a collection of elements of the same memory size, with each element identified by an index or key. You can access, remove, and add new elements to the tail by index in O(1) time.\nTime Complexity Peak Index Insert or Delete from Beginning Insert or Delete from End Insert or Delete from Middle O(1) O(n) O(1) O(n) Resizing a Dynamic Array A dynamic array increases its underlying capacity and resizes to double its size only when the array size equals its capacity, to avoid the expensive cost of resizing frequently.\nProblem 27. Remove Element. Given an integer array¬†nums¬†and an integer¬†val, remove all occurrences of¬†val¬†in¬†nums¬†in-place. The order of the elements may be changed. Then return¬†the number of elements in¬†nums¬†which are not equal to¬†val. Consider the number of elements in¬†nums¬†which are not equal to¬†val¬†be¬†k, to get accepted, you need to do the following things:\nChange the array¬†nums¬†such that the first¬†k¬†elements of¬†nums¬†contain the elements which are not equal to¬†val. The remaining elements of¬†nums¬†are not important as well as the size of¬†nums. Return¬†k. Solution class Solution { func removeElement(_ nums: inout [Int], _ val: Int) -\u0026gt; Int { var i = 0 while i \u0026lt; nums.count { if nums[i] == val { nums.remove(at: i) } else { i += 1 } } return nums.count } } Approach to Solving Problems One brute-force way to solve this problem is to loop through all values and check if a number is equal to a value. If it is, then remove the element with this index from the array; if not, increment the index.\nTime Complexity: O(n) because the value can be at the end of the array, requiring a loop through all values.\nSpace Complexity: O(1) because no additional space is required; all occurrences of the value are removed in-place.\nResources I‚Äôm very grateful for the NeetCode roadmap and in-depth algorithm explanations. I‚Äôve learned a lot about new techniques and ways to solve problems more efficiently. I recommend checking out the NeetCode site and YouTube channel.\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/data-structures-and-algorithms-arrays-swift/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI‚Äôve always been curious about data structures and algorithms, and how they can improve user experiences while saving money for businesses through optimized computations.\u003c/p\u003e\n\u003cp\u003eIn this series of articles, I‚Äôm going to solve LeetCode problems and share my approach with you.\u003c/p\u003e\n\u003cp\u003eI‚Äôve just started my journey in solving LeetCode problems, so my solutions might not be as efficient as they could be, but I‚Äôm always looking for improvement.\u003c/p\u003e\n\u003cp\u003eBefore each topic, I‚Äôll provide a brief introduction to the data structure, algorithm, or technique I‚Äôll be using to solve a specific problem.\u003c/p\u003e","title":"Data Structures and Algorithms Arrays Swift"},{"content":"Introduction A well-performing application is the heart of a good user experience. If an application responds well, it helps attract more users and grow the business around it. On the other hand, if it performs poorly, it frustrates users and leads them to uninstall the app. To solve these issues, we need tools to monitor app behavior. Luckily for us, Xcode provides a list of tools that will help us resolve these problems.\nCommon Problems If I could generalize common problems that every iOS developer deals with while working on a multi-user app, it would be:\nUnresponsiveness and hangs Memory issues Power-consumption issues I/O issues Network-related issues Slow app launch time Ways to Address Common Problems If you want to improve any of these categories, Apple provides developers multiple ways to do it:\nThe first way is to use Xcode Organizer to view metrics for launch time, memory usage, energy consumption, etc. The second way is to collect health information about your app using MetricKit. The third way is to get feedback from TestFlight testers about their experience using the beta version of your app. The fourth way is to get feedback from real users through email or an interface inside your app. Tools That Can Help Solve Problems If you have Unresponsiveness and hangs, you can use the Time Profiler tool to find what causes the problem.\nFor Memory issues, you can use Allocations and Leaks. For Power-consumption issues, you can use the Energy Log tool. For I/O issues, you can use the File Activity tool. For Network-related issues, you can use the Network Template tool. Resources If you want more detailed information about optimizing app performance, I recommend reading the official Apple documentation. It describes techniques in depth and has a lot of related resources and recommendations.\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/optimizing-ios-app-performance-common-techniques/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eA well-performing application is the heart of a good user experience. If an application responds well, it helps attract more users and grow the business around it. On the other hand, if it performs poorly, it frustrates users and leads them to uninstall the app. To solve these issues, we need tools to monitor app behavior. Luckily for us, Xcode provides a list of tools that will help us resolve these problems.\u003c/p\u003e","title":"Optimizing iOS App Performance - Common Techniques"},{"content":"Introduction Previously, I worked with a healthcare app that used the HealthKit framework, but I did not get the opportunity to implement it myself. I decided to look into it and share what I found. In this article, I will focus on the steps to integrate HealthKit, write, and access its data.\nPreparation Before we dive into implementation, I assume that you have an active Apple Developer account; without it, you will not be able to access the HealthKit Store. Let‚Äôs add:\nHealthKit Capability to the project Privacy permission Privacy ‚Äì Health Share Usage Description, Privacy ‚Äì Health Update Usage Description keys to Info.plist. Implementation First Step The first step is to call the isHealthDataAvailable method and make sure that it is available.\nguard HKHealthStore.isHealthDataAvailable() else { throw HealthkitSetupError.notAvailableOnDevice } Data Type Preparation Next, you need to prepare the data types that you will be reading and writing from the HealthKit central repository.\nguard let height = HKObjectType.quantityType(forIdentifier: .height), let bodyMass = HKObjectType.quantityType(forIdentifier: .bodyMass), let activeEnergyBurned = HKObjectType.quantityType(forIdentifier: .activeEnergyBurned) else { throw HealthkitSetupError.dataTypeNotAvailable } let typesToWrite: Set\u0026lt;HKSampleType\u0026gt; = [height, bodyMass, HKObjectType.workoutType()] let typesToRead: Set\u0026lt;HKObjectType\u0026gt; = [height, bodyMass, activeEnergyBurned, HKObjectType.workoutType()] Request Authorization Next, you need to request authorization with the data types that you defined above.\ntry await HKHealthStore().requestAuthorization(toShare: typesToWrite, read: typesToRead) import Inject import SwiftUI public struct ContentView: View { @ObserveInjection var inject @State var healthKitService: HealthKitService = .init() public init() {} public var body: some View { VStack {}.onAppear { Task { do { try await healthKitService.requestAuthorization() print(\u0026#34;HealthKit authorization request success\u0026#34;) } catch { print(\u0026#34;HealthKit authorization request failed error: \\(error)\u0026#34;) } } } .enableInjection() } } Reading/Saving Data Reading Data When you need to read/save data using HealthKit, you can do it by applying the HKHealthStore object.\n\u0026#x1f4a1; HKHealthStore - The access point for all data managed by HealthKit.\nAs an example, you can read characteristic data by utilizing HKHealthStore-defined methods such as biologicalSex, bloodType, dateOfBirthComponents, etc.\nfunc getProfileData() throws -\u0026gt; ProfileData { let healthStore = HKHealthStore() let dateOfBirthComponents = try healthStore.dateOfBirthComponents() let today = Date() let calendar = Calendar.current let todayDateComponents = calendar.dateComponents([.year], from: today) let thisYear = todayDateComponents.year! let age = thisYear - dateOfBirthComponents.year! let biologicalSex = try healthStore.biologicalSex() let bloodType = try healthStore.bloodType() let profileData = ProfileData(age: age, biologicalSex: biologicalSex.biologicalSex, bloodType: bloodType.bloodType) return profileData } struct ProfileData { var age: Int? var biologicalSex: HKBiologicalSex? var bloodType: HKBloodType? } Saving Data In the case of saving data, you need to specify the quantity type, quantity, and create a sample.\nfunc saveHeight(height: Double, date: Date) async throws { let quantityType = HKQuantityType.quantityType(forIdentifier: .height)! let quantity = HKQuantity(unit: .meter(), doubleValue: height) let sample = HKQuantitySample(type: quantityType, quantity: quantity, start: date, end: date) try await HKHealthStore().save(sample) } \u0026#x1f4a1; HKQuantityType - A type that identifies samples that store numerical values.\n\u0026#x1f4a1; HKQuantity - An object that stores a value for a given unit.\n\u0026#x1f4a1; HKQuantitySample - A sample that represents a quantity, including the value and the units.\nComplete Example import HealthKit enum HealthkitSetupError: Error { case notAvailableOnDevice case dataTypeNotAvailable } final class HealthKitService { func requestAuthorization() async throws { guard HKHealthStore.isHealthDataAvailable() else { throw HealthkitSetupError.notAvailableOnDevice } guard let height = HKObjectType.quantityType(forIdentifier: .height), let bodyMass = HKObjectType.quantityType(forIdentifier: .bodyMass), let activeEnergyBurned = HKObjectType.quantityType(forIdentifier: .activeEnergyBurned), let dateOfBirth = HKObjectType.characteristicType(forIdentifier: .dateOfBirth), let bloodType = HKObjectType.characteristicType(forIdentifier: .bloodType), let biologicalSex = HKObjectType.characteristicType(forIdentifier: .biologicalSex) else { throw HealthkitSetupError.dataTypeNotAvailable } let typesToWrite: Set\u0026lt;HKSampleType\u0026gt; = [height, bodyMass, HKObjectType.workoutType()] let typesToRead: Set\u0026lt;HKObjectType\u0026gt; = [height, bodyMass, activeEnergyBurned, HKObjectType.workoutType(), dateOfBirth, bloodType, biologicalSex] try await HKHealthStore().requestAuthorization(toShare: typesToWrite, read: typesToRead) } func getProfileData() throws -\u0026gt; ProfileData { let healthStore = HKHealthStore() let dateOfBirthComponents = try healthStore.dateOfBirthComponents() let today = Date() let calendar = Calendar.current let todayDateComponents = calendar.dateComponents([.year], from: today) let thisYear = todayDateComponents.year! let age = thisYear - dateOfBirthComponents.year! let biologicalSex = try healthStore.biologicalSex() let bloodType = try healthStore.bloodType() let profileData = ProfileData(age: age, biologicalSex: biologicalSex.biologicalSex, bloodType: bloodType.bloodType) return profileData } func saveHeight(height: Double, date: Date) async throws { let quantityType = HKQuantityType.quantityType(forIdentifier: .height)! let quantity = HKQuantity(unit: .meter(), doubleValue: height) let sample = HKQuantitySample(type: quantityType, quantity: quantity, start: date, end: date) try await HKHealthStore().save(sample) } } struct ProfileData { var age: Int? var biologicalSex: HKBiologicalSex? var bloodType: HKBloodType? } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/implementing-healthkit-in-an-ios-app/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003ePreviously, I worked with a healthcare app that used the HealthKit framework, but I did not get the opportunity to implement it myself. I decided to look into it and share what I found. In this article, I will focus on the steps to integrate HealthKit, write, and access its data.\u003c/p\u003e\n\u003ch3 id=\"preparation\"\u003ePreparation\u003c/h3\u003e\n\u003cp\u003eBefore we dive into implementation, I assume that you have an active Apple Developer account; without it, you will not be able to access the HealthKit Store.\nLet‚Äôs add:\u003c/p\u003e","title":"Implementing HealthKit in an iOS App"},{"content":"Introduction Nowadays, location is an essential feature in almost every application. It\u0026rsquo;s very important to know the best ways to implement it without affecting performance and user experience. In this article, I will focus on how to implement general methods in location service.\nPreparation Before we begin, let\u0026rsquo;s add location permission keys to Info.plist:\nPrivacy - Location When In Use Usage Description Privacy - Location Always and When In Use Usage Description First Step The first step is to create LocationService with the requestPermissions method to be able to receive location events.\nprivate let locationManager: CLLocationManager override init() { self.locationManager = CLLocationManager() super.init() requestPermissions() } func requestPermissions() { locationManager.requestWhenInUseAuthorization() } üí° Use requestWhenInUseAuthorization only if you need location updates when the user is using your app.\nSecond Step The second step is to add locationManager.delegate to be able to handle location updates or errors.\n// MARK: - CLLocationManagerDelegate extension LocationService: CLLocationManagerDelegate { func locationManager( _ manager: CLLocationManager, didUpdateLocations locations: [CLLocation] ) { guard let location = locations.first else { return } let latitude = location.coordinate.latitude let longitude = location.coordinate.longitude print(\u0026#34;Location: \\(latitude), \\(longitude)\u0026#34;) } func locationManager( _ manager: CLLocationManager, didFailWithError error: Error ) { print(\u0026#34;Error: \\(error)\u0026#34;) } } üí° CLLocationManager - The object you use to start and stop the delivery of location-related events to your app.\nüí° CLLocationManagerDelegate - The methods you use to receive events from an associated location-manager object.\nAuthorization Status Sometimes you need to know about authorization status and create logic around it. In this case, you can check the status by using the authorizationStatus property.\nfunc authorizationStatus() { switch locationManager.authorizationStatus { case .notDetermined: print(\u0026#34;Not determined\u0026#34;) case .restricted: print(\u0026#34;Restricted\u0026#34;) case .denied: print(\u0026#34;Denied\u0026#34;) case .authorizedAlways: print(\u0026#34;Authorized always\u0026#34;) case .authorizedWhenInUse: print(\u0026#34;Authorized when in use\u0026#34;) @unknown default: print(\u0026#34;Unknown\u0026#34;) } } One-Time Location Update In case you want to ask the user for location only once, you can call the locationManager.requestLocation() method.\nfunc requestLocationOnce() { locationManager.requestLocation() } Real-Time Location Updates In case you need to get real-time location updates, you can use the startUpdatingLocation and stopUpdatingLocation methods.\nfunc requestRealTimeLocationUpdates() { locationManager.startUpdatingLocation() DispatchQueue.main.asyncAfter(deadline: .now() + 10) { self.locationManager.stopUpdatingLocation() } } ‚ö†Ô∏è Do not forget to call the stopUpdatingLocation method, as it can cause performance issues.\nComplete Example import CoreLocation final class LocationService: NSObject { private let locationManager: CLLocationManager override init() { locationManager = CLLocationManager() super.init() locationManager.delegate = self requestPermissions() } func requestPermissions() { locationManager.requestWhenInUseAuthorization() } func requestLocationOnce() { locationManager.requestLocation() } func requestRealTimeULocationUpdates() { locationManager.startUpdatingLocation() DispatchQueue.main.asyncAfter(deadline: .now() + 10) { self.locationManager.stopUpdatingLocation() } } func authorizationStatus() { switch locationManager.authorizationStatus { case .notDetermined: print(\u0026#34;Not determined\u0026#34;) case .restricted: print(\u0026#34;Restricted\u0026#34;) case .denied: print(\u0026#34;Denied\u0026#34;) case .authorizedAlways: print(\u0026#34;Authorized always\u0026#34;) case .authorizedWhenInUse: print(\u0026#34;Authorized when in use\u0026#34;) @unknown default: print(\u0026#34;Unknown\u0026#34;) } } } // MARK: - CLLocationManagerDelegate extension LocationService: CLLocationManagerDelegate { func locationManager( _: CLLocationManager, didUpdateLocations locations: [CLLocation] ) { guard let location = locations.first else { return } let lattitude = location.coordinate.latitude let longitude = location.coordinate.longitude print(\u0026#34;Location: \\(lattitude), \\(longitude)\u0026#34;) } func locationManager( _: CLLocationManager, didFailWithError error: Error ) { print(\u0026#34;Error: \\(error)\u0026#34;) } } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/implementing-location-service/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eNowadays, location is an essential feature in almost every application. It\u0026rsquo;s very important to know the best ways to implement it without affecting performance and user experience. In this article, I will focus on how to implement general methods in location service.\u003c/p\u003e\n\u003ch3 id=\"preparation\"\u003ePreparation\u003c/h3\u003e\n\u003cp\u003eBefore we begin, let\u0026rsquo;s add location permission keys to \u003ccode\u003eInfo.plist\u003c/code\u003e:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ePrivacy - Location When In Use Usage Description\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePrivacy - Location Always and When In Use Usage Description\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"first-step\"\u003eFirst Step\u003c/h3\u003e\n\u003cp\u003eThe first step is to create \u003ccode\u003eLocationService\u003c/code\u003e with the \u003ccode\u003erequestPermissions\u003c/code\u003e method to be able to receive location events.\u003c/p\u003e","title":"Implementing Location Service"},{"content":"Introduction I haven\u0026rsquo;t had the opportunity to build a chatbot before. This topic was trending some time ago, and I always wanted to implement it myself. In this article, I will focus on the steps you need to know to successfully build and run a chatbot application.\nFirst Step The first step is to add the OpenAI dependency to your project:\n.package(url: \u0026#34;https://github.com/MacPaw/OpenAI.git\u0026#34;, branch: \u0026#34;main\u0026#34;) dependencies: [ .byNameItem( name: \u0026#34;OpenAI\u0026#34;, condition: .when(platforms: [ .iOS, ]) ), ], Second Step The second step is to generate an OpenAI key and replace it inside your project.\nThird Step The third step is to create ChatGPTService and add the getAssistantResponse method that will be receiving responses from the GPT model:\nimport Foundation import OpenAI final class ChatGPTService { private let client: OpenAI init() { client = OpenAI(apiToken: \u0026#34;YOUR_TOKEN\u0026#34;) } func getAssistantResponse(_ messages: [Message], _ completion: @escaping (Message?) -\u0026gt; Void) { let query = ChatQuery( messages: messages.map { .init(role: .user, content: $0.content)! }, model: .gpt3_5Turbo ) client.chats(query: query) { result in switch result { case let .success(success): guard let choice = success.choices.first, let message = choice.message.content?.string else { completion(nil); return } DispatchQueue.main.async { completion(Message(content: message, isUser: false)) } case let .failure(error): print(error) completion(nil) } } } } Fourth Step The fourth step is to add ChatService that will be responsible for adding, sending messages, and redrawing the UI:\nimport Foundation struct Message: Identifiable { var id: UUID = .init() var content: String var isUser: Bool } final class ChatService: ObservableObject { @Published private(set) var messages: [Message] = [] private let chatGPTService: ChatGPTService = .init() func sendMessage(_ message: Message) { messages.append(message) chatGPTService.getAssistantResponse(messages) { [unowned self] message in if let message = message { messages.append(message) } } } } Fifth Step The fifth step is to connect the UI and ChatService:\nimport SwiftUI struct ChatView: View { @StateObject private var chatService: ChatService = .init() @State private var message: String = \u0026#34;\u0026#34; var body: some View { VStack { ScrollView { ForEach(chatService.messages) { message in Text(message.content) } } HStack { TextField(\u0026#34;Message\u0026#34;, text: $message) Button(\u0026#34;Send\u0026#34;) { chatService.sendMessage(Message(content: message, isUser: true)) } } } } } Caveats Be aware of API quota limits; you can exceed your limits very quickly.\nResources https://www.youtube.com/watch?v=fkg3UzopiHY\u0026ab_channel=JaredDavidson\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/implementing-chatgpt-in-an-ios-app/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI haven\u0026rsquo;t had the opportunity to build a chatbot before. This topic was trending some time ago, and I always wanted to implement it myself. In this article, I will focus on the steps you need to know to successfully build and run a chatbot application.\u003c/p\u003e\n\u003ch3 id=\"first-step\"\u003eFirst Step\u003c/h3\u003e\n\u003cp\u003eThe first step is to add the \u003ca href=\"https://github.com/MacPaw/OpenAI\"\u003eOpenAI\u003c/a\u003e dependency to your project:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epackage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://github.com/MacPaw/OpenAI.git\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebranch\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;main\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edependencies\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebyNameItem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;OpenAI\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003econdition\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewhen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eplatforms\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eiOS\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"second-step\"\u003eSecond Step\u003c/h3\u003e\n\u003cp\u003eThe second step is to \u003ca href=\"https://platform.openai.com/api-keys\"\u003egenerate an OpenAI key\u003c/a\u003e and replace it inside your project.\u003c/p\u003e","title":"Implementing ChatGPT in an iOS App"},{"content":"Introduction The Apple Sign-In feature is very helpful and offers users login functionality with one click. It could be highly beneficial from a business perspective to attract more potential customers by providing easy and secure access to application functionality. In this article, I will focus on how to implement Apple Sign-In.\nBefore implementation, let‚Äôs set up the necessary options to be able to run the app without errors.\nAdd Sign in with Apple Capability to the project \u0026#x1f4dd; Before testing on the simulator, you need to be signed in to an account with enabled two-factor authentication.\nImplementing Apple Sign-In Apple offers a built-in solution that uses the¬†Authentication Services¬†framework with ASAuthorizationAppleIDButton.\nFirst Step The first step is to set up the Sign-In button.\nfunc setupAppleIDButton() { let authButton = ASAuthorizationAppleIDButton() authButton.frame = CGRect(origin: view.center, size: CGSize(width: 128, height: 56)) authButton.addTarget(self, action: #selector(handleAuthorizationAppleIDButtonPress), for: .touchUpInside) view.addSubview(authButton) } \u0026#x1f4a1; ASAuthorizationAppleIDButton - A control that enables users to initiate the Sign In with Apple flow.\nSecond Step The second step is to handle the authorization Apple ID button press.\n@objc func handleAuthorizationAppleIDButtonPress() { let appleIdProvider = ASAuthorizationAppleIDProvider() let request = appleIdProvider.createRequest() request.requestedScopes = [.fullName, .email] let authorizationController = ASAuthorizationController(authorizationRequests: [request]) authorizationController.delegate = self authorizationController.presentationContextProvider = self authorizationController.performRequests() } \u0026#x1f4a1; ASAuthorizationAppleIDProvider - A mechanism for generating requests to authenticate users based on their Apple ID.\n\u0026#x1f4a1; ASAuthorizationController - A controller that manages authorization requests that a provider creates.\nThird Step The third step is to implement authorizationController.delegate and authorizationController.presentationContextProvider.\n// MARK: - ASAuthorizationControllerDelegate extension LoginViewController: ASAuthorizationControllerDelegate { /// - Tag: did_complete_authorization public func authorizationController(controller _: ASAuthorizationController, didCompleteWithAuthorization authorization: ASAuthorization) { switch authorization.credential { case let appleIDCredential as ASAuthorizationAppleIDCredential: // Create an account in your system. let userIdentifier = appleIDCredential.user let fullName = appleIDCredential.fullName let email = appleIDCredential.email case let passwordCredential as ASPasswordCredential: // Sign in using an existing iCloud Keychain credential. let username = passwordCredential.user let password = passwordCredential.password default: break } } /// - Tag: did_complete_error public func authorizationController(controller _: ASAuthorizationController, didCompleteWithError error: any Error) { // Handle error. print(error) } } \u0026#x1f4a1; ASAuthorizationControllerDelegate - An interface for providing information about the outcome of an authorization request.\n// MARK: - ASAuthorizationControllerPresentationContextProviding extension LoginViewController: ASAuthorizationControllerPresentationContextProviding { /// - Tag: provide_presentation_anchor public func presentationAnchor(for _: ASAuthorizationController) -\u0026gt; ASPresentationAnchor { view.window! } } \u0026#x1f4a1; ASAuthorizationControllerPresentationContextProviding - An interface the controller uses to ask a delegate for a presentation context.\nResources Implementing User Authentication with Sign In with Apple\nDownload Materials Download\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/implementing-apple-sign-in-to-an-ios-app/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eThe Apple Sign-In feature is very helpful and offers users login functionality with one click. It could be highly beneficial from a business perspective to attract more potential customers by providing easy and secure access to application functionality. In this article, I will focus on how to implement Apple Sign-In.\u003c/p\u003e\n\u003cp\u003eBefore implementation, let‚Äôs set up the necessary options to be able to run the app without errors.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAdd \u003ccode\u003eSign in with Apple\u003c/code\u003e Capability to the project\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-f7bcf\" hidden\u003e\n    \u003clabel for=\"zoomCheck-f7bcf\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.png#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026#x1f4dd; Before testing on the simulator, you need to be signed in to an account with enabled two-factor authentication.\u003c/p\u003e","title":"Implementing Apple Sign-In to an iOS App"},{"content":"Introduction I\u0026rsquo;ve never had the chance to use this technology before. I\u0026rsquo;ve always wondered how gRPC operates. In this article, I will explore what gRPC is, how to install and use it, and when to use gRPC.\nWhat is gRPC? gRPC is an open-source, high-performance framework that facilitates efficient communication in distributed systems. gRPC is an implementation of the RPC (Remote Procedure Call) protocol, which enables services to call functions on other machines as if they were local software methods. gRPC was developed by Google in 2015, and it includes several features that enhance the way remote procedure calls are made. For instance, its use of Protocol Buffers (Protobuf) supports strongly typed service contracts, data serialization, and code generation in a variety of programming languages. It also uses HTTP/2 as its transport protocol, which facilitates bi-directional streaming and reduces latency.\nInstallation Process Prerequisites Swift Version gRPC requires Swift 5.8 or higher.\nInstall Protocol Buffers Install the protoc compiler that is used to generate gRPC service code. The simplest way to do this is to download pre-compiled binaries for your platform (protoc-\u0026lt;version\u0026gt;-\u0026lt;platform\u0026gt;.zip) from here: https://github.com/google/protobuf/releases.\nUnzip this file. Update the environment variable PATH to include the path to the protoc binary file. Download the Example You\u0026rsquo;ll need a local copy of the example code to work through this quickstart. Download the example code from our GitHub repository (the following command clones the entire repository, but you just need the examples for this quickstart and other tutorials):\n# Clone the repository at the latest release to get the example code (replacing x.y.z with the latest release, for example 1.13.0): git clone -b x.y.z https://github.com/grpc/grpc-swift # Navigate to the repository cd grpc-swift/ Implementation Process Run a gRPC Application From the grpc-swift directory:\nCompile and run the server:\nswift run HelloWorldServer In another terminal, compile and run the client:\nswift run HelloWorldClient Greeter received: Hello stranger! Congratulations! You\u0026rsquo;ve just run a client-server application with gRPC.\nUpdate a gRPC Service Now let\u0026rsquo;s look at how to update the application with an extra method on the server for the client to call. Our gRPC service is defined using protocol buffers; you can find out lots more about how to define a service in a .proto file in What is gRPC?. For now, all you need to know is that both the server and the client \u0026ldquo;stub\u0026rdquo; have a SayHello RPC method that takes a HelloRequest parameter from the client and returns a HelloReply from the server, and that this method is defined like this:\n// The greeting service definition. service Greeter { // Sends a greeting. rpc SayHello (HelloRequest) returns (HelloReply) {} } // The request message containing the user\u0026#39;s name. message HelloRequest { string name = 1; } // The response message containing the greetings. message HelloReply { string message = 1; } Let\u0026rsquo;s update this so that the Greeter service has two methods. Edit Protos/upstream/grpc/examples/helloworld.proto and update it with a new SayHelloAgain method, with the same request and response types:\n// The greeting service definition. service Greeter { // Sends a greeting. rpc SayHello (HelloRequest) returns (HelloReply) {} // Sends another greeting. rpc SayHelloAgain (HelloRequest) returns (HelloReply) {} } // The request message containing the user\u0026#39;s name. message HelloRequest { string name = 1; } // The response message containing the greetings. message HelloReply { string message = 1; } (Don\u0026rsquo;t forget to save the file!)\nUpdate and Run the Application We need to regenerate Sources/Examples/v1/HelloWorld/Model/helloworld.grpc.swift, which contains our generated gRPC client and server classes. From the grpc-swift directory run:\nProtos/generate.sh This also regenerates classes for populating, serializing, and retrieving our request and response types. However, we still need to implement and call the new method in the human-written parts of our example application.\nUpdate the Server In the same directory, open Sources/Examples/v1/HelloWorld/Server/GreeterProvider.swift. Implement the new method like this:\nfinal class GreeterProvider: Helloworld_GreeterAsyncProvider { let interceptors: Helloworld_GreeterServerInterceptorFactoryProtocol? = nil func sayHello( request: Helloworld_HelloRequest, context: GRPCAsyncServerCallContext ) async throws -\u0026gt; Helloworld_HelloReply { let recipient = request.name.isEmpty ? \u0026#34;stranger\u0026#34; : request.name return Helloworld_HelloReply.with { $0.message = \u0026#34;Hello \\(recipient)!\u0026#34; } } func sayHelloAgain( request: Helloworld_HelloRequest, context: GRPCAsyncServerCallContext ) async throws -\u0026gt; Helloworld_HelloReply { let recipient = request.name.isEmpty ? \u0026#34;stranger\u0026#34; : request.name return Helloworld_HelloReply.with { $0.message = \u0026#34;Hello again \\(recipient)!\u0026#34; } } } Update the Client In the same directory, open Sources/Examples/v1/HelloWorld/Client/HelloWorldClient.swift. Call the new method like this:\nfunc run() async throws { // Setup an `EventLoopGroup` for the connection to run on. // // See: https://github.com/apple/swift-nio#eventloops-and-eventloopgroups let group = MultiThreadedEventLoopGroup(numberOfThreads: 1) // Make sure the group is shutdown when we\u0026#39;re done with it. defer { try! group.syncShutdownGracefully() } // Configure the channel, we\u0026#39;re not using TLS so the connection is `insecure`. let channel = try GRPCChannelPool.with( target: .host(\u0026#34;localhost\u0026#34;, port: self.port), transportSecurity: .plaintext, eventLoopGroup: group ) // Close the connection when we\u0026#39;re done with it. defer { try! channel.close().wait() } // Provide the connection to the generated client. let greeter = Helloworld_GreeterAsyncClient(channel: channel) // Form the request with the name, if one was provided. let request = Helloworld_HelloRequest.with { $0.name = self.name ?? \u0026#34;\u0026#34; } do { let greeting = try await greeter.sayHello(request) print(\u0026#34;Greeter received: \\(greeting.message)\u0026#34;) } catch { print(\u0026#34;Greeter failed: \\(error)\u0026#34;) } do { let greetingAgain = try await greeter.sayHelloAgain(request) print(\u0026#34;Greeter received: \\(greetingAgain.message)\u0026#34;) } catch { print(\u0026#34;Greeter failed: \\(error)\u0026#34;) } } Run! Just like we did before, from the top-level grpc-swift directory:\nCompile and run the server:\nswift run HelloWorldServer In another terminal, compile and run the client:\nswift run HelloWorldClient Greeter received: Hello stranger! Greeter received: Hello again stranger! When to Use gRPC gRPC was designed to support highly efficient, language-agnostic communication in distributed systems. It is therefore better suited than REST for microservice-based architectures, in which individual services may be developed in different programming languages and may face varying workloads. Additionally, gRPC‚Äôs use of Protobuf for binary data serialization makes it the better choice for applications that demand low latency and high throughput, while its support for different streaming patterns makes it ideal for real-time chat and video applications.\nResources gRPC vs. REST gRPC Swift Quick Start Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/implementing-grpc-swift/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI\u0026rsquo;ve never had the chance to use this technology before. I\u0026rsquo;ve always wondered how gRPC operates. In this article, I will explore what gRPC is, how to install and use it, and when to use gRPC.\u003c/p\u003e\n\u003ch3 id=\"what-is-grpc\"\u003eWhat is gRPC?\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://blog.postman.com/what-is-grpc/\"\u003egRPC\u003c/a\u003e is an open-source, high-performance framework that facilitates efficient communication in distributed systems. gRPC is an implementation of the RPC (Remote Procedure Call) protocol, which enables services to call functions on other machines as if they were local software methods. gRPC was developed by Google in 2015, and it includes several features that enhance the way remote procedure calls are made. For instance, its use of Protocol Buffers (Protobuf) supports strongly typed service contracts, data serialization, and code generation in a variety of programming languages. It also uses HTTP/2 as its transport protocol, which facilitates bi-directional streaming and reduces latency.\u003c/p\u003e","title":"Implementing gRPC Swift"},{"content":"Introduction I never had a chance to work with NFC (Near Field Communication), but I have always been curious to find out how it works. In this article, I will focus on scanning NFC tags using CoreNFC with NFCNDEFReaderSession.\nPreparation Before we begin, let\u0026rsquo;s add the necessary objects:\nNear Field Communication Tag Reading capability to the project. Privacy - NFC Scan Usage Description key to Info.plist. Near Field Communication Tag Reader Session Formats to the entitlements file. First Step The first step before starting scanning is to check if the device supports NFC reading by using the NFCNDEFReaderSession.readingAvailable property.\nguard NFCNDEFReaderSession.readingAvailable else { let alertController = UIAlertController( title: \u0026#34;Scanning Not Supported\u0026#34;, message: \u0026#34;This device doesn\u0026#39;t support tag scanning.\u0026#34;, preferredStyle: .alert ) alertController.addAction(UIAlertAction(title: \u0026#34;OK\u0026#34;, style: .default, handler: nil)) self.present(alertController, animated: true, completion: nil) return } Second Step The second step is to create an NFCNDEFReaderSession object by calling the¬†init(delegate:queue:invalidateAfterFirstRead:)¬†initializer method. Set up alertMessage to give users instructions while the phone is scanning NFC tags. Finally, call begin() to start the reader session.\nsession = NFCNDEFReaderSession(delegate: self, queue: nil, invalidateAfterFirstRead: false) session?.alertMessage = \u0026#34;Hold your iPhone near the item to learn more about it.\u0026#34; session?.begin() Third Step The third step is to implement NFCNDEFReaderSessionDelegate to be able to receive notifications from the reader session when it reads an NDEF message or becomes invalid due to ending the session or encountering an error.\n// MARK: - NFCNDEFReaderSessionDelegate /// - Tag: processingTagData func readerSession(_ session: NFCNDEFReaderSession, didDetectNDEFs messages: [NFCNDEFMessage]) { DispatchQueue.main.async { // Process detected NFCNDEFMessage objects. self.detectedMessages.append(contentsOf: messages) self.tableView.reloadData() } } /// - Tag: endScanning func readerSession(_ session: NFCNDEFReaderSession, didInvalidateWithError error: Error) { // Check the invalidation reason from the returned error. if let readerError = error as? NFCReaderError { // Show an alert when the invalidation reason is not because of a // successful read during a single-tag read session, or because the // user canceled a multiple-tag read session from the UI or // programmatically using the invalidate method call. if (readerError.code != .readerSessionInvalidationErrorFirstNDEFTagRead) \u0026amp;\u0026amp; (readerError.code != .readerSessionInvalidationErrorUserCanceled) { let alertController = UIAlertController( title: \u0026#34;Session Invalidated\u0026#34;, message: error.localizedDescription, preferredStyle: .alert ) alertController.addAction(UIAlertAction(title: \u0026#34;OK\u0026#34;, style: .default, handler: nil)) DispatchQueue.main.async { self.present(alertController, animated: true, completion: nil) } } } // To read new tags, a new session instance is required. self.session = nil } Resources You can find a more detailed article in the Apple Developer Documentation, where each step is explained in depth.\nDownload Materials Download\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/scanning-nfc-tags-using-corenfc-in-an-ios-app/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI never had a chance to work with NFC (Near Field Communication), but I have always been curious to find out how it works. In this article, I will focus on scanning NFC tags using \u003ca href=\"https://developer.apple.com/documentation/corenfc\"\u003e\u003ccode\u003eCoreNFC\u003c/code\u003e\u003c/a\u003e with \u003ca href=\"https://developer.apple.com/documentation/corenfc/nfcndefreadersession\"\u003e\u003ccode\u003eNFCNDEFReaderSession\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"preparation\"\u003ePreparation\u003c/h3\u003e\n\u003cp\u003eBefore we begin, let\u0026rsquo;s add the necessary objects:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eNear Field Communication Tag Reading\u003c/code\u003e capability to the project.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePrivacy - NFC Scan Usage Description\u003c/code\u003e key to \u003ccode\u003eInfo.plist\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eNear Field Communication Tag Reader Session Formats\u003c/code\u003e to the entitlements file.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"first-step\"\u003eFirst Step\u003c/h3\u003e\n\u003cp\u003eThe first step before starting scanning is to check if the device supports NFC reading by using the \u003ccode\u003eNFCNDEFReaderSession.readingAvailable\u003c/code\u003e property.\u003c/p\u003e","title":"Scanning NFC tags using CoreNFC in an iOS app"},{"content":"Introduction I had the chance to work on a project where communication via BLE was at the heart of the project.\nBefore adding any code to application, I always asked myself about two scenarios:\nThe first scenario is when the device acts as a central device while searching for and connecting to peripheral devices. The second scenario is when the device acts as a peripheral device by using CBCharacteristic and changes its value. In this article, I will focus on the first scenario and will show how to scan for peripheral devices.\nFirst Step The first step is to add permission for Bluetooth: Privacy - Bluetooth Always Usage Description Second Step The second step is to initialize centralManager:\nprivate var centralManager: CBCentralManager! override init() { super.init() centralManager = CBCentralManager(delegate: self, queue: nil, options: [CBCentralManagerOptionShowPowerAlertKey: true]) } CBCentralManager - CBCentralManager objects manage discovered or connected remote peripheral devices (represented by CBPeripheral objects), including scanning for, discovering, and connecting to advertising peripherals.\nCBCentralManagerDelegate - The single required centralManagerDidUpdateState method indicates the availability of the central manager, while the optional methods allow for the discovery and connection of peripherals.\nCBCentralManagerOptionShowPowerAlertKey - An NSNumber (Boolean) indicating that the system should, if Bluetooth is powered off when CBCentralManager is instantiated, display a warning dialog to the user.\nThird Step The third step is to scanForPeripherals after centralManager changes its state to poweredOn.\nfunc centralManagerDidUpdateState(_ central: CBCentralManager) { switch central.state { case .poweredOn: print(\u0026#34;CBManager is powered on\u0026#34;) centralManager.scanForPeripherals(withServices: nil) case .poweredOff: print(\u0026#34;CBManager is not powered on\u0026#34;) return case .resetting: print(\u0026#34;CBManager is resetting\u0026#34;) return case .unauthorized: print(\u0026#34;CBManager is unauthorized\u0026#34;) return case .unknown: print(\u0026#34;CBManager state is unknown\u0026#34;) return case .unsupported: print(\u0026#34;Bluetooth is not supported on this device\u0026#34;) return @unknown default: print(\u0026#34;A previously unknown central manager state occurred\u0026#34;) return } } Fourth Step The fourth step is to implement the didDiscover method that is called when the central manager discovers a peripheral.\nfunc centralManager(_ central: CBCentralManager, didDiscover peripheral: CBPeripheral, advertisementData: [String : Any], rssi RSSI: NSNumber) { // Reject if the signal strength is too low. // Change the minimum RSSI value depending on your app‚Äôs use case. guard RSSI.intValue \u0026gt;= -50 else { print(\u0026#34;Discovered peripheral not in expected range, at \\(RSSI.intValue)\u0026#34;) return } print(\u0026#34;Discovered \\(String(describing: peripheral.name)) at \\(RSSI.intValue)\u0026#34;) } The sample implementation of this method uses the RSSI (Received Signal Strength Indicator) parameter to determine whether the signal is strong enough. RSSI values are provided as negative numbers, with a theoretical maximum of 0.\nComplete Example import Foundation import CoreBluetooth final class CentralManager: NSObject { private var centralManager: CBCentralManager! override init() { super.init() centralManager = CBCentralManager(delegate: self, queue: nil, options: [CBCentralManagerOptionShowPowerAlertKey: true]) } } // MARK: - CBCentralManagerDelegate extension CentralManager: CBCentralManagerDelegate { func centralManagerDidUpdateState(_ central: CBCentralManager) { switch central.state { case .poweredOn: print(\u0026#34;CBManager is powered on\u0026#34;) centralManager.scanForPeripherals(withServices: nil) case .poweredOff: print(\u0026#34;CBManager is not powered on\u0026#34;) return case .resetting: print(\u0026#34;CBManager is resetting\u0026#34;) return case .unauthorized: print(\u0026#34;CBManager is unauthorized\u0026#34;) return case .unknown: print(\u0026#34;CBManager state is unknown\u0026#34;) return case .unsupported: print(\u0026#34;Bluetooth is not supported on this device\u0026#34;) return @unknown default: print(\u0026#34;A previously unknown central manager state occurred\u0026#34;) return } } func centralManager(_ central: CBCentralManager, didDiscover peripheral: CBPeripheral, advertisementData: [String : Any], rssi RSSI: NSNumber) { // Reject if the signal strength is too low. // Change the minimum RSSI value depending on your app‚Äôs use case. guard RSSI.intValue \u0026gt;= -50 else { print(\u0026#34;Discovered perhiperal not in expected range, at %d\u0026#34;, RSSI.intValue) print(\u0026#34;Discovered %s at %d\u0026#34;, String(describing: peripheral.name), RSSI.intValue) return } print(\u0026#34;Discovered %s at %d\u0026#34;, String(describing: peripheral.name), RSSI.intValue) } } Resources https://developer.apple.com/documentation/corebluetooth/transferring-data-between-bluetooth-low-energy-devices\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/scanning-for-peripheral-devices-using-ble-in-an-ios-app/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI had the chance to work on a project where communication via BLE was at the heart of the project.\u003c/p\u003e\n\u003cp\u003eBefore adding any code to application, I always asked myself about two scenarios:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first scenario is when the device acts as a central device while searching for and connecting to peripheral devices.\u003c/li\u003e\n\u003cli\u003eThe second scenario is when the device acts as a peripheral device by using \u003ccode\u003eCBCharacteristic\u003c/code\u003e and changes its value.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIn this article, I will focus on the first scenario and will show how to scan for peripheral devices.\u003c/p\u003e","title":"Scanning for peripheral devices using BLE in an iOS app"},{"content":"Introduction Working with batteries on iOS devices for large applications has always been tricky. The amount of energy consumed by the screen, location services, network calls, processing, background tasks, etc., is significant. From a developer\u0026rsquo;s perspective, it seems complicated, but Xcode provides tools to address this problem.\nTo find the issue, you need to open Xcode and go to the Debug Navigator.\nIn the Debug Navigator, you will see the Energy Impact gauge. In the histogram, blue indicates good performance, while red indicates overhead. Based on this information, you can analyze the overhead and resolve potential issues by utilizing Instruments such as Network, Location, CPU Profile, etc. For each case, Xcode provides instruments that allow you to dive deeper and understand what is happening in detail. Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/battery-performance-testing-for-ios-app/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eWorking with batteries on iOS devices for large applications has always been tricky. The amount of energy consumed by the \u003ccode\u003escreen\u003c/code\u003e, \u003ccode\u003elocation services\u003c/code\u003e, \u003ccode\u003enetwork calls\u003c/code\u003e, \u003ccode\u003eprocessing\u003c/code\u003e, \u003ccode\u003ebackground tasks\u003c/code\u003e, etc., is significant. From a developer\u0026rsquo;s perspective, it seems complicated, but Xcode provides tools to address this problem.\u003c/p\u003e\n\u003cp\u003eTo find the issue, you need to open Xcode and go to the \u003ccode\u003eDebug Navigator\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eIn the \u003ccode\u003eDebug Navigator\u003c/code\u003e, you will see the \u003ccode\u003eEnergy Impact\u003c/code\u003e gauge.\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-f7bcf\" hidden\u003e\n    \u003clabel for=\"zoomCheck-f7bcf\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.png#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\nIn the histogram, \u003ccode\u003eblue\u003c/code\u003e indicates good performance, while \u003ccode\u003ered\u003c/code\u003e indicates overhead.\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-793fa\" hidden\u003e\n    \u003clabel for=\"zoomCheck-793fa\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/1.png#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\nBased on this information, you can analyze the overhead and resolve potential issues by utilizing \u003ccode\u003eInstruments\u003c/code\u003e such as \u003ccode\u003eNetwork\u003c/code\u003e, \u003ccode\u003eLocation\u003c/code\u003e, \u003ccode\u003eCPU Profile\u003c/code\u003e, etc. For each case, Xcode provides instruments that allow you to dive deeper and understand what is happening in detail.\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-ebb98\" hidden\u003e\n    \u003clabel for=\"zoomCheck-ebb98\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/2.png#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e","title":"Battery Performance Testing for iOS App"},{"content":"Introduction In the previous chapter, I started talking about the video game creation process, from project setup to adding the background. Now, I\u0026rsquo;m going to add the player and physics to it.\nYou can download the project here.\nFirst Step The first step is to initialize player using SKSpriteNode, set up player.position, and add player as a child node.\nSKSpriteNode - is an onscreen graphical element that can be initialized from an image or a solid color.\nself.player = SKSpriteNode(imageNamed: \u0026#34;shuttle\u0026#34;) player.position = CGPoint(x: self.frame.size.width / 2, y: player.size.height / 2 + 20) self.addChild(player) Second Step The second step is to remove Earth\u0026rsquo;s gravity effect from the physics world, because the player will be looking into the screen from a top-down perspective and gravity effects make no difference for it.\nself.physicsWorld.gravity = CGVector(dx: 0, dy: 0) Third Step The third step is to add contactDelegate to be able to respond when physics bodies come into contact.\nSKPhysicsContactDelegate - An object that implements the SKPhysicsContactDelegate protocol can respond when two physics bodies with overlapping contactTestBitMask values are in contact with each other in a physics world. You can use the contact delegate to play a sound or execute game logic, such as increasing a player‚Äôs score when a contact event occurs.\nself.physicsWorld.contactDelegate = self private let alienCategory: UInt32 = 0x1 \u0026lt;\u0026lt; 1 private let photonTorpedoCategory: UInt32 = 0x1 \u0026lt;\u0026lt; 0 alien.physicsBody?.categoryBitMask = alienCategory alien.physicsBody?.contactTestBitMask = photonTorpedoCategory alien.physicsBody?.collisionBitMask = 0 torpedoNode.physicsBody?.categoryBitMask = photonTorpedoCategory torpedoNode.physicsBody?.contactTestBitMask = alienCategory torpedoNode.physicsBody?.collisionBitMask = 0 torpedoNode.physicsBody?.usesPreciseCollisionDetection = true // MARK: - SKPhysicsContactDelegate extension GameScene: SKPhysicsContactDelegate { func didBegin(_ contact: SKPhysicsContact) { var firstBody: SKPhysicsBody var secondBody: SKPhysicsBody if contact.bodyA.categoryBitMask \u0026lt; contact.bodyB.categoryBitMask { firstBody = contact.bodyA secondBody = contact.bodyB } else { firstBody = contact.bodyB secondBody = contact.bodyA } if (firstBody.categoryBitMask \u0026amp; photonTorpedoCategory) != 0 \u0026amp;\u0026amp; (secondBody.categoryBitMask \u0026amp; alienCategory) != 0 { torpedoDidCollideWithAlien(torpedoNode: firstBody.node as! SKSpriteNode, alienNode: secondBody.node as! SKSpriteNode) } } } didBegin(_:) is an instance method called when two bodies first contact each other.\nAdditionally We need to add scoreLabel to track the player\u0026rsquo;s score:\nself.scoreLabel = SKLabelNode(text: \u0026#34;Score: 0\u0026#34;) scoreLabel.position = CGPoint(x: self.frame.size.width / 2, y: self.frame.size.height - 50) scoreLabel.fontName = \u0026#34;AmericanTypewriter-Bold\u0026#34; scoreLabel.fontSize = 36 scoreLabel.fontColor = UIColor.white score = 0 self.addChild(scoreLabel) gameTimer to add an alien every 0.75 milliseconds:\nself.gameTimer = Timer.scheduledTimer(timeInterval: 0.75, target: self, selector: #selector(addAlien), userInfo: nil, repeats: true) motionManager to change the user\u0026rsquo;s position using the accelerometer:\nself.motionManager = CMMotionManager() motionManager.accelerometerUpdateInterval = 0.1 motionManager.startAccelerometerUpdates(to: OperationQueue.current!) { (data: CMAccelerometerData?, error: Error?) in if let accelerometerData = data { let acceleration = accelerometerData.acceleration self.xAcceleration = CGFloat(acceleration.x) * 0.75 + self.xAcceleration * 0.25 } } touchesEnded method to fire a torpedo:\noverride func touchesEnded(_ touches: Set\u0026lt;UITouch\u0026gt;, with event: UIEvent?) { fireTorpedo() } didSimulatePhysics method to change the player\u0026rsquo;s position:\noverride func didSimulatePhysics() { player.position.x += xAcceleration * 50 if player.position.x \u0026lt; 0 { player.position = CGPoint(x: self.frame.size.width, y: player.position.y) } else if player.position.x \u0026gt; self.frame.size.width { player.position = CGPoint(x: 0, y: player.position.y) } } Summarizing It was an amazing experience. I was surprised that the entire game was less than 200 lines of code. I tried my best to create a step-by-step instruction of the game creation process. I hope this article will be helpful for you.\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/creating-2d-space-game-for-ios-using-spritekit-part-2/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eIn the \u003ca href=\"https://dmytros.blog/posts/creating-2d-space-game-for-ios-using-spritekit-part-1/\"\u003eprevious chapter\u003c/a\u003e, I started talking about the video game creation process, from project setup to adding the background. Now, I\u0026rsquo;m going to add the player and physics to it.\u003c/p\u003e\n\u003cp\u003eYou can \u003ca href=\"https://github.com/dmytrochumakov/2d-space-game-ios/archive/refs/heads/main.zip\"\u003edownload the project here\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"first-step\"\u003eFirst Step\u003c/h3\u003e\n\u003cp\u003eThe first step is to initialize \u003ccode\u003eplayer\u003c/code\u003e using \u003ca href=\"https://developer.apple.com/documentation/spritekit/skspritenode\"\u003e\u003ccode\u003eSKSpriteNode\u003c/code\u003e\u003c/a\u003e, set up \u003ccode\u003eplayer.position\u003c/code\u003e, and add \u003ccode\u003eplayer\u003c/code\u003e as a child node.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eSKSpriteNode\u003c/strong\u003e - is an onscreen graphical element that can be initialized from an image or a solid color.\u003c/p\u003e","title":"Creating a 2D Space Game for iOS Using SpriteKit - Part 2"},{"content":"Introduction I have never tried creating a game before; it feels like magic to me. I know that games have an enormous amount of underlying layers of abstractions and tools such as game engines, rendering, and so on. I have always been eager to learn at least 1% of the game creation process. In this article, I\u0026rsquo;m going to explore step-by-step instructions for creating a game for the iOS platform using SpriteKit.\nFirst Step The first step is to create an Xcode project using the iOS game template and SpriteKit Game Technology. Second Step The second step is to add resources like images and sounds. You can find assets inside the Assets folder Download Project.\nThird Step The third step is to override the didMove(to:) method - it tells you when the scene is presented by a view. This method is similar to viewDidLoad for UIViewController. We will be implementing logic inside it.\noverride func didMove(to view: SKView) { } Creating and Adding Starfield Background The next step is to create and add a starfield using SKEmitterNode as a child to SKScene. After that, you will be able to see the starfield in the background.\nself.starfield = SKEmitterNode(fileNamed: \u0026#34;Starfield\u0026#34;) starfield.position = CGPoint(x: self.frame.size.width / 2, y: self.frame.size.height) starfield.advanceSimulationTime(10) self.addChild(starfield) starfield.zPosition = -1 Let\u0026rsquo;s Dive a Little Deeper Custom Particles Creation If you were wondering how to create custom particles similar to the starfield background, you need to:\nCreate a new SpriteKit Particle File: Choose a particle template: Select the created file -\u0026gt; Open the Inspectors side menu and configure it with settings that you like. SKEmitterNode Initialization of SKEmitterNode(fileNamed: \u0026quot;Starfield\u0026quot;) helps create a starfield background.\nSKEmitterNode is a node that automatically creates and renders small particle sprites. Particles are privately owned by SpriteKit‚Äîyour game cannot access the generated sprites. For example, you cannot add physics shapes to particles. Emitter nodes are often used to create smoke, fire, sparks, and other particle effects.\nadvanceSimulationTime advanceSimulationTime(10) - Advances the emitter particle simulation. In other words, you do not need to wait until the particles reach the bottom of the screen. addChild self.addChild(starfield) - Adds a node to the end of the receiver‚Äôs list of child nodes. After that, you will be able to see the starfield background.\nzPosition zPosition = -1 - Moves the starfield to the back of the screen.\nResources Enormous appreciation for Brian Advent for his comprehensive video. Without it, I would still be surfing the internet and collecting pieces of the puzzle.\nDownload Materials Download Project\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/creating-2d-space-game-for-ios-using-spritekit-part-1/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI have never tried creating a game before; it feels like magic to me. I know that games have an enormous amount of underlying layers of abstractions and tools such as game engines, rendering, and so on. I have always been eager to learn at least 1% of the game creation process. In this article, I\u0026rsquo;m going to explore step-by-step instructions for creating a game for the iOS platform using SpriteKit.\u003c/p\u003e","title":"Creating a 2D Space Game for iOS Using SpriteKit - Part 1"},{"content":"Introduction When working in a large codebase with a significant number of async events, I often found myself in situations where I couldn\u0026rsquo;t combine events effectively. This resulted in optimization problems and inefficient consumption of OS resources.\nThe codebase contained closures and async/await, so it wasn\u0026rsquo;t possible to use operators like merge or combineLatest. After discovering this limitation, I decided to add new methods using Combine.\nI will be demonstrating this with a simple NetworkService responsible only for executing and validating requests using Combine. Let\u0026rsquo;s dive into the implementation.\nFirst Step The first step is to create the NetworkService with request(_ endpoint: Endpoint) method.\nfunc request\u0026lt;T: Decodable\u0026gt;(_ endpoint: Endpoint) -\u0026gt; AnyPublisher\u0026lt;T, Error\u0026gt; {} Quick Explanation of What AnyPublisher Is The AnyPublisher returns a publisher from a method without exposing the specific type of publisher you are using internally. It helps hide implementation details.\nSecond Step The second step is to add a few helpers such as Endpoint and NetworkError.\nstruct Endpoint { let url: String let headers: [String: String]? let body: Data? let httpMethod: HTTPMethod func urlRequest(with url: URL) -\u0026gt; URLRequest { var urlRequest = URLRequest(url: url) urlRequest.httpMethod = httpMethod.rawValue urlRequest.allHTTPHeaderFields = headers ?? [:] urlRequest.httpBody = body return urlRequest } enum HTTPMethod: String { case GET case POST case PUT case DELETE } } enum NetworkError: Error { case invalidURL case invalidResponseType case jsonDecoderError(_ error: Error) } Third Step The third step is to implement the request method.\nfunc request\u0026lt;T: Decodable\u0026gt;(_ endpoint: Endpoint) -\u0026gt; AnyPublisher\u0026lt;T, Error\u0026gt; { guard let url = URL(string: endpoint.url) else { return Fail\u0026lt;T, Error\u0026gt;(error: NetworkError.invalidURL).eraseToAnyPublisher() } return URLSession.shared .dataTaskPublisher(for: endpoint.urlRequest(with: url)) .tryMap { output in guard output.response is HTTPURLResponse else { throw NetworkError.invalidResponseType } return output.data } .decode(type: T.self, decoder: JSONDecoder()) .mapError { error in NetworkError.jsonDecoderError(error) } .eraseToAnyPublisher() } Fourth Step The fourth step is to test if NetworkService works as expected.\nimport Combine import Inject import SwiftUI public struct ContentView: View { @ObserveInjection var inject private let networkService: NetworkService = .init() @State private var cancellables = Set\u0026lt;AnyCancellable\u0026gt;() @State private var post: Post? public init() {} public var body: some View { VStack { Button(\u0026#34;Fetch Data\u0026#34;) { networkService .request(Endpoint(url: \u0026#34;https://jsonplaceholder.typicode.com/posts/1\u0026#34;, httpMethod: .GET)) .sink(receiveCompletion: { completion in switch completion { case .finished: break case let .failure(error): print(error) } }, receiveValue: { (post: Post) in self.post = post }) .store(in: \u0026amp;cancellables) } Text(post?.title ?? \u0026#34;\u0026#34;) } .enableInjection() } } Summary Combine is best suited for handling multiple async events by using event-processing operators. Before integrating it into your codebase, make sure to weigh all the pros and cons.\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/combine-practical-usage-examples/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eWhen working in a large codebase with a significant number of async events, I often found myself in situations where I couldn\u0026rsquo;t combine events effectively. This resulted in optimization problems and inefficient consumption of OS resources.\u003c/p\u003e\n\u003cp\u003eThe codebase contained \u003ccode\u003eclosures\u003c/code\u003e and \u003ccode\u003easync/await\u003c/code\u003e, so it wasn\u0026rsquo;t possible to use operators like \u003ccode\u003emerge\u003c/code\u003e or \u003ccode\u003ecombineLatest\u003c/code\u003e. After discovering this limitation, I decided to add new methods using \u003ca href=\"https://developer.apple.com/documentation/combine\"\u003e\u003ccode\u003eCombine\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI will be demonstrating this with a simple \u003ccode\u003eNetworkService\u003c/code\u003e responsible only for executing and validating requests using Combine. Let\u0026rsquo;s dive into the implementation.\u003c/p\u003e","title":"Combine practical usage examples"},{"content":"Introduction I always wondered how I could automate testing the push notification process. Even when Apple introduced the possibility of dragging a configured file to the simulator to display a notification, it is still a manual process. I\u0026rsquo;ll skip testing via the terminal because I think it takes more time than using an APNS file or the RocketSim app.\nBefore I was first introduced to the RocketSim app, I used an APNS file for testing push notifications. It worked for me and my teammates, but I knew it could be better. It looks something like this:\nTesting Using an APNS File To test push notifications using an APNS file, you need to create a file with a .apns extension and put JSON into it.\n{ \u0026#34;Simulator Target Bundle\u0026#34;: \u0026#34;dev.mt.Demo\u0026#34;, \u0026#34;aps\u0026#34;: { \u0026#34;alert\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;Title\u0026#34;, \u0026#34;body\u0026#34;: \u0026#34;Body\u0026#34; } } } You also need to specify the Simulator Target Bundle; without it, you will receive an error. After that, you can drag this file to the simulator. When I found the RocketSim app and learned about its ability to send push notifications from the simulator side menu, it was a game changer for me. No more dragging files or terminal commands‚Äîit‚Äôs all in one place. The only thing you need to do is create the payload.\nTesting Using the RocketSim App To test push notifications using the RocketSim app, all you need to do is:\nOpen the RocketSim app. Go to the simulator side menu. Click on the bell button. Click on the ‚ÄúConfigure Push Notifications‚Äù button. The last step is to add groups, set the bundle identifier, switch to push notifications, and add a push notification. Now you have configured the push notification, and from now on, you can send it with just a tap in the RocketSim app\u0026rsquo;s simulator side menu. Summary Using the RocketSim app saved me a lot of time and effort. Without it, I would still be testing manually and spending time on work that could be automated. I would recommend this tool to anyone.\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/testing-push-notifications-locally-in-an-ios-app/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI always wondered how I could automate testing the push notification process. Even when Apple introduced the possibility of dragging a configured file to the simulator to display a notification, it is still a manual process. I\u0026rsquo;ll skip testing via the terminal because I think it takes more time than using an APNS file or the \u003ca href=\"https://www.rocketsim.app/\"\u003eRocketSim app\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eBefore I was first introduced to the RocketSim app, I used an APNS file for testing push notifications. It worked for me and my teammates, but I knew it could be better. It looks something like this:\u003c/p\u003e","title":"Testing push notifications locally in an iOS app"},{"content":"Introduction If you start a project from scratch, you need to always create some kind of service like PushNotificationService that will be responsible for handling push notification events. In this article, I want to explore a simple implementation of PushNotificationService to be able to reuse and customize it in future projects.\nFirst Step The first step is to add the Push Notifications capability to your project. Go to your project -\u0026gt; Signing \u0026amp; Capabilities -\u0026gt; Tap + Capability -\u0026gt; Search for Push Notifications.\nSecond Step The second step is to register push notifications.\nfunc application(_: UIApplication, didFinishLaunchingWithOptions _: [UIApplication.LaunchOptionsKey: Any]? = nil) -\u0026gt; Bool { pushNotificationService.registerPushNotifications() return true } Third Step The third step is to add didRegisterForRemoteNotificationsWithDeviceToken and didFailToRegisterForRemoteNotificationsWithError to the AppDelegate file and pass the information that occurred to PushNotificationService.\nfunc application(_: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) { pushNotificationService.didRegisterForRemoteNotificationsWithDeviceToken(deviceToken: deviceToken) } func application(_: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) { pushNotificationService.didFailToRegisterForRemoteNotificationsWithError(error: error) } Complete Example import UIKit class AppDelegate: NSObject, UIApplicationDelegate { private let pushNotificationService = PushNotificationService() func application(_: UIApplication, didFinishLaunchingWithOptions _: [UIApplication.LaunchOptionsKey: Any]? = nil) -\u0026gt; Bool { pushNotificationService.registerPushNotifications() return true } func application(_: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) { pushNotificationService.didRegisterForRemoteNotificationsWithDeviceToken(deviceToken: deviceToken) } func application(_: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: any Error) { pushNotificationService.didFailToRegisterForRemoteNotificationsWithError(error: error) } } import UIKit public final class PushNotificationService: NSObject { public func registerPushNotifications() { UNUserNotificationCenter.current().requestAuthorization(options: [.alert, .sound, .badge]) { granted, _ in guard granted else { return } DispatchQueue.main.async { UIApplication.shared.registerForRemoteNotifications() } } } public func didRegisterForRemoteNotificationsWithDeviceToken(deviceToken: Data) { let token = deviceToken.map { String(format: \u0026#34;%02.2hhx\u0026#34;, $0) }.joined() print(\u0026#34;Device token: \\(token)\u0026#34;) } public func didFailToRegisterForRemoteNotificationsWithError(error: any Error) { print(\u0026#34;Failed to register for remote notifications: \\(error)\u0026#34;) } } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/adding-push-notifications-to-an-ios-app/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eIf you start a project from scratch, you need to always create some kind of service like \u003ccode\u003ePushNotificationService\u003c/code\u003e that will be responsible for handling push notification events. In this article, I want to explore a simple implementation of \u003ccode\u003ePushNotificationService\u003c/code\u003e to be able to reuse and customize it in future projects.\u003c/p\u003e\n\u003ch3 id=\"first-step\"\u003eFirst Step\u003c/h3\u003e\n\u003cp\u003eThe first step is to add the Push Notifications capability to your project. Go to your project -\u0026gt; Signing \u0026amp; Capabilities -\u0026gt; Tap \u003ccode\u003e+ Capability\u003c/code\u003e -\u0026gt; Search for Push Notifications.\u003c/p\u003e","title":"Adding Push Notifications to an iOS App"},{"content":"Introduction I was curious about caching data using NSCache for an iOS app. So, I did some digging. Here is what I found:\nQuick Overview NSCache helps store data in memory. When the application gets killed, it frees memory; it‚Äôs not persisted on disk. Storing data is carried out using a key-value pair mechanism like Dictionary. You can set automatic eviction to delete objects automatically. NSCache has multi-platform support: iOS, iPadOS, watchOS, macOS, and tvOS. Caveats NSCache has Objective-C roots. It can‚Äôt use struct because it is constrained to conform to AnyObject, meaning you must use class and NSString instead of String.\nStore Object You can store an object by setting it in the cache:\nfunc storeImage(_ image: UIImage, for key: String) { cache.setObject(image, forKey: key as NSString) } Retrieve Object You can retrieve an object by getting the object for the key:\nfunc retrieveImage(for key: String) -\u0026gt; UIImage? { cache.object(forKey: key as NSString) } Removing Object You can remove an object by removing the object for the key, or remove all objects:\nfunc removeImage(for key: String) { cache.removeObject(forKey: key as NSString) } func removeAllImages() { cache.removeAllObjects() } Automatically Cache Cleaning You can limit the number of objects in memory by setting countLimit. countLimit depends on the size of the object that you need to store in the cache. If it‚Äôs a large image, the limit can be less.\ncache.countLimit = 5 Another way to do automatic cleaning is to set up totalCostLimit. NSCache will automatically delete objects until the total cost of the cache is under the totalCostLimit.\ncache.totalCostLimit = 10 * 1024 * 1024 // 10 MB Caveats Even if you don‚Äôt set any deletion conditions, NSCache will automatically clean up when the system really needs memory.\nNSCacheDelegate cache(_:willEvictObject:) notifies when an object is being removed. It helps in cases when you need to react to these changes.\nextension CacheService: NSCacheDelegate { func cache(_ cache: NSCache\u0026lt;AnyObject, AnyObject\u0026gt;, willEvictObject obj: Any) { print(\u0026#34;Object will be evicted: \\(obj)\u0026#34;) } } Complete Sample final class CacheService: NSObject { private let cache: NSCache\u0026lt;NSString, UIImage\u0026gt; override init() { cache = NSCache() cache.name = \u0026#34;Remote Image Cache\u0026#34; cache.countLimit = 5 cache.totalCostLimit = 10 * 1024 * 1024 // 10 MB } func storeImage(_ image: UIImage, for key: String) { cache.setObject(image, forKey: key as NSString) } func retrieveImage(for key: String) -\u0026gt; UIImage? { cache.object(forKey: key as NSString) } func removeImage(for key: String) { cache.removeObject(forKey: key as NSString) } func removeAllImages() { cache.removeAllObjects() } } // MARK: - NSCacheDelegate extension CacheService: NSCacheDelegate { func cache(_ cache: NSCache\u0026lt;AnyObject, AnyObject\u0026gt;, willEvictObject obj: Any) { print(\u0026#34;Object will be evicted: \\(obj)\u0026#34;) } } Resources Thanks to Andy Ibanez for his amazing straightforward explanation with examples. It helped a lot to quickly understand this topic.\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/caching-data-using-nscache-in-ios/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI was curious about caching data using \u003ca href=\"https://developer.apple.com/documentation/foundation/nscache\"\u003e\u003ccode\u003eNSCache\u003c/code\u003e\u003c/a\u003e for an iOS app. So, I did some digging. Here is what I found:\u003c/p\u003e\n\u003ch3 id=\"quick-overview\"\u003eQuick Overview\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eNSCache\u003c/code\u003e helps store data in memory. When the application gets killed, it frees memory; it‚Äôs not persisted on disk.\u003c/li\u003e\n\u003cli\u003eStoring data is carried out using a key-value pair mechanism like \u003ccode\u003eDictionary\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eYou can set automatic eviction to delete objects automatically.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eNSCache\u003c/code\u003e has multi-platform support: iOS, iPadOS, watchOS, macOS, and tvOS.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"caveats\"\u003eCaveats\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003eNSCache\u003c/code\u003e has Objective-C roots. It can‚Äôt use \u003ccode\u003estruct\u003c/code\u003e because it is constrained to conform to \u003ccode\u003eAnyObject\u003c/code\u003e, meaning you must use \u003ccode\u003eclass\u003c/code\u003e and \u003ccode\u003eNSString\u003c/code\u003e instead of \u003ccode\u003eString\u003c/code\u003e.\u003c/p\u003e","title":"Caching data using NSCache in iOS"},{"content":"Introduction Previously, I posted about Accessibility for UIKit. The idea behind this post is to find differences between UIKit Accessibility and SwiftUI features.\nSimilarities: Both UIKit and SwiftUI have accessibilityLabel and accessibilityHints APIs.\nDifferences: To use dynamic type for fonts, you need additional modifiers in SwiftUI. struct ScaledFont: ViewModifier { @Environment(\\.sizeCategory) var sizeCategory var name: String var size: Double func body(content: Content) -\u0026gt; some View { let scaledSize = UIFontMetrics.default.scaledValue(for: size) return content.font(.custom(name, size: scaledSize)) } } extension View { func scaledFont(name: String, textSize size: Double) -\u0026gt; some View { return self.modifier(ScaledFont(name: name, size: size)) } } To step over elements in a list, you need to add .accessibilityElement(children: .combine) to each row in SwiftUI. struct FruitCaloriesCounter: View { var body: some View { NavigationView { List(fruits) { fruit in FruitRow(fruit: fruit) .accessibilityElement(children: .combine) } .navigationTitle(\u0026#34;Fruits Calories Counter\u0026#34;) .accessibilityElement(children: .contain) .navigationBarTitleDisplayMode(.inline) } } } In UIKit, you can insert and remove accessibilityTraits depending on the button state: if button.isSelected { button.accessibilityTraits.insert(.header) } else { button.accessibilityTraits.remove(.header) } In SwiftUI, you need to pass .accessibilityAddTraits(selected ? [.isSelected, .isButton] : .isButton) to one modifier. Button(action: { selected.toggle() }) { Image(systemName: selected ? \u0026#34;star.fill\u0026#34; : \u0026#34;star\u0026#34;) .frame(width: 44, height: 44) .accessibilityLabel(\u0026#34;favourite\u0026#34;) .accessibilityHint(selected ? \u0026#34;removes favourite\u0026#34; : \u0026#34;makes favourite\u0026#34;) .accessibilityAddTraits(selected ? [.isSelected, .isButton] : .isButton) } .buttonStyle(.plain) Complete Sample import SwiftUI let fruits = [ Fruit(name: \u0026#34;Apple\u0026#34;, calories: 52), Fruit(name: \u0026#34;Banana\u0026#34;, calories: 89), Fruit(name: \u0026#34;Orange\u0026#34;, calories: 47), Fruit(name: \u0026#34;Pineapple\u0026#34;, calories: 50), Fruit(name: \u0026#34;Strawberry\u0026#34;, calories: 32) ] struct Fruit: Identifiable { var id: String { name } let name: String let calories: Int } struct FruitRow: View { @State private var selected = false let fruit: Fruit var body: some View { HStack(spacing: 8) { VStack(alignment: .leading, spacing: 8) { Text(fruit.name) .scaledFont(name: \u0026#34;Helvetica\u0026#34;, textSize: 20) .accessibilityLabel(fruit.name) Text(\u0026#34;\\(fruit.calories) per 100g\u0026#34;) .scaledFont(name: \u0026#34;Helvetica\u0026#34;, textSize: 15) .accessibilityLabel(\u0026#34;\\(fruit.calories) calories per 100 grams\u0026#34;) } Spacer() Button(action: { selected.toggle() }) { Image(systemName: selected ? \u0026#34;star.fill\u0026#34; : \u0026#34;star\u0026#34;) .frame(width: 44, height: 44) .accessibilityLabel(\u0026#34;favourite\u0026#34;) .accessibilityHint(selected ? \u0026#34;removes favourite\u0026#34; : \u0026#34;makes favourite\u0026#34;) .accessibilityAddTraits(selected ? [.isSelected, .isButton] : .isButton) } .buttonStyle(.plain) } } } struct FruitCaloriesCounter: View { var body: some View { NavigationView { List(fruits) { fruit in FruitRow(fruit: fruit) .accessibilityElement(children: .combine) } .navigationTitle(\u0026#34;Fruits Calories Counter\u0026#34;) .accessibilityElement(children: .contain) .navigationBarTitleDisplayMode(.inline) } } } struct ContentView: View { var body: some View { FruitCaloriesCounter() } } #Preview { ContentView() } struct ScaledFont: ViewModifier { @Environment(\\.sizeCategory) var sizeCategory var name: String var size: Double func body(content: Content) -\u0026gt; some View { let scaledSize = UIFontMetrics.default.scaledValue(for: size) return content.font(.custom(name, size: scaledSize)) } } extension View { func scaledFont(name: String, textSize size: Double) -\u0026gt; some View { return self.modifier(ScaledFont(name: name, size: size)) } } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/accessibility-ios-swiftui/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003ePreviously, I posted about \u003ca href=\"https://dmytros.blog/posts/accessibility-ios-uikit/\"\u003eAccessibility for UIKit\u003c/a\u003e. The idea behind this post is to find differences between UIKit Accessibility and SwiftUI features.\u003c/p\u003e\n\u003ch3 id=\"similarities\"\u003eSimilarities:\u003c/h3\u003e\n\u003cp\u003eBoth UIKit and SwiftUI have \u003ca href=\"https://developer.apple.com/documentation/objectivec/nsobject/1615181-accessibilitylabel\"\u003e\u003ccode\u003eaccessibilityLabel\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://developer.apple.com/documentation/objectivec/nsobject/1615093-accessibilityhint\"\u003e\u003ccode\u003eaccessibilityHints\u003c/code\u003e\u003c/a\u003e APIs.\u003c/p\u003e\n\u003ch3 id=\"differences\"\u003eDifferences:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eTo use dynamic type for fonts, you need additional modifiers in SwiftUI.\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eScaledFont\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eViewModifier\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eEnvironment\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e\\\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esizeCategory\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003esizeCategory\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eContent\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esome\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003escaledSize\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUIFontMetrics\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003escaledValue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efont\u003c/span\u003e\u003cspan class=\"p\"\u003e(.\u003c/span\u003e\u003cspan class=\"n\"\u003ecustom\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003escaledSize\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kd\"\u003eextension\u003c/span\u003e \u003cspan class=\"nc\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003escaledFont\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etextSize\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esome\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emodifier\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eScaledFont\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003eTo step over elements in a list, you need to add \u003ccode\u003e.accessibilityElement(children: .combine)\u003c/code\u003e to each row in SwiftUI.\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eFruitCaloriesCounter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esome\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003eNavigationView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efruits\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003efruit\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"n\"\u003eFruitRow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efruit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003efruit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccessibilityElement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echildren\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecombine\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enavigationTitle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Fruits Calories Counter\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccessibilityElement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echildren\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtain\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enavigationBarTitleDisplayMode\u003c/span\u003e\u003cspan class=\"p\"\u003e(.\u003c/span\u003e\u003cspan class=\"n\"\u003einline\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003eIn UIKit, you can insert and remove \u003ccode\u003eaccessibilityTraits\u003c/code\u003e depending on the button state:\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisSelected\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccessibilityTraits\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(.\u003c/span\u003e\u003cspan class=\"n\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccessibilityTraits\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eremove\u003c/span\u003e\u003cspan class=\"p\"\u003e(.\u003c/span\u003e\u003cspan class=\"n\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003eIn SwiftUI, you need to pass \u003ccode\u003e.accessibilityAddTraits(selected ? [.isSelected, .isButton] : .isButton)\u003c/code\u003e to one modifier.\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eButton\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003eselected\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etoggle\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003eImage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esystemName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eselected\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;star.fill\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;star\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eframe\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e44\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e44\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccessibilityLabel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;favourite\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccessibilityHint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eselected\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;removes favourite\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;makes favourite\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccessibilityAddTraits\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eselected\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e[.\u003c/span\u003e\u003cspan class=\"n\"\u003eisSelected\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisButton\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisButton\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebuttonStyle\u003c/span\u003e\u003cspan class=\"p\"\u003e(.\u003c/span\u003e\u003cspan class=\"n\"\u003eplain\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"complete-sample\"\u003eComplete Sample\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eimport\u003c/span\u003e \u003cspan class=\"nc\"\u003eSwiftUI\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003efruits\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Apple\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecalories\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e52\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Banana\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecalories\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e89\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Orange\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecalories\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e47\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Pineapple\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecalories\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecalories\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eIdentifiable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003ecalories\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eFruitRow\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eState\u003c/span\u003e \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eselected\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003efruit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eFruit\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esome\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eHStack\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003espacing\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eVStack\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ealignment\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eleading\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espacing\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efruit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003escaledFont\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Helvetica\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etextSize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccessibilityLabel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efruit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003efruit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecalories\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e per 100g\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003escaledFont\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Helvetica\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etextSize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e15\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccessibilityLabel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003efruit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecalories\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e calories per 100 grams\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eSpacer\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eButton\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eselected\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etoggle\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e})\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eImage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esystemName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eselected\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;star.fill\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;star\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eframe\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e44\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e44\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccessibilityLabel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;favourite\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccessibilityHint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eselected\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;removes favourite\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;makes favourite\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccessibilityAddTraits\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eselected\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e[.\u003c/span\u003e\u003cspan class=\"n\"\u003eisSelected\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisButton\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisButton\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebuttonStyle\u003c/span\u003e\u003cspan class=\"p\"\u003e(.\u003c/span\u003e\u003cspan class=\"n\"\u003eplain\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eFruitCaloriesCounter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esome\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eNavigationView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efruits\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003efruit\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eFruitRow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efruit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003efruit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccessibilityElement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echildren\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecombine\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enavigationTitle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Fruits Calories Counter\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccessibilityElement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echildren\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtain\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enavigationBarTitleDisplayMode\u003c/span\u003e\u003cspan class=\"p\"\u003e(.\u003c/span\u003e\u003cspan class=\"n\"\u003einline\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eContentView\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esome\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eFruitCaloriesCounter\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e#\u003c/span\u003e\u003cspan class=\"n\"\u003ePreview\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eContentView\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eScaledFont\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eViewModifier\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eEnvironment\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e\\\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esizeCategory\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003esizeCategory\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eContent\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esome\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003escaledSize\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUIFontMetrics\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003escaledValue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efont\u003c/span\u003e\u003cspan class=\"p\"\u003e(.\u003c/span\u003e\u003cspan class=\"n\"\u003ecustom\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003escaledSize\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eextension\u003c/span\u003e \u003cspan class=\"nc\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003escaledFont\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etextSize\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esome\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emodifier\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eScaledFont\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"thank-you-for-reading-\"\u003eThank you for reading! üòä\u003c/h4\u003e","title":"Accessibility iOS SwiftUI"},{"content":"Introduction I was curious to find out how to make an application more accessible. You can look at popular applications like YouTube or Netflix; they all have accessibility features like VoiceOver and dynamic fonts. I decided to create this example for a fruit calorie counter. It contains a list of fruits with the fruit name, fruit calories, and a favorite button.\nWhere to Start Before diving into implementation details, I want to highlight some information about the existing accessibility features and what I will be focusing on.\nExisting Accessibility Features Apple provides a variety of tools; here are the most important ones:\nVoiceOver: A screen reader that allows visually impaired users to interact with their devices. Dynamic Type: Support for adjustable text sizes. Users can choose larger text sizes in the system settings, and apps should respond appropriately by scaling text and UI elements. Contrast and Color: Ensuring sufficient contrast between text and background to make content readable for users with visual impairments. Switch Control: A feature that allows users with limited mobility to control their device using adaptive accessories. AssistiveTouch: A feature that helps users with physical disabilities perform actions that would otherwise require gestures. Labels and Hints: Using accessibility labels and hints to provide descriptive text for UI elements, which helps VoiceOver users understand what an element does. Focus Areas I will be focusing on Labels and Hints, VoiceOver, and Dynamic Type.\nImplementation First Step The first step would be to mark yourUIElement.isAccessibilityElement = true to enable your component\u0026rsquo;s visibility for VoiceOver.\nSecond Step The second step would be to define accessibilityElements for UI components that you want to access for VoiceOver. VoiceOver will read elements from top to bottom.\noverride var accessibilityElements: [Any]? { get { return [ nameLabel as Any, caloriesLabel as Any, favouriteButton as Any ] } set { } } Third Step The third step would be to add an accessibilityLabel; it will help identify the control or view.\nfavouriteButton.accessibilityLabel = \u0026#34;favourite\u0026#34; Fourth Step The fourth step would be to add an accessibilityHint; it describes the result of performing an action on the element.\nfavouriteButton.accessibilityHint = favouriteButton.isSelected ? \u0026#34;makes favourite\u0026#34; : \u0026#34;removes favourite\u0026#34; Adding Dynamic Type to Font Size If you run your application and go to the Accessibility Inspector and Run Audit for it, you will probably see an error like Dynamic font sizes are unsupported. This means if you go and change the Text Size for your entire system, your application\u0026rsquo;s font size will not change.\nTo fix it, you need to add adjustsFontForContentSizeCategory = true - it indicates whether the corresponding element should automatically update its font when the device‚Äôs UIContentSizeCategory is changed.\nnameLabel.adjustsFontForContentSizeCategory = true caloriesLabel.adjustsFontForContentSizeCategory = true If you need a custom font in your application, you need to transform the custom font to Dynamic Type by using UIFontMetrics.default.scaledFont.\nNow you can actually test it from the Accessibility Inspector settings page.\nCaveats The last thing is to make the table view automatically calculate row size because your content can potentially be clipped, as it happened to me üòä You just need to add UITableView.automaticDimension to the heightForRowAt method of UITableViewDelegate.\nDownload Materials Download\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/accessibility-ios-uikit/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI was curious to find out how to make an application more accessible. You can look at popular applications like YouTube or Netflix; they all have accessibility features like VoiceOver and dynamic fonts. I decided to create this example for a fruit calorie counter. It contains a list of fruits with the fruit name, fruit calories, and a favorite button.\u003c/p\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-f7bcf\" hidden\u003e\n    \u003clabel for=\"zoomCheck-f7bcf\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.png#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003ch3 id=\"where-to-start\"\u003eWhere to Start\u003c/h3\u003e\n\u003cp\u003eBefore diving into implementation details, I want to highlight some information about the existing accessibility features and what I will be focusing on.\u003c/p\u003e","title":"Accessibility iOS UIKit"},{"content":"Introduction I was eager to learn how converting Text To Speech works in iOS. Here is what I discovered:\nFirst Step The first step is to add AVSpeechSynthesizer, an object that produces synthesized speech from text utterances.\n@State private var speechSynthesizer = AVSpeechSynthesizer() Second Step The second step is to add AVSpeechUtterance, an object that encapsulates the text for speech synthesis.\nprivate var utterance: AVSpeechUtterance { let inputMessage = \u0026#34;Hello world!\u0026#34; let utterance = AVSpeechUtterance(string: inputMessage) utterance.voice = AVSpeechSynthesisVoice(language: \u0026#34;en-US\u0026#34;) return utterance } Optional You can configure pitch, rate, and voice parameters.\nThird Step The third step is to add a speak method that actually allows you to convert Text To Speech.\nspeechSynthesizer.speak(utterance) Complete Example import SwiftUI import AVFoundation struct ContentView: View { @State private var speechSynthesizer = AVSpeechSynthesizer() private var utterance: AVSpeechUtterance { let inputMessage = \u0026#34;Hello world!\u0026#34; let utterance = AVSpeechUtterance(string: inputMessage) utterance.voice = AVSpeechSynthesisVoice(language: \u0026#34;en-US\u0026#34;) return utterance } var body: some View { VStack { Button(\u0026#34;Speak\u0026#34;) { speechSynthesizer.speak(utterance) } } .padding() } } #Preview { ContentView() } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/text-to-speech-ios/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI was eager to learn how converting Text To Speech works in iOS. Here is what I discovered:\u003c/p\u003e\n\u003ch3 id=\"first-step\"\u003eFirst Step\u003c/h3\u003e\n\u003cp\u003eThe first step is to add \u003ca href=\"https://developer.apple.com/documentation/avfaudio/avspeechsynthesizer/\"\u003e\u003ccode\u003eAVSpeechSynthesizer\u003c/code\u003e\u003c/a\u003e, an object that produces synthesized speech from text utterances.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eState\u003c/span\u003e \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003espeechSynthesizer\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eAVSpeechSynthesizer\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"second-step\"\u003eSecond Step\u003c/h3\u003e\n\u003cp\u003eThe second step is to add \u003ca href=\"https://developer.apple.com/documentation/avfaudio/avspeechutterance\"\u003e\u003ccode\u003eAVSpeechUtterance\u003c/code\u003e\u003c/a\u003e, an object that encapsulates the text for speech synthesis.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eutterance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eAVSpeechUtterance\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003einputMessage\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello world!\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eutterance\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eAVSpeechUtterance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003einputMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eutterance\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evoice\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eAVSpeechSynthesisVoice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elanguage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;en-US\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eutterance\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"optional\"\u003eOptional\u003c/h4\u003e\n\u003cp\u003eYou can configure \u003ccode\u003epitch\u003c/code\u003e, \u003ccode\u003erate\u003c/code\u003e, and \u003ccode\u003evoice\u003c/code\u003e parameters.\u003c/p\u003e","title":"Text To Speech iOS"},{"content":"Introduction I always wanted an iOS app that would allow me to economize my time by converting speech to text. I know this option is built into the keyboard, but you first need to click the text field, then tap on the microphone, and finally speak. I wanted a one-click option with the possibility to integrate it into all my daily routines. Here is what I discovered:\nFirst Step The first step is to request authorization to access the device\u0026rsquo;s microphone using the Privacy - Speech Recognition Usage Description key and the Privacy - Microphone Usage Description key.\nSecond Step The second step is to add a SpeechRecognizerService that will detect and transcribe speech. It consists of SFSpeechRecognizer, AVAudioSession, and AVAudioEngine. Your transcribed speech will be stored in the transcript property.\nimport Foundation import AVFoundation import Speech /// A helper for transcribing speech to text using SFSpeechRecognizer and AVAudioEngine. actor SpeechRecognizerService: ObservableObject { enum RecognizerError: Error { case nilRecognizer case notAuthorizedToRecognize case notPermittedToRecord case recognizerIsUnavailable var message: String { switch self { case .nilRecognizer: return \u0026#34;Can\u0026#39;t initialize speech recognizer\u0026#34; case .notAuthorizedToRecognize: return \u0026#34;Not authorized to recognize speech\u0026#34; case .notPermittedToRecord: return \u0026#34;Not permitted to record audio\u0026#34; case .recognizerIsUnavailable: return \u0026#34;Recognizer is unavailable\u0026#34; } } } @MainActor @Published private(set) var transcript: String = \u0026#34;\u0026#34; private var audioEngine: AVAudioEngine? private var request: SFSpeechAudioBufferRecognitionRequest? private var task: SFSpeechRecognitionTask? private let recognizer: SFSpeechRecognizer? /** Initializes a new speech recognizer. If this is the first time you\u0026#39;ve used the class, it requests access to the speech recognizer and the microphone. */ init() { recognizer = SFSpeechRecognizer() guard recognizer != nil else { transcribe(RecognizerError.nilRecognizer) return } Task { do { guard await SFSpeechRecognizer.hasAuthorizationToRecognize() else { throw RecognizerError.notAuthorizedToRecognize } guard await AVAudioSession.sharedInstance().hasPermissionToRecord() else { throw RecognizerError.notPermittedToRecord } } catch { transcribe(error) } } } @MainActor func startTranscribing() { Task { await transcribe() } } @MainActor func resetTranscript() { Task { await reset() } } @MainActor func stopTranscribing() { Task { await reset() } } } private extension SpeechRecognizerService { /** Begin transcribing audio. Creates a `SFSpeechRecognitionTask` that transcribes speech to text until you call `stopTranscribing()`. The resulting transcription is continuously written to the published `transcript` property. */ func transcribe() { guard let recognizer, recognizer.isAvailable else { self.transcribe(RecognizerError.recognizerIsUnavailable) return } do { let (audioEngine, request) = try Self.prepareEngine() self.audioEngine = audioEngine self.request = request self.task = recognizer.recognitionTask(with: request, resultHandler: { [weak self] result, error in self?.recognitionHandler(audioEngine: audioEngine, result: result, error: error) }) } catch { self.reset() self.transcribe(error) } } /// Reset the speech recognizer. func reset() { task?.cancel() audioEngine?.stop() audioEngine = nil request = nil task = nil } static func prepareEngine() throws -\u0026gt; (AVAudioEngine, SFSpeechAudioBufferRecognitionRequest) { let audioEngine = AVAudioEngine() let request = SFSpeechAudioBufferRecognitionRequest() request.shouldReportPartialResults = true let audioSession = AVAudioSession.sharedInstance() try audioSession.setCategory(.playAndRecord, mode: .measurement, options: .duckOthers) try audioSession.setActive(true, options: .notifyOthersOnDeactivation) let inputNode = audioEngine.inputNode let recordingFormat = inputNode.outputFormat(forBus: 0) inputNode.installTap(onBus: 0, bufferSize: 1024, format: recordingFormat) { (buffer: AVAudioPCMBuffer, when: AVAudioTime) in request.append(buffer) } audioEngine.prepare() try audioEngine.start() return (audioEngine, request) } nonisolated func recognitionHandler(audioEngine: AVAudioEngine, result: SFSpeechRecognitionResult?, error: Error?) { let receivedFinalResult = result?.isFinal ?? false let receivedError = error != nil if receivedFinalResult || receivedError { audioEngine.stop() audioEngine.inputNode.removeTap(onBus: 0) } if let result { transcribe(result.bestTranscription.formattedString) } } nonisolated func transcribe(_ message: String) { Task { @MainActor in transcript = message } } nonisolated func transcribe(_ error: Error) { var errorMessage = \u0026#34;\u0026#34; if let error = error as? RecognizerError { errorMessage += error.message } else { errorMessage += error.localizedDescription } Task { @MainActor [errorMessage] in transcript = \u0026#34;\u0026lt;\u0026lt; \\(errorMessage) \u0026gt;\u0026gt;\u0026#34; } } } extension SFSpeechRecognizer { static func hasAuthorizationToRecognize() async -\u0026gt; Bool { await withCheckedContinuation { continuation in requestAuthorization { status in continuation.resume(returning: status == .authorized) } } } } extension AVAudioSession { func hasPermissionToRecord() async -\u0026gt; Bool { await withCheckedContinuation { continuation in requestRecordPermission { authorized in continuation.resume(returning: authorized) } } } } Third Step The third step is to integrate speech recognition.\nimport SwiftUI struct ContentView: View { @StateObject private var speechRecognizerService: SpeechRecognizerService = SpeechRecognizerService() var body: some View { ScrollView { VStack { Button(\u0026#34;Start\u0026#34;) { speechRecognizerService.startTranscribing() } Divider() Button(\u0026#34;Stop\u0026#34;) { speechRecognizerService.stopTranscribing() } Divider() Text(speechRecognizerService.transcript) } } .padding() } } #Preview { ContentView() } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/speech-to-text-ios/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI always wanted an iOS app that would allow me to economize my time by converting speech to text.\nI know this option is built into the keyboard, but you first need to click the text field, then tap on the microphone, and finally speak.\nI wanted a one-click option with the possibility to integrate it into all my daily routines. Here is what I discovered:\u003c/p\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-3215a\" hidden\u003e\n    \u003clabel for=\"zoomCheck-3215a\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.gif#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e","title":"Speech To Text iOS"},{"content":"Introduction I was curious about creating animations in UIKit. I wanted to animate different properties such as color and path. Here is what I found:\nIt‚Äôs impossible to create complex animations only by using the block-based animation API. To do that, you need the Core Animation API and CAPropertyAnimation with its various subclasses.\nComplex animation in UIKit is based on a few key components:\nCAShapeLayer - provides extensive customization options: path, stroke, fill, shadow CABasicAnimation - helps animate color or change the path Implementation First Step The first step is to create a shape layer that will draw an arrow using CAShapeLayer.\nprivate lazy var arrowShapeLayer: CAShapeLayer = { let arrowShapeLayer = CAShapeLayer() arrowShapeLayer.strokeColor = direction.arrowColour.cgColor arrowShapeLayer.lineWidth = ArrowView.arrowLineWidth arrowShapeLayer.lineCap = .round arrowShapeLayer.fillColor = UIColor.clear.cgColor return arrowShapeLayer }() Second Step The second step is to animate the arrow direction by changing the shape layer\u0026rsquo;s path and stroke color.\nvar direction: Direction = .up { didSet { guard oldValue != direction else { return } let pathAnimation = CABasicAnimation(keyPath: \u0026#34;path\u0026#34;) pathAnimation.fromValue = arrowShapeLayer.presentation()?.path pathAnimation.duration = 0.5 arrowShapeLayer.add(pathAnimation, forKey: \u0026#34;pathAnimation\u0026#34;) let strokeColourAnimation = CABasicAnimation(keyPath: \u0026#34;strokeColor\u0026#34;) strokeColourAnimation.fromValue = arrowShapeLayer.presentation()?.strokeColor strokeColourAnimation.duration = 0.5 arrowShapeLayer.add(strokeColourAnimation, forKey: \u0026#34;strokeColourAnimation\u0026#34;) arrowShapeLayer.path = direction.arrowPath(in: bounds).cgPath arrowShapeLayer.strokeColor = direction.arrowColour.cgColor } } Third Step The third step is to synchronize Core Animation with UIKit animation by requesting the CAAction property.\nvar direction: Direction = .up { didSet { guard oldValue != direction else { return } if let backgroundColourAnimation = action(for: layer, forKey: \u0026#34;backgroundColor\u0026#34;) as? CABasicAnimation { let pathAnimation = backgroundColourAnimation.copy(forKeyPath: \u0026#34;path\u0026#34;) pathAnimation.fromValue = arrowShapeLayer.presentation()?.path arrowShapeLayer.add(pathAnimation, forKey: \u0026#34;pathAnimation\u0026#34;) let strokeColourAnimation = backgroundColourAnimation.copy(forKeyPath: \u0026#34;strokeColor\u0026#34;) strokeColourAnimation.fromValue = arrowShapeLayer.presentation()?.strokeColor arrowShapeLayer.add(strokeColourAnimation, forKey: \u0026#34;strokeColourAnimation\u0026#34;) } arrowShapeLayer.path = direction.arrowPath(in: bounds).cgPath arrowShapeLayer.strokeColor = direction.arrowColour.cgColor } } Resources If you are curious, I would recommend you read a more detailed explanation from Darjeeling Steve\u0026rsquo;s blog. I found this resource incredible and full of comprehensive information.\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/animation-uikit/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI was curious about creating animations in UIKit. I wanted to animate different properties such as \u003ccode\u003ecolor\u003c/code\u003e and \u003ccode\u003epath\u003c/code\u003e.\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-3215a\" hidden\u003e\n    \u003clabel for=\"zoomCheck-3215a\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.gif#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003cp\u003eHere is what I found:\u003c/p\u003e\n\u003cp\u003eIt‚Äôs impossible to create complex animations only by using the \u003ca href=\"https://developer.apple.com/documentation/uikit/uiview#1654491\"\u003eblock-based animation API\u003c/a\u003e. To do that, you need the \u003ca href=\"https://developer.apple.com/documentation/quartzcore\"\u003e\u003ccode\u003eCore Animation\u003c/code\u003e\u003c/a\u003e API and \u003ca href=\"https://developer.apple.com/documentation/quartzcore/capropertyanimation/\"\u003e\u003ccode\u003eCAPropertyAnimation\u003c/code\u003e\u003c/a\u003e with its various subclasses.\u003c/p\u003e\n\u003cp\u003eComplex animation in UIKit is based on a few key components:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.apple.com/documentation/quartzcore/cashapelayer\"\u003e\u003ccode\u003eCAShapeLayer\u003c/code\u003e\u003c/a\u003e - provides extensive customization options: \u003ccode\u003epath\u003c/code\u003e, \u003ccode\u003estroke\u003c/code\u003e, \u003ccode\u003efill\u003c/code\u003e, \u003ccode\u003eshadow\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.apple.com/documentation/quartzcore/cabasicanimation\"\u003e\u003ccode\u003eCABasicAnimation\u003c/code\u003e\u003c/a\u003e - helps animate \u003ccode\u003ecolor\u003c/code\u003e or change the \u003ccode\u003epath\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"implementation\"\u003eImplementation\u003c/h3\u003e\n\u003ch4 id=\"first-step\"\u003eFirst Step\u003c/h4\u003e\n\u003cp\u003eThe first step is to create a shape layer that will draw an arrow using \u003ca href=\"https://developer.apple.com/documentation/quartzcore/cashapelayer\"\u003e\u003ccode\u003eCAShapeLayer\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e","title":"Animation - UIKit"},{"content":"Introduction I was eager to learn about creating complex animations in SwiftUI. The few questions that were on my mind included what types of animations exist and what I can animate. Here is what I found:\nTypes of Animation SwiftUI has explicit and implicit animation types.\nImplicit Animation: This is specified with the .animation() modifier. SwiftUI will animate changes in old and new values.\nstruct ImplicitAnimation: View { @State private var half = false @State private var dim = false var body: some View { Image(\u0026#34;tower\u0026#34;) .scaleEffect(half ? 0.5 : 1.0) .opacity(dim ? 0.2 : 1.0) .animation(.easeInOut(duration: 1.0)) .onTapGesture { self.dim.toggle() self.half.toggle() } } } Explicit Animation: This is specified with the withAnimation closure. Only those parameters that depend on a value changed inside the withAnimation closure will be animated.\nstruct ExplicitAnimation: View { @State private var half = false @State private var dim = false var body: some View { Image(\u0026#34;tower\u0026#34;) .scaleEffect(half ? 0.5 : 1.0) .opacity(dim ? 0.5 : 1.0) .onTapGesture { self.half.toggle() withAnimation(.easeInOut(duration: 1.0)) { self.dim.toggle() } } } } What is Possible to Animate You can animate single parameters such as size, offset, color, scale, etc. You can conform to the Animatable protocol and describe how to animate a property of a view. You can also animate multiple parameters with AnimatablePair. Resources An invaluable resource is The SwiftUI Lab, which has more than 5 posts only about animation in SwiftUI.\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/animation-swiftui/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI was eager to learn about creating complex animations in SwiftUI. The few questions that were on my mind included what types of animations exist and what I can animate. Here is what I found:\u003c/p\u003e\n\u003ch3 id=\"types-of-animation\"\u003eTypes of Animation\u003c/h3\u003e\n\u003cp\u003eSwiftUI has \u003ccode\u003eexplicit\u003c/code\u003e and \u003ccode\u003eimplicit\u003c/code\u003e animation types.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eImplicit Animation:\u003c/strong\u003e This is specified with the \u003ccode\u003e.animation()\u003c/code\u003e modifier. SwiftUI will animate changes in old and new values.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eImplicitAnimation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eState\u003c/span\u003e \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ehalf\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eState\u003c/span\u003e \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003edim\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esome\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eImage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;tower\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003escaleEffect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehalf\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.5\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e1.0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eopacity\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edim\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.2\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e1.0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eanimation\u003c/span\u003e\u003cspan class=\"p\"\u003e(.\u003c/span\u003e\u003cspan class=\"n\"\u003eeaseInOut\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eduration\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e1.0\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eonTapGesture\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edim\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etoggle\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehalf\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etoggle\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-f4c55\" hidden\u003e\n    \u003clabel for=\"zoomCheck-f4c55\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/implicit.gif#center\" alt=\"Implicit Animation\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e","title":"Animation - SwiftUI"},{"content":"Introduction I previously never had a chance to work with GraphQL. I was excited to learn when to apply this technology, what tools I can use, and how I can implement it. Here‚Äôs what I found:\nFor testing, I used the Star Wars GraphQL API with AllFilmsQuery:\nquery AllFilmsQuery { allFilms { films { title director created producers releaseDate } } } I requested allFilms with title, director, created, producers, and releaseDate information.\nWhen to Apply This Technology The best way to use GraphQL is when you have multiple platform applications such as web, mobile, and TV, and each client needs to request the specific data they require. It\u0026rsquo;s also beneficial when you need to fetch complex, nested, or related data from multiple sources. What Tools to Use GraphiQL Live Demo - A graphical interactive in-browser GraphQL IDE. Apollo iOS Docs - Apollo iOS is an open-source GraphQL client for native client applications, written in Swift. Apollo iOS Code Generation CLI - A CLI to generate boilerplate code. Caveats Before diving into implementation, I would like to highlight a few nuances.\nYou need to add NetworkInterceptorProvider and AuthorizationInterceptor to authenticate your operations. Without them, you won\u0026rsquo;t be able to access the data on your server.\nHow to Implement It Client class NetworkInterceptorProvider: DefaultInterceptorProvider { override func interceptors\u0026lt;Operation\u0026gt;(for operation: Operation) -\u0026gt; [ApolloInterceptor] where Operation : GraphQLOperation { var interceptors = super.interceptors(for: operation) interceptors.insert(AuthorizationInterceptor(), at: 0) return interceptors } } class AuthorizationInterceptor: ApolloInterceptor { let id: String = UUID().uuidString func interceptAsync\u0026lt;Operation\u0026gt;( chain: RequestChain, request: HTTPRequest\u0026lt;Operation\u0026gt;, response: HTTPResponse\u0026lt;Operation\u0026gt;?, completion: @escaping (Result\u0026lt;GraphQLResult\u0026lt;Operation.Data\u0026gt;, Error\u0026gt;) -\u0026gt; Void ) where Operation : GraphQLOperation { chain.proceedAsync(request: request, response: response, completion: completion) } } private let apollo: ApolloClient = { let client = URLSessionClient() let cache = InMemoryNormalizedCache() let store = ApolloStore(cache: cache) let provider = NetworkInterceptorProvider(client: client, store: store) let url = URL(string: \u0026#34;https://swapi-graphql.netlify.app/.netlify/functions/index\u0026#34;)! let transport = RequestChainNetworkTransport(interceptorProvider: provider, endpointURL: url) return ApolloClient(networkTransport: transport, store: store) }() UI import SwiftUI import Apollo import StarWarsAPI struct ContentView: View { @State private var list: [AllFilmsQuery.Data.AllFilms.Film?] = [] var body: some View { VStack { ForEach(list, id: \\.self) { row in Text(row?.title ?? \u0026#34;\u0026#34;) } }.onAppear(perform: { apollo.fetch(query: AllFilmsQuery()) { result in switch result { case .success(let response): self.list = response.data?.allFilms?.films ?? [] case .failure(let error): print(error) } } }) .padding() } } #Preview { ContentView() } References You can find more detailed information in the amazing post Unleashing the Power of GraphQL in Your iOS App where you can find step-by-step instructions on how to use Apollo iOS and GraphQL. I also recommend watching the video ‚ÄúAdopting GraphQL\u0026quot; by Carola Nitz, hosted by Swiftable. Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/implementing-graphql-in-an-ios-application/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI previously never had a chance to work with GraphQL. I was excited to learn when to apply this technology, what tools I can use, and how I can implement it. Here‚Äôs what I found:\u003c/p\u003e\n\u003cp\u003eFor testing, I used the \u003ca href=\"https://studio.apollographql.com/public/star-wars-swapi/variant/current/home\"\u003eStar Wars GraphQL API\u003c/a\u003e with \u003ccode\u003eAllFilmsQuery\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-graphql\" data-lang=\"graphql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003equery\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nc\"\u003eAllFilmsQuery\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"py\"\u003eallFilms\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"py\"\u003efilms\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"py\"\u003etitle\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"py\"\u003edirector\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"py\"\u003ecreated\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"py\"\u003eproducers\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"py\"\u003ereleaseDate\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eI requested \u003ccode\u003eallFilms\u003c/code\u003e with \u003ccode\u003etitle\u003c/code\u003e, \u003ccode\u003edirector\u003c/code\u003e, \u003ccode\u003ecreated\u003c/code\u003e, \u003ccode\u003eproducers\u003c/code\u003e, and \u003ccode\u003ereleaseDate\u003c/code\u003e information.\u003c/p\u003e","title":"Implementing GraphQL in an iOS application"},{"content":"Introduction I was eager to learn about securing user data using Keychain and biometric authentication. Here are a few steps I found:\nCaveats You can test accessing Keychain data using Touch ID and Face ID only on a real device.\nFirst Step The first step is to add the Privacy - Face ID Usage Description key to your Info.plist. Without it, you would not be able to retrieve data from Keychain using Face ID.\nSecond Step The second step would be to add the addCredentials method to be able to save user data to Keychain.\n/// Stores credentials for the given server. func addCredentials(_ credentials: Credentials, server: String) throws { // Use the username as the account, and get the password as data. let account = credentials.username let password = credentials.password.data(using: String.Encoding.utf8)! // Create an access control instance that dictates how the item can be read later. let access = SecAccessControlCreateWithFlags(nil, // Use the default allocator. kSecAttrAccessibleWhenPasscodeSetThisDeviceOnly, .userPresence, nil) // Ignore any error. // Allow a device unlock in the last 10 seconds to be used to get at keychain items. let context = LAContext() context.touchIDAuthenticationAllowableReuseDuration = 10 // Build the query for use in the add operation. let query: [String: Any] = [kSecClass as String: kSecClassInternetPassword, kSecAttrAccount as String: account, kSecAttrServer as String: server, kSecAttrAccessControl as String: access as Any, kSecUseAuthenticationContext as String: context, kSecValueData as String: password] let status = SecItemAdd(query as CFDictionary, nil) guard status == errSecSuccess else { throw KeychainError(status: status) } } Third Step The third step is to add the readCredentials method to be capable of retrieving user data from Keychain.\n/// Reads the stored credentials for the given server. func readCredentials(server: String) throws -\u0026gt; Credentials { let context = LAContext() context.localizedReason = \u0026#34;Access your password on the keychain\u0026#34; let query: [String: Any] = [kSecClass as String: kSecClassInternetPassword, kSecAttrServer as String: server, kSecMatchLimit as String: kSecMatchLimitOne, kSecReturnAttributes as String: true, kSecUseAuthenticationContext as String: context, kSecReturnData as String: true] var item: CFTypeRef? let status = SecItemCopyMatching(query as CFDictionary, \u0026amp;item) guard status == errSecSuccess else { throw KeychainError(status: status) } guard let existingItem = item as? [String: Any], let passwordData = existingItem[kSecValueData as String] as? Data, let password = String(data: passwordData, encoding: String.Encoding.utf8), let account = existingItem[kSecAttrAccount as String] as? String else { throw KeychainError(status: errSecInternalError) } return Credentials(username: account, password: password) } Fourth Step The fourth step is to add the deleteCredentials method to have the ability to delete user data from Keychain.\n/// Deletes credentials for the given server. func deleteCredentials(server: String) throws { let query: [String: Any] = [kSecClass as String: kSecClassInternetPassword, kSecAttrServer as String: server] let status = SecItemDelete(query as CFDictionary) guard status == errSecSuccess else { throw KeychainError(status: status) } } UI import SwiftUI import LocalAuthentication struct ContentView: View { @State private var status: String = \u0026#34;\u0026#34; var body: some View { VStack { ForEach(Command.allCases) { command in Button(command.rawValue) { switch command { case .add: // Normally, username and password would come from the user interface. let credentials = Credentials(username: \u0026#34;appleseed\u0026#34;, password: \u0026#34;1234\u0026#34;) do { try addCredentials(credentials, server: server) status = statusMessage(.add, nil) } catch { status = error.localizedDescription } case .read: do { status = statusMessage(.read, try readCredentials(server: server)) } catch { status = error.localizedDescription } case .delete: do { try deleteCredentials(server: server) status = statusMessage(.delete, nil) } catch { status = error.localizedDescription } } } if command != .delete { Spacer() } } Spacer() Text(status) } } } Helpers enum Command: String, CaseIterable, Identifiable { var id: String { rawValue } case add case read case delete } /// The username and password that we want to store or read. struct Credentials { var username: String var password: String } /// Keychain errors we might encounter. struct KeychainError: Error { var status: OSStatus var localizedDescription: String { return SecCopyErrorMessageString(status, nil) as String? ?? \u0026#34;Unknown error.\u0026#34; } } /// The server we are accessing with the credentials. let server = \u0026#34;www.example.com\u0026#34; func statusMessage(_ command: Command, _ credentials: Credentials? = nil) -\u0026gt; String { switch command { case .add: return \u0026#34;Added credentials.\u0026#34; case .read: return \u0026#34;Read credentials: \\(credentials!.username)/\\(credentials!.password)\u0026#34; case .delete: return \u0026#34;Deleted credentials.\u0026#34; } } You can find more detailed information and project details in the Apple Developer Documentation.\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/securing-user-data-with-keychain-touch-id-and-face-id/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI was eager to learn about securing user data using \u003ccode\u003eKeychain\u003c/code\u003e and \u003ccode\u003ebiometric authentication\u003c/code\u003e. Here are a few steps I found:\u003c/p\u003e\n\u003ch3 id=\"caveats\"\u003eCaveats\u003c/h3\u003e\n\u003cp\u003eYou can test accessing Keychain data using Touch ID and Face ID only on a real device.\u003c/p\u003e\n\u003ch3 id=\"first-step\"\u003eFirst Step\u003c/h3\u003e\n\u003cp\u003eThe first step is to add the \u003ccode\u003ePrivacy - Face ID Usage Description\u003c/code\u003e key to your \u003ccode\u003eInfo.plist\u003c/code\u003e. Without it, you would not be able to retrieve data from \u003ccode\u003eKeychain\u003c/code\u003e using \u003ccode\u003eFace ID\u003c/code\u003e.\u003c/p\u003e","title":"Securing user data with Keychain, Touch ID, and Face ID"},{"content":"Introduction I was wondering how to add in-app purchases to my app. I chose non-consumable in-app purchase because you can pay one time for this item. Here are a few steps on how I did it.\nFirst Step Set up In-App Purchases for your app in App Store Connect account or add a .storekit configuration file and start from there. If you\u0026rsquo;ve already set up In-App Purchases in your account, you can sync the StoreKit config with that data.\nCaveats Be aware that if you choose to set up the StoreKit configuration file first, you will not find that file in the Xcode 15.3.0 iOS template. Instead, switch to macOS and search for it there.\nSecond Step fetchProducts by identifiers to retrieve data and by using an SKProductsRequestDelegate to receive and display products.\nfunc fetchProducts() { let productIDs: Set\u0026lt;String\u0026gt; = [\u0026#34;com.remove.ads.nonconsumable\u0026#34;] let request = SKProductsRequest(productIdentifiers: productIDs) request.delegate = self request.start() } // MARK: - SKProductsRequestDelegate extension ViewModel: SKProductsRequestDelegate { func productsRequest(_ request: SKProductsRequest, didReceive response: SKProductsResponse) { DispatchQueue.main.async { self.products = response.products.map { product in Product(id: product.productIdentifier, title: product.localizedTitle, price: product.price.doubleValue) } for product in response.products { self.productsMap[product.productIdentifier] = product } } } } Third Step Add a purchaseProduct method and connect the view model with the UI.\nfunc purchaseProduct(product: Product) { guard SKPaymentQueue.canMakePayments() else { errorMessage = \u0026#34;In-app purchases are disabled on this device.\u0026#34; return } guard let skProduct = productsMap[product.id] else { errorMessage = \u0026#34;Product information not available.\u0026#34; return } let payment = SKPayment(product: skProduct) SKPaymentQueue.default().add(payment) } UI var body: some View { ZStack(alignment: .top) { VStack(spacing: 10) { Text(\u0026#34;With StoreKit 2\u0026#34;) .padding() ForEach(viewModel.products) { product in Button { viewModel.purchaseProduct(product: product) } label: { Text(product.title) } } } .padding() } .onAppear(perform: { viewModel.fetchProducts() }) } ViewModel final class ViewModel: NSObject, ObservableObject { @Published var products: [Product] = [] private var productsMap: [String: SKProduct] = [:] @Published var errorMessage: String? func fetchProducts() { let productIDs: Set\u0026lt;String\u0026gt; = [\u0026#34;com.remove.ads.nonconsumable\u0026#34;] let request = SKProductsRequest(productIdentifiers: productIDs) request.delegate = self request.start() } func purchaseProduct(product: Product) { guard SKPaymentQueue.canMakePayments() else { errorMessage = \u0026#34;In-app purchases are disabled on this device.\u0026#34; return } guard let skProduct = productsMap[product.id] else { errorMessage = \u0026#34;Product information not available.\u0026#34; return } let payment = SKPayment(product: skProduct) SKPaymentQueue.default().add(payment) } } // MARK: - SKProductsRequestDelegate extension ViewModel: SKProductsRequestDelegate { func productsRequest(_ request: SKProductsRequest, didReceive response: SKProductsResponse) { DispatchQueue.main.async { self.products = response.products.map { product in Product(id: product.productIdentifier, title: product.localizedTitle, price: product.price.doubleValue) } for product in response.products { self.productsMap[product.productIdentifier] = product } } } } Helpers struct Product: Identifiable { let id: String let title: String let price: Double } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/implementing-in-app-purchases-to-swiftui-app-using-storekit-2/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI was wondering how to add in-app purchases to my app. I chose \u003ca href=\"https://support.apple.com/en-us/108813#:~:text=What%20is%20a%20non%2Dconsumable%20in%2Dapp%20purchase%3F\"\u003enon-consumable in-app purchase\u003c/a\u003e because you can pay one time for this item. Here are a few steps on how I did it.\u003c/p\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-3215a\" hidden\u003e\n    \u003clabel for=\"zoomCheck-3215a\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.gif#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003ch3 id=\"first-step\"\u003eFirst Step\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://learn.buildfire.com/en/articles/2534672-how-to-create-a-single-in-app-purchase-for-ios\"\u003eSet up In-App Purchases\u003c/a\u003e for your app in \u003ca href=\"https://appstoreconnect.apple.com/login\"\u003eApp Store Connect\u003c/a\u003e account or add a \u003ccode\u003e.storekit\u003c/code\u003e configuration file and start from there. If you\u0026rsquo;ve already set up In-App Purchases in your account, you can sync the \u003ccode\u003eStoreKit config\u003c/code\u003e with that data.\u003c/p\u003e","title":"Implementing In-App Purchases to SwiftUI app using StoreKit 2"},{"content":"Introduction Sometime ago, I was working on a marketplace app, and I needed to add Apple Pay to make purchases more easily. Here are a few steps on how I did it: First Step You need to add Apple Pay capability to your project. You will need to Register a Merchant ID. I will skip this step; you can find info by following this link Setting up Apple Pay. Second Step You will need to import PassKit and create PKPaymentRequest to interact with PKPaymentAuthorizationController and PKPaymentAuthorizationControllerDelegate. func initiateApplePay() { // Create payment request let paymentRequest = PKPaymentRequest() paymentRequest.merchantIdentifier = \u0026#34;your_merchant_identifier\u0026#34; paymentRequest.countryCode = \u0026#34;US\u0026#34; paymentRequest.currencyCode = \u0026#34;USD\u0026#34; paymentRequest.supportedNetworks = [.visa, .masterCard, .amex] paymentRequest.merchantCapabilities = .threeDSecure // Add payment items from cart for item in cartItems { let paymentItem = PKPaymentSummaryItem(label: item.name, amount: item.price) paymentRequest.paymentSummaryItems.append(paymentItem) } // Add total amount let totalItem = PKPaymentSummaryItem(label: \u0026#34;Total\u0026#34;, amount: totalAmount) paymentRequest.paymentSummaryItems.append(totalItem) // Present Apple Pay sheet let paymentController = PKPaymentAuthorizationController(paymentRequest: paymentRequest) paymentController.delegate = self paymentController.present(completion: nil) } Third Step Add UI and connect it with the view model.\nUI import SwiftUI struct ContentView: View { @StateObject private var viewModel = MarketplaceViewModel() var body: some View { VStack { List(viewModel.products) { product in HStack { Text(product.name) Spacer() Text(product.price.stringValue + \u0026#34;$\u0026#34;) Button(viewModel.inCart(product: product) ? \u0026#34;\u0026#34; : \u0026#34;Add to cart\u0026#34;) { viewModel.addToCart(product: product) } } } Text(\u0026#34;Total: \\(viewModel.totalAmount)\u0026#34;) Button(\u0026#34;Pay with Apple Pay\u0026#34;) { viewModel.initiateApplePay() } .padding() } } } #Preview { ContentView() } ViewModel final class MarketplaceViewModel: NSObject, ObservableObject { private var cartItems: [Product] = [] @Published private(set) var totalAmount: NSDecimalNumber = 0.0 @Published private(set) var products: [Product] = [] func fetchProducts() { Task { self.products = await ProductService.getProducts() } } func inCart(product: Product) -\u0026gt; Bool { cartItems.contains(product) } override init() { super.init() fetchProducts() } private func calculateTotalAmount() { totalAmount = cartItems.reduce(0) { $0.adding($1.price) } } func addToCart(product: Product) { cartItems.append(product) calculateTotalAmount() } func initiateApplePay() { // Create payment request let paymentRequest = PKPaymentRequest() paymentRequest.merchantIdentifier = \u0026#34;your_merchant_identifier\u0026#34; paymentRequest.countryCode = \u0026#34;US\u0026#34; paymentRequest.currencyCode = \u0026#34;USD\u0026#34; paymentRequest.supportedNetworks = [.visa, .masterCard, .amex] paymentRequest.merchantCapabilities = .threeDSecure // Add payment items from cart for item in cartItems { let paymentItem = PKPaymentSummaryItem(label: item.name, amount: item.price) paymentRequest.paymentSummaryItems.append(paymentItem) } // Add total amount let totalItem = PKPaymentSummaryItem(label: \u0026#34;Total\u0026#34;, amount: totalAmount) paymentRequest.paymentSummaryItems.append(totalItem) // Present Apple Pay sheet let paymentController = PKPaymentAuthorizationController(paymentRequest: paymentRequest) paymentController.delegate = self paymentController.present(completion: nil) } } // MARK: - PKPaymentAuthorizationControllerDelegate extension MarketplaceViewModel: PKPaymentAuthorizationControllerDelegate { func paymentAuthorizationController(_ controller: PKPaymentAuthorizationController, didAuthorizePayment payment: PKPayment, handler completion: @escaping (PKPaymentAuthorizationResult) -\u0026gt; Void) { let paymentResult = PKPaymentAuthorizationResult(status: .success, errors: nil) completion(paymentResult) } func paymentAuthorizationControllerDidFinish(_ controller: PKPaymentAuthorizationController) { controller.dismiss(completion: nil) } } Helpers struct Product: Identifiable, Equatable { let id: UUID let name: String let price: NSDecimalNumber } final class ProductService { static func getProducts() async -\u0026gt; [Product] { let products: [Product] = [ Product(id: UUID(), name: \u0026#34;Product 1\u0026#34;, price: 10.0), Product(id: UUID(), name: \u0026#34;Product 2\u0026#34;, price: 20.0), Product(id: UUID(), name: \u0026#34;Product 3\u0026#34;, price: 15.0) ] return products } } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/implementing-apple-pay-in-a-swiftui-app/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eSometime ago, I was working on a marketplace app, and I needed to add Apple Pay to make purchases more easily. Here are a few steps on how I did it:\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-3215a\" hidden\u003e\n    \u003clabel for=\"zoomCheck-3215a\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.gif#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003ch3 id=\"first-step\"\u003eFirst Step\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eYou need to add \u003ca href=\"https://developer.apple.com/documentation/passkit_apple_pay_and_wallet/apple_pay/offering_apple_pay_in_your_app\"\u003eApple Pay\u003c/a\u003e capability to your project.\u003c/li\u003e\n\u003cli\u003eYou will need to \u003ccode\u003eRegister a Merchant ID\u003c/code\u003e. I will skip this step; you can find info by following this link \u003ca href=\"https://developer.apple.com/documentation/passkit_apple_pay_and_wallet/apple_pay/setting_up_apple_pay\"\u003eSetting up Apple Pay\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"second-step\"\u003eSecond Step\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eYou will need to \u003ccode\u003eimport PassKit\u003c/code\u003e and create \u003ca href=\"https://developer.apple.com/documentation/passkit_apple_pay_and_wallet/pkpaymentrequest\"\u003e\u003ccode\u003ePKPaymentRequest\u003c/code\u003e\u003c/a\u003e to interact with \u003ca href=\"https://developer.apple.com/documentation/passkit_apple_pay_and_wallet/pkpaymentauthorizationcontroller\"\u003e\u003ccode\u003ePKPaymentAuthorizationController\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://developer.apple.com/documentation/passkit_apple_pay_and_wallet/pkpaymentauthorizationcontrollerdelegate\"\u003e\u003ccode\u003ePKPaymentAuthorizationControllerDelegate\u003c/code\u003e\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003einitiateApplePay\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// Create payment request\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003epaymentRequest\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePKPaymentRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epaymentRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emerchantIdentifier\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;your_merchant_identifier\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epaymentRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecountryCode\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;US\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epaymentRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrencyCode\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;USD\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epaymentRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esupportedNetworks\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[.\u003c/span\u003e\u003cspan class=\"n\"\u003evisa\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emasterCard\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eamex\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epaymentRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emerchantCapabilities\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ethreeDSecure\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// Add payment items from cart\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ecartItems\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003epaymentItem\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePKPaymentSummaryItem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elabel\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003epaymentRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epaymentSummaryItems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epaymentItem\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// Add total amount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003etotalItem\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePKPaymentSummaryItem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elabel\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Total\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003etotalAmount\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epaymentRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epaymentSummaryItems\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etotalItem\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// Present Apple Pay sheet\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003epaymentController\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePKPaymentAuthorizationController\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epaymentRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003epaymentRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epaymentController\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edelegate\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epaymentController\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epresent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecompletion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"third-step\"\u003eThird Step\u003c/h3\u003e\n\u003cp\u003eAdd UI and connect it with the view model.\u003c/p\u003e","title":"Implementing Apple Pay in a SwiftUI app"},{"content":"Introduction I have been looking for information about implementation details of integration testing. I found a lot of information, but it was theoretical and all information looked the same. I did not find a meaningful example, so I tried to come up with my own definition and sample.\nIntegration testing means testing the behavior between modules or views to ensure they work as expected after user actions.\nThere are two ways of conducting integration testing: The first is by unit tests, where you try to test the flowing data between view models. The second is UI tests, where you try to test if the UI items exist and navigation works correctly. I will focus on testing the flowing data between view models.\nSample: List View and Detail View When you tap on a row in the list, you expect that:\nThe selected item will pass to the detail view. The detail view will receive this item. The selected item will be equal to the passed item. import XCTest @testable import IntegrationTesting final class IntegrationTestingTests: XCTestCase { func testItemSelection() { let viewModel = MockItemListViewModel(service: MockItemService()) let selectedIndex = 1 let itemListView = ItemListView(viewModel: viewModel, didSelectItem: { let itemDetailView = ItemDetailView(selectedItem: $0) XCTAssertEqual(itemDetailView.selectedItem?.name, viewModel.items[selectedIndex].name) }) itemListView.didSelectItem(viewModel.items[selectedIndex]) } } Helpers import Combine final class MockItemListViewModel: ItemListViewModel { var selectedItem: Item? = nil } class ItemListViewModel: ObservableObject { @Published var items: [Item] = [] private var cancellables: Set\u0026lt;AnyCancellable\u0026gt; = [] private let service: ItemService init(service: ItemService) { self.service = service fetchItems() } func fetchItems() { service.fetchItems() .sink { completion in // Handle error or completion if necessary } receiveValue: { [weak self] items in self?.items = items } .store(in: \u0026amp;cancellables) } } import Combine protocol ItemService { func fetchItems() -\u0026gt; AnyPublisher\u0026lt;[Item], Error\u0026gt; } final class MockItemService: ItemService { func fetchItems() -\u0026gt; AnyPublisher\u0026lt;[Item], Error\u0026gt; { return Just([Item(name: \u0026#34;Item 1\u0026#34;), Item(name: \u0026#34;Item 2\u0026#34;)]) .setFailureType(to: Error.self) .eraseToAnyPublisher() } } import SwiftUI struct ItemListView: View { @ObservedObject var viewModel: ItemListViewModel var didSelectItem: (Item) -\u0026gt; Void var body: some View { List(viewModel.items) { item in Button(action: { didSelectItem(item) }) { Text(item.name) } }.accessibilityIdentifier(\u0026#34;ItemListView\u0026#34;) } } import SwiftUI struct ItemDetailView: View { var selectedItem: Item? var body: some View { if let item = selectedItem { Text(\u0026#34;Item Detail: \\(item.name)\u0026#34;) } else { Text(\u0026#34;No item selected\u0026#34;) } } } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/integration-testing-for-swiftui-views/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI have been looking for information about implementation details of integration testing.\nI found a lot of information, but it was theoretical and all information looked the same.\nI did not find a meaningful example, so I tried to come up with my own definition and sample.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIntegration testing means testing the behavior between modules or views to ensure they work as expected after user actions.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"there-are-two-ways-of-conducting-integration-testing\"\u003eThere are two ways of conducting integration testing:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eThe first is by unit tests, where you try to test the flowing data between view models.\u003c/li\u003e\n\u003cli\u003eThe second is UI tests, where you try to test if the UI items exist and navigation works correctly.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI will focus on testing the flowing data between view models.\u003c/p\u003e","title":"Integration testing for SwiftUI views"},{"content":"Introduction After spending some time developing my personal iOS app, I found myself in a position where I needed to add UI tests to my application. The reason behind this decision was the necessity to change the architecture to make it more scalable. However, this task proved to be challenging due to certain parts of the code being tightly coupled. The situation was quite frustrating. To address this problem, I decided to incorporate UI tests that could help identify issues during the refactoring process.\nCaveats Make sure to run UI tests from a generated bundle specifically designed for UI testing. If you attempt to test the UI using a bundle intended for Unit tests, you will consistently encounter the error: No target application path specified via test configuration: \u0026lt;XCTestConfiguration: 0x102b051f0\u0026gt;. Also, don\u0026rsquo;t forget to hide the keyboard when necessary. If you need to tap on the tab bar and forget to close it, the operation will not succeed because it won\u0026rsquo;t be able to locate the tab bar button. To resolve this, simply add the following code: app.buttons[\u0026#34;Return\u0026#34;].tap() Implementation Here\u0026rsquo;s an example of a To-Do list with functionalities for listing and adding tasks.\nUI Tests var app: XCUIApplication! override func setUpWithError() throws { continueAfterFailure = false app = XCUIApplication() app.launch() } func testAddTask() throws { let addTaskTab = app.tabBars.buttons[\u0026#34;Add Task\u0026#34;] addTaskTab.tap() let textField = app.textFields[\u0026#34;Enter task\u0026#34;] textField.tap() textField.typeText(\u0026#34;New Task\u0026#34;) // Dismiss the keyboard app.buttons[\u0026#34;Return\u0026#34;].tap() let addTaskButton = app.buttons[\u0026#34;AddTaskButton\u0026#34;] addTaskButton.tap() app.tabBars.buttons[\u0026#34;Tasks\u0026#34;].tap() XCTAssertTrue(app.staticTexts[\u0026#34;New Task\u0026#34;].exists) } UI struct ContentView: View { @StateObject var viewModel = TaskViewModel() var body: some View { TabView { TaskListView(viewModel: viewModel) .tabItem { Image(systemName: \u0026#34;list.bullet\u0026#34;) Text(\u0026#34;Tasks\u0026#34;) } AddTaskView(viewModel: viewModel) .tabItem { Image(systemName: \u0026#34;plus.circle\u0026#34;) Text(\u0026#34;Add Task\u0026#34;) } } } } struct TaskListView: View { @ObservedObject var viewModel: TaskViewModel var body: some View { NavigationView { List(viewModel.tasks) { task in Text(task.title) } .navigationBarTitle(\u0026#34;Tasks\u0026#34;) } } } struct AddTaskView: View { @ObservedObject var viewModel: TaskViewModel @State private var newTaskTitle = \u0026#34;\u0026#34; var body: some View { VStack { TextField(\u0026#34;Enter task\u0026#34;, text: $newTaskTitle) .padding() Button(\u0026#34;Add Task\u0026#34;) { viewModel.addTask(title: newTaskTitle) newTaskTitle = \u0026#34;\u0026#34; } .accessibilityIdentifier(\u0026#34;AddTaskButton\u0026#34;) .padding() } .navigationTitle(\u0026#34;Add Task\u0026#34;) } } final class TaskViewModel: ObservableObject { @Published var tasks: [Task] = [] func addTask(title: String) { let newTask = Task(title: title) tasks.append(newTask) } } struct Task: Identifiable { let id = UUID() var title: String var isCompleted: Bool = false } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/ui-testing-swiftui-views-using-xctest-framework/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eAfter spending some time developing my personal iOS app, I found myself in a position where I needed to add UI tests to my application.\nThe reason behind this decision was the necessity to change the architecture to make it more scalable.\nHowever, this task proved to be challenging due to certain parts of the code being tightly coupled.\nThe situation was quite frustrating.\nTo address this problem, I decided to incorporate UI tests that could help identify issues during the refactoring process.\u003c/p\u003e","title":"UI testing SwiftUI views using XCTest Framework"},{"content":"Introduction I was curious about how to add Dynamic Island and implement it into a Video Streaming App. Here are a few steps on how you can achieve this.\nCaveats Debugging Dynamic Island can be a bit tricky; it only works when the main app is running. If you try to run it separately, you will encounter the error SendProcessControlEvent:toPid: encountered an error: Error Domain=com.apple.dt.deviceprocesscontrolservice Code=8 \u0026quot;Failed to show Widget\u0026quot;. The solution is to configure live activities and run them through the main app. Be aware that when you add a widget to the project, in some cases, it adds all main target files to Compile Sources. Implementation Dynamic Islands are divided into different sizes: minimal, compactTrailing, compactLeading, and expanded. Before proceeding, you need to add LiveActivityManager to be able to display Dynamic Islands.\nimport Foundation import ActivityKit struct VideoStreamingWidgetActivityAttributes: ActivityAttributes { struct ContentState: Codable, Hashable { var isPlaying: String = \u0026#34;0\u0026#34; } } final class LiveActivityManager { @discardableResult static func startActivity(isPlaying: String) throws -\u0026gt; String { var activity: Activity\u0026lt;VideoStreamingWidgetActivityAttributes\u0026gt;? let initialState = VideoStreamingWidgetActivityAttributes.ContentState(isPlaying: isPlaying) do { activity = try Activity.request(attributes: VideoStreamingWidgetActivityAttributes(), contentState: initialState, pushType: nil) guard let id = activity?.id else { throw LiveActivityErrorType.failedToGetID } return id } catch { throw error } } } enum LiveActivityErrorType: Error { case failedToGetID } UI compactTrailing compactTrailing: { Text(\u0026#34;0:33\u0026#34;) .foregroundColor(.red) .padding(.trailing, 8) } compactLeading compactLeading: { Image(systemName: \u0026#34;waveform\u0026#34;) .resizable() .aspectRatio(contentMode: .fit) .foregroundColor(.red) .padding(.leading, 8) } expanded DynamicIsland { DynamicIslandExpandedRegion(.center) { HStack { Text(\u0026#34;0:33\u0026#34;) .foregroundStyle(.gray) .frame(height: 4) ProgressView(value: 33, total: 344) .progressViewStyle(.linear) Text(\u0026#34;-2:33\u0026#34;) .foregroundStyle(.gray) .frame(height: 4) } } DynamicIslandExpandedRegion(.bottom) { HStack(spacing: 24) { ForEach(Command.allCases) { command in Button(intent: ButtonIntent(id: command.id)) { Image(systemName: imageSystemName(isPlaying: true, command: command)) } } } } } Helpers enum Command: String, CaseIterable { case previous case playPause case next } extension Command: Identifiable { var id: String { rawValue } } func imageSystemName(isPlaying: Bool, command: Command) -\u0026gt; String { switch command { case .playPause: if isPlaying { return \u0026#34;pause.fill\u0026#34; } else { return \u0026#34;play.fill\u0026#34; } case .next: return \u0026#34;forward.fill\u0026#34; case .previous: return \u0026#34;backward.fill\u0026#34; } } import AppIntents struct ButtonIntent: AppIntent { static let title: LocalizedStringResource = \u0026#34;ButtonIntent\u0026#34; @Parameter(title: \u0026#34;id\u0026#34;) var id: String init(id: String) { self.id = id } init() {} func perform() async throws -\u0026gt; some IntentResult { if id == Command.playPause.rawValue { } return .result() } } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/building-dynamic-island-for-video-streaming-app/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI was curious about how to add Dynamic Island and implement it into a Video Streaming App.\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-f7bcf\" hidden\u003e\n    \u003clabel for=\"zoomCheck-f7bcf\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.png#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\nHere are a few steps on how you can achieve this.\u003c/p\u003e\n\u003ch3 id=\"caveats\"\u003eCaveats\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eDebugging Dynamic Island can be a bit tricky; it only works when the main app is running. If you try to run it separately, you will encounter the error \u003ccode\u003eSendProcessControlEvent:toPid: encountered an error: Error Domain=com.apple.dt.deviceprocesscontrolservice Code=8 \u0026quot;Failed to show Widget\u0026quot;.\u003c/code\u003e The solution is to configure live activities and run them through the main app.\u003c/li\u003e\n\u003cli\u003eBe aware that when you add a widget to the project, in some cases, it adds all main target files to \u003ccode\u003eCompile Sources\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"implementation\"\u003eImplementation\u003c/h3\u003e\n\u003cp\u003eDynamic Islands are divided into different sizes: \u003ccode\u003eminimal\u003c/code\u003e, \u003ccode\u003ecompactTrailing\u003c/code\u003e, \u003ccode\u003ecompactLeading\u003c/code\u003e, and \u003ccode\u003eexpanded\u003c/code\u003e.\nBefore proceeding, you need to add \u003ccode\u003eLiveActivityManager\u003c/code\u003e to be able to display Dynamic Islands.\u003c/p\u003e","title":"Building Dynamic Island for Video Streaming App"},{"content":"Introduction I was exploring the idea of creating a YouTube-like widget for the lock screen on iOS devices. It wasn\u0026rsquo;t easy because most articles on the Internet discussed general implementations, such as for a coffee shop or a to-do list. Even when I found some similar versions, the project wouldn\u0026rsquo;t compile. I made the decision to approach it my way, so here\u0026rsquo;s what I found out:\nCaveats After being stuck for two or more hours without understanding why, after tapping on a button, I wasn't able to receive a callback from it and the widget always opened the main iOS app, I realized that I forgot to add AppIntent - without it, you can\u0026rsquo;t handle actions for iOS 17. import AppIntents struct ButtonIntent: AppIntent { static let title: LocalizedStringResource = \u0026#34;ButtonIntent\u0026#34; @Parameter(title: \u0026#34;id\u0026#34;) var id: String func perform() async throws -\u0026gt; some IntentResult { if id == Command.playPause.rawValue { DataModel.shared.isPlaying.toggle() } return .result() } } Another crucial point is not to forget to add an explicit init. If you don\u0026rsquo;t implement it explicitly, it will not work. import AppIntents struct ButtonIntent: AppIntent { static let title: LocalizedStringResource = \u0026#34;ButtonIntent\u0026#34; @Parameter(title: \u0026#34;id\u0026#34;) var id: String init(id: String) { self.id = id } init() {} func perform() async throws -\u0026gt; some IntentResult { if id == Command.playPause.rawValue { DataModel.shared.isPlaying.toggle() } return .result() } } Lastly, I attempted to add a Slider, but I found that it\u0026rsquo;s not supported by the widget. My solution was to choose a ProgressView instead. Implementation struct YouTubeLockScreenWidget: View { var body: some View { VStack { Spacer() ProgressView(value: DataModel.shared.currentTime, total: DataModel.shared.totalTime) .progressViewStyle(.linear) Spacer() HStack { ForEach(Command.allCases) { command in Button(intent: ButtonIntent(id: command.id)) { Image(systemName: imageSystemName(isPlaying: DataModel.shared.isPlaying, command: command)) } } } } } } final class DataModel { static let shared = DataModel() var isPlaying: Bool = false var currentTime: TimeInterval = 34 var totalTime: TimeInterval = 304 } enum Command: String, CaseIterable { case previous case playPause case next } extension Command: Identifiable { var id: String { rawValue } } func imageSystemName(isPlaying: Bool, command: Command) -\u0026gt; String { switch command { case .playPause: if isPlaying { return \u0026#34;pause.fill\u0026#34; } else { return \u0026#34;play.fill\u0026#34; } case .next: return \u0026#34;forward.fill\u0026#34; case .previous: return \u0026#34;backward.fill\u0026#34; } } I had not replaced default generated code when I was adding widget to the project. I just added YouTubeLockScreenWidget to generated VideoStreamingWidgetEntryView.\nstruct VideoStreamingWidgetEntryView : View { var entry: Provider.Entry var body: some View { YouTubeLockScreenWidget() } } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/building-video-streaming-widget-for-ios-app/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI was exploring the idea of creating a YouTube-like widget for the lock screen on iOS devices.\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-f7bcf\" hidden\u003e\n    \u003clabel for=\"zoomCheck-f7bcf\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.png#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\nIt wasn\u0026rsquo;t easy because most articles on the Internet discussed general implementations, such as for a coffee shop or a to-do list.\nEven when I found some similar versions, the project wouldn\u0026rsquo;t compile.\nI made the decision to approach it my way, so here\u0026rsquo;s what I found out:\u003c/p\u003e\n\u003ch3 id=\"caveats\"\u003eCaveats\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAfter being stuck for two or more hours without understanding \u003ccode\u003ewhy, after tapping on a button, I wasn't able to receive a callback from it and the widget always opened the main iOS app\u003c/code\u003e, I realized that I forgot to add \u003ccode\u003eAppIntent\u003c/code\u003e - without it, you can\u0026rsquo;t handle actions for iOS 17.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eimport\u003c/span\u003e \u003cspan class=\"nc\"\u003eAppIntents\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eButtonIntent\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eAppIntent\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eLocalizedStringResource\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;ButtonIntent\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eParameter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eperform\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"n\"\u003easync\u003c/span\u003e \u003cspan class=\"kr\"\u003ethrows\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esome\u003c/span\u003e \u003cspan class=\"n\"\u003eIntentResult\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCommand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eplayPause\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erawValue\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eDataModel\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eshared\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisPlaying\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etoggle\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eAnother crucial point is not to forget to add an explicit \u003ccode\u003einit\u003c/code\u003e. If you don\u0026rsquo;t implement it explicitly, it will not work.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eimport\u003c/span\u003e \u003cspan class=\"nc\"\u003eAppIntents\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eButtonIntent\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eAppIntent\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eLocalizedStringResource\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;ButtonIntent\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eParameter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eid\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eperform\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"n\"\u003easync\u003c/span\u003e \u003cspan class=\"kr\"\u003ethrows\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esome\u003c/span\u003e \u003cspan class=\"n\"\u003eIntentResult\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eCommand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eplayPause\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erawValue\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eDataModel\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eshared\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisPlaying\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etoggle\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eLastly, I attempted to add a \u003ccode\u003eSlider\u003c/code\u003e, but I found that it\u0026rsquo;s not supported by the widget. My solution was to choose a \u003ccode\u003eProgressView\u003c/code\u003e instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"implementation\"\u003eImplementation\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eYouTubeLockScreenWidget\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esome\u003c/span\u003e \u003cspan class=\"n\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eVStack\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eSpacer\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eProgressView\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eDataModel\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eshared\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrentTime\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etotal\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eDataModel\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eshared\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etotalTime\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprogressViewStyle\u003c/span\u003e\u003cspan class=\"p\"\u003e(.\u003c/span\u003e\u003cspan class=\"n\"\u003elinear\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eSpacer\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eHStack\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eForEach\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCommand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eallCases\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003ecommand\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003eButton\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eintent\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eButtonIntent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ecommand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                        \u003cspan class=\"n\"\u003eImage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esystemName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eimageSystemName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eisPlaying\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eDataModel\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eshared\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisPlaying\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecommand\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ecommand\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003efinal\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDataModel\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eshared\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eDataModel\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eisPlaying\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ecurrentTime\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTimeInterval\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e34\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003etotalTime\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTimeInterval\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e304\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eenum\u003c/span\u003e \u003cspan class=\"nc\"\u003eCommand\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCaseIterable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eprevious\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eplayPause\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003enext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eextension\u003c/span\u003e \u003cspan class=\"nc\"\u003eCommand\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eIdentifiable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003erawValue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eimageSystemName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eisPlaying\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecommand\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCommand\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"n\"\u003ecommand\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eplayPause\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eisPlaying\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;pause.fill\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;play.fill\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;forward.fill\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprevious\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;backward.fill\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eI had not replaced default generated code when I was adding widget to the project.\nI just added \u003ccode\u003eYouTubeLockScreenWidget\u003c/code\u003e to generated \u003ccode\u003eVideoStreamingWidgetEntryView\u003c/code\u003e.\u003c/p\u003e","title":"Building Video Streaming Widget for iOS App"},{"content":"Introduction I was looking for a way to add a video player to my iOS app that could be able to play remote videos.\nCaveats Problem I found that you can\u0026rsquo;t open Vimeo or Youtube videos because of AVFoundationErrorDomain Code=-11850 \u0026quot;Operation Stopped\u0026quot; UserInfo={NSLocalizedFailureReason=The server is not correctly configured Domain=NSOSStatusErrorDomain Code=-12939 error. I don‚Äôt know exactly what this means, but I\u0026rsquo;m speculating it\u0026rsquo;s related to some protection.\nSolution My solution was to find another video that is not related to those platforms.\nImplementation AVKit has a built-in video player called VideoPlayer. All you need to play a video is to pass AVPlayer with videoURL.\n@ViewBuilder var fullScreenVideoPlayer: some View { let avPlayer = AVPlayer(url: videoURL) VideoPlayer(player: avPlayer) .edgesIgnoringSafeArea(.all) .onAppear { avPlayer.play() } } I will dive a little deeper with widgets in the next chapters.\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/building-video-streaming-ios-app/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI was looking for a way to add a video player to my iOS app that could be able to play remote videos.\u003c/p\u003e\n\u003ch3 id=\"caveats\"\u003eCaveats\u003c/h3\u003e\n\u003ch4 id=\"problem\"\u003eProblem\u003c/h4\u003e\n\u003cp\u003eI found that you can\u0026rsquo;t open \u003ccode\u003eVimeo\u003c/code\u003e or \u003ccode\u003eYoutube\u003c/code\u003e videos because of \u003ccode\u003eAVFoundationErrorDomain Code=-11850 \u0026quot;Operation Stopped\u0026quot; UserInfo={NSLocalizedFailureReason=The server is not correctly configured Domain=NSOSStatusErrorDomain Code=-12939\u003c/code\u003e error.\nI don‚Äôt know exactly what this means, but I\u0026rsquo;m speculating it\u0026rsquo;s related to some protection.\u003c/p\u003e\n\u003ch4 id=\"solution\"\u003eSolution\u003c/h4\u003e\n\u003cp\u003eMy solution was to find another video that is not related to those platforms.\u003c/p\u003e","title":"Building Video Streaming iOS App"},{"content":"Introduction I never had a chance to work with WebSockets, so I decided to take a look and create a group chat. Here\u0026rsquo;s what I discovered:\nTo be able to send and receive messages, you need to create an interface for communication between a server and your application. In my case, I chose sendMessage and receiveMessage methods. For the server-side, I chose Node.js. For the iOS application, I chose the Socket.IO library. Implementation Let‚Äôs dive deeper into the implementation.\nFirst step The first step would be to create a server.js file to be able to handle incoming events.\nconst express = require(\u0026#39;express\u0026#39;); const app = express(); const server = require(\u0026#39;http\u0026#39;).Server(app); const io = require(\u0026#39;socket.io\u0026#39;)(server); const { randomUUID } = require(\u0026#39;crypto\u0026#39;); const users = new Map(); io.on(\u0026#39;connection\u0026#39;, (socket) =\u0026gt; { let username = socket.handshake.auth.username; console.log(\u0026#39;a user connected\u0026#39;); users.set(socket.id, username); io.emit(\u0026#39;receiveNewUser\u0026#39;, username, Object.fromEntries(users)); socket.on(\u0026#39;sendMessage\u0026#39;, (message) =\u0026gt; { const username = users.get(socket.id); io.emit(\u0026#39;receiveMessage\u0026#39;, randomUUID(), username, message); }); socket.on(\u0026#39;disconnect\u0026#39;, () =\u0026gt; { console.log(\u0026#39;user disconnected\u0026#39;); users.delete(socket.id); }); }); server.listen(3000, () =\u0026gt; { console.log(\u0026#39;listening on *:3000\u0026#39;); }); Second step The next step would be creating a ChatService that will be responsible for connect, disconnect, send, and receive data.\nimport SocketIO final class ChatService { private var manager: SocketManager! private var socket: SocketIOClient! private var username: String! init() { manager = SocketManager(socketURL: URL(string: \u0026#34;http://localhost:3000\u0026#34;)!) socket = manager.defaultSocket } func connect(username: String) { self.username = username socket.connect(withPayload: [\u0026#34;username\u0026#34;: username]) } func disconnect() { socket.disconnect() } func sendMessage(_ message: String) { socket.emit(\u0026#34;sendMessage\u0026#34;, message) } func sendUsername(_ username: String) { socket.emit(\u0026#34;sendUsername\u0026#34;, username) } func receiveMessage(_ completion: @escaping (String, String, UUID) -\u0026gt; Void) { socket.on(\u0026#34;receiveMessage\u0026#34;) { data, _ in if let text = data[2] as? String, let id = data[0] as? String, let username = data[1] as? String { completion(username, text, UUID.init(uuidString: id) ?? UUID()) } } } func receiveNewUser(_ completion: @escaping (String, [String:String]) -\u0026gt; Void) { socket.on(\u0026#34;receiveNewUser\u0026#34;) { data, _ in if let username = data[0] as? String, let users = data[1] as? [String:String] { completion(username, users) } } } } Third step The next step would be creating a ViewModel communicating with the ChatService.\nimport Foundation final class ViewModel: ObservableObject { private let chatService: ChatService = ChatService() @Published var message: String = \u0026#34;\u0026#34; @Published var messages: [Message] = [] @Published var username: String = \u0026#34;\u0026#34; @Published var users: [String:String] = [:] @Published var newUser: String = \u0026#34;\u0026#34; @Published var showUsernamePrompt: Bool = true @Published var isShowingNewUserAlert = false } extension ViewModel { func connect() { chatService.connect(username: username) chatService.receiveMessage { username, text, id in self.receiveMessage(username: username, text: text, id: id) } chatService.receiveNewUser { username, users in self.receiveNewUser(username: username, users: users) } showUsernamePrompt = false } func sendMessage() { chatService.sendMessage(message) message = \u0026#34;\u0026#34; } func receiveMessage(username: String, text: String, id: UUID) { messages.append(Message(username: username, text: text, id: id)) } func receiveNewUser(username: String, users: [String:String]) { self.users = users self.newUser = username self.isShowingNewUserAlert = self.username != username } func disconnect() { chatService.disconnect() message = \u0026#34;\u0026#34; messages = [] username = \u0026#34;\u0026#34; users = [:] newUser = \u0026#34;\u0026#34; showUsernamePrompt = true isShowingNewUserAlert = false } } Fourth step The last step would be creating UI and connecting it with the ViewModel.\nimport SwiftUI struct ChatView: View { @StateObject private var viewModel = ViewModel() var body: some View { NavigationView { VStack { if viewModel.showUsernamePrompt { HStack { TextField(\u0026#34;Enter your username\u0026#34;, text: $viewModel.username) .textFieldStyle(RoundedBorderTextFieldStyle()) Button(action: viewModel.connect) { Text(\u0026#34;Connect\u0026#34;) } } .padding() } else { List { ForEach(viewModel.messages, id: \\.self) { message in HStack { if message.username == viewModel.username { Text(\u0026#34;Me:\u0026#34;) .font(.subheadline) .foregroundColor(.blue) } else { Text(\u0026#34;\\(message.username):\u0026#34;) .font(.subheadline) .foregroundColor(.green) } Text(message.text) } } } HStack { TextField(\u0026#34;Enter a message\u0026#34;, text: $viewModel.message) .textFieldStyle(RoundedBorderTextFieldStyle()) HStack { Button(action: viewModel.sendMessage) { Text(\u0026#34;Send\u0026#34;) } Button(action: viewModel.disconnect) { Text(\u0026#34;Disconnect\u0026#34;) } } } .padding() } } .navigationBarTitle(\u0026#34;Group Chat \\(viewModel.users.count \u0026gt; 0 ? \u0026#34;(\\(viewModel.users.count) connected)\u0026#34; : \u0026#34;\u0026#34;)\u0026#34;) .navigationBarTitleDisplayMode(.inline) .alert(\u0026#34;\\(viewModel.newUser) just joined the chat!\u0026#34;, isPresented: $viewModel.isShowingNewUserAlert) { Button(\u0026#34;OK\u0026#34;, role: .cancel) { viewModel.isShowingNewUserAlert = false } } } } } #Preview { ChatView() } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/building-group-chat-using-websockets/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI never had a chance to work with WebSockets, so I decided to take a look and create a group chat. Here\u0026rsquo;s what I discovered:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTo be able to send and receive messages, you need to create an interface for communication between a server and your application. In my case, I chose \u003ccode\u003esendMessage\u003c/code\u003e and \u003ccode\u003ereceiveMessage\u003c/code\u003e methods.\u003c/li\u003e\n\u003cli\u003eFor the server-side, I chose \u003ccode\u003eNode.js\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFor the iOS application, I chose the \u003ca href=\"https://github.com/socketio/socket.io-client-swift\"\u003eSocket.IO\u003c/a\u003e library.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"implementation\"\u003eImplementation\u003c/h3\u003e\n\u003cp\u003eLet‚Äôs dive deeper into the implementation.\u003c/p\u003e","title":"Building Group Chat using WebSockets"},{"content":"Introduction I find myself fascinated by the idea of creating an app for visionOS where I could possibly display 3D AirPods that I like. Here are a few steps on how you can do the same:\nFirst step The first step that you need to do is to create a visionOS project.\nSecond step The next step would be adding a 3D object to Reality Composer Pro and exporting it as a .usdz file. You can download free 3D objects here. All you need to do to download content is to register on this site.\nThird step The final step would be adding code to display the 3D object. To do that, we need to add Model3D. It helps asynchronously load and display a 3D model.\nimport SwiftUI import RealityKit import RealityKitContent struct AirPodsMaxAnimation: View { var body: some View { NavigationStack { VStack { Model3D(named: \u0026#34;Airpods_Max_Pink\u0026#34;) { model in model .resizable() .aspectRatio(contentMode: .fit) .scaleEffect(0.5) .phaseAnimator([false, true]) { AirPodsMax, threeDYRotate in AirPodsMax .rotation3DEffect(.degrees(threeDYRotate ? 0 : -360 * 5), axis: (x: 0, y: 1, z: 0)) } animation: { threeDYRotate in .linear(duration: 25).repeatForever(autoreverses: false) } } placeholder: { ProgressView() } } .navigationTitle(\u0026#34;Airpods Max Pink\u0026#34;) } } } #Preview(windowStyle: .automatic) { AirPodsMaxAnimation() } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/exploring-visionos/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI find myself fascinated by the idea of creating an app for \u003ccode\u003evisionOS\u003c/code\u003e where I could possibly display 3D AirPods that I like.\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-3215a\" hidden\u003e\n    \u003clabel for=\"zoomCheck-3215a\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.gif#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\nHere are a few steps on how you can do the same:\u003c/p\u003e\n\u003ch3 id=\"first-step\"\u003eFirst step\u003c/h3\u003e\n\u003cp\u003eThe first step that you need to do is to create a \u003ccode\u003evisionOS\u003c/code\u003e project.\u003c/p\u003e\n\u003ch3 id=\"second-step\"\u003eSecond step\u003c/h3\u003e\n\u003cp\u003eThe next step would be adding a 3D object to \u003ccode\u003eReality Composer Pro\u003c/code\u003e and exporting it as a \u003ccode\u003e.usdz\u003c/code\u003e file. You can download free 3D objects \u003ca href=\"https://sketchfab.com/feed\"\u003ehere\u003c/a\u003e. All you need to do to download content is to register on this site.\u003c/p\u003e","title":"Exploring visionOS"},{"content":"Introduction I was searching for an AR implementation of a 3D guitar inside an iOS app. Here\u0026rsquo;s what I discovered:\nFirst Step The first step is not related to building the app. Before that you need to create a project using the Reality Composer Pro app (you can find it through Spotlight search).\nSecond Step After that, you need to visit https://developer.apple.com/augmented-reality/quick-look/ and download one of the USDZ files. In my case, I chose the 3D guitar.\nThird Step Now, you can start diving into AR implementation inside the iOS project:\nYou need to add the Privacy - Camera Usage Description key to be able to use the camera Put your_file_name.usdz into the iOS project Create an ARViewRepresentable struct ARViewRepresentable: UIViewRepresentable { func makeUIView(context: Context) -\u0026gt; some ARView { let arView = ARView(frame: .zero) return arView } func updateUIView(_ uiView: UIViewType, context: Context) { } } Load, and anchor the 3D model func makeUIView(context: Context) -\u0026gt; some ARView { let arView = ARView(frame: .zero) // Load 3D model guard let guitarModelURL = Bundle.main.url(forResource: \u0026#34;fender_stratocaster\u0026#34;, withExtension: \u0026#34;usdz\u0026#34;) else { fatalError(\u0026#34;Failed to load model file.\u0026#34;) } let guitarModel = try! Entity.load(contentsOf: guitarModelURL) // Anchor 3D model let anchorEntity = AnchorEntity(.plane(.horizontal, classification: .any, minimumBounds: .zero)) anchorEntity.addChild(guitarModel) return arView } and finally add it to arView.scene func makeUIView(context: Context) -\u0026gt; some ARView { let arView = ARView(frame: .zero) // Load 3D model guard let guitarModelURL = Bundle.main.url(forResource: \u0026#34;fender_stratocaster\u0026#34;, withExtension: \u0026#34;usdz\u0026#34;) else { fatalError(\u0026#34;Failed to load model file.\u0026#34;) } let guitarModel = try! Entity.load(contentsOf: guitarModelURL) // Anchor 3D model let anchorEntity = AnchorEntity(.plane(.horizontal, classification: .any, minimumBounds: .zero)) anchorEntity.addChild(guitarModel) // Add anchor to scene arView.scene.addAnchor(anchorEntity) return arView } That\u0026rsquo;s it! Play and enjoy üòä\nThank you for reading! üòä ","permalink":"http://localhost:1313/posts/ios-ar-app-experience-3d-guitar/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI was searching for an AR implementation of a 3D guitar inside an iOS app. Here\u0026rsquo;s what I discovered:\u003c/p\u003e\n\u003ch3 id=\"first-step\"\u003eFirst Step\u003c/h3\u003e\n\u003cp\u003eThe first step is not related to building the app.\nBefore that you need to create a project using the \u003ccode\u003eReality Composer Pro\u003c/code\u003e app (you can find it through \u003ccode\u003eSpotlight search\u003c/code\u003e).\u003c/p\u003e\n\u003ch3 id=\"second-step\"\u003eSecond Step\u003c/h3\u003e\n\u003cp\u003eAfter that, you need to visit \u003ca href=\"https://developer.apple.com/augmented-reality/quick-look/\"\u003ehttps://developer.apple.com/augmented-reality/quick-look/\u003c/a\u003e and download one of the \u003ccode\u003eUSDZ\u003c/code\u003e files.\nIn my case, I chose the \u003ca href=\"https://developer.apple.com/augmented-reality/quick-look/models/stratocaster/fender_stratocaster.usdz\"\u003e3D guitar\u003c/a\u003e.\u003c/p\u003e","title":"iOS AR App: Experience 3D Guitar"},{"content":"Introduction I was wondering about how to create movie recommendations, so I decided to take a closer look and find out more about this topic. This is what I found:\nFirst step: You need to create a JSON file with the data that you will use to train the model and define the parameters for training the model.\n[ { \u0026#34;title\u0026#34;: \u0026#34;Avatar\u0026#34;, \u0026#34;year\u0026#34;: \u0026#34;2009\u0026#34;, \u0026#34;rated\u0026#34;: \u0026#34;PG-13\u0026#34;, \u0026#34;released\u0026#34;: \u0026#34;18 Dec 2009\u0026#34;, \u0026#34;runtime\u0026#34;: \u0026#34;162 min\u0026#34;, \u0026#34;genre\u0026#34;: \u0026#34;Action, Adventure, Fantasy\u0026#34;, \u0026#34;director\u0026#34;: \u0026#34;James Cameron\u0026#34;, \u0026#34;writer\u0026#34;: \u0026#34;James Cameron\u0026#34;, \u0026#34;actors\u0026#34;: \u0026#34;Sam Worthington, Zoe Saldana, Sigourney Weaver, Stephen Lang\u0026#34;, \u0026#34;plot\u0026#34;: \u0026#34;A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home.\u0026#34;, \u0026#34;language\u0026#34;: \u0026#34;English, Spanish\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;USA, UK\u0026#34;, \u0026#34;awards\u0026#34;: \u0026#34;Won 3 Oscars. Another 80 wins \u0026amp; 121 nominations.\u0026#34;, \u0026#34;poster\u0026#34;: \u0026#34;https://ia.media-imdb.com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@._V1_SX300.jpg\u0026#34;, \u0026#34;metascore\u0026#34;: \u0026#34;83\u0026#34;, \u0026#34;imdbrating\u0026#34;: \u0026#34;7.9\u0026#34;, \u0026#34;imdbvotes\u0026#34;: \u0026#34;890,617\u0026#34;, \u0026#34;imdbid\u0026#34;: \u0026#34;tt0499549\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;movie\u0026#34;, \u0026#34;response\u0026#34;: \u0026#34;True\u0026#34;, \u0026#34;keywords\u0026#34;: [\u0026#34;alien\u0026#34;, \u0026#34;avatar\u0026#34;, \u0026#34;fantasy world\u0026#34;, \u0026#34;soldier\u0026#34;, \u0026#34;battle\u0026#34;] }, ] When you have created the data, you can proceed to the next step.\nCreating a model with parameters Creating a model with parameters is essential for training. As an example, I chose the following parameters to create more realistic recommendations: director, actors, language, country, metascore, IMDb rating, and IMDb votes.\nstruct Movie: Decodable { var id: String { return imdbid } let title: String let keywords: [String] let director: String let actors: String let language: String let country: String let poster: String let metascore: String let imdbrating: String let imdbvotes: String let imdbid: String } extension Movie: Identifiable, TextImageProviding { var url: URL { return URL(string: poster)! } } When you have created the model, you can proceed to the next step:\nCreating a Recommendations service In this step, it\u0026rsquo;s important to specify the ML model you\u0026rsquo;ll utilize. I chose the MLLinearRegressor model because linear regression computes an output value for a given input value. I selected \u0026lsquo;favorite\u0026rsquo; as the target column for this model to create predictions based on the films I like.\nimport Foundation import TabularData #if canImport(CreateML) import CreateML #endif final class RecommendationService { private let queue = DispatchQueue(label: \u0026#34;com.recommendation-service.queue\u0026#34;, qos: .userInitiated) func computeRecommendations(basedOn items: [FavoriteWrapper\u0026lt;Movie\u0026gt;]) async throws -\u0026gt; [Movie] { return try await withCheckedThrowingContinuation { continuation in queue.async { #if targetEnvironment(simulator) continuation.resume(throwing: NSError(domain: \u0026#34;Simulator Not Supported\u0026#34;, code: -1)) #else let trainingData = items.filter { $0.isFavorite != nil } let trainingDataFrame = self.dataFrame(for: trainingData) let testData = items let testDataFrame = self.dataFrame(for: testData) do { let regressor = try MLLinearRegressor(trainingData: trainingDataFrame, targetColumn: \u0026#34;favorite\u0026#34;) let predictionsColumn = (try regressor.predictions(from: testDataFrame)).compactMap { value in value as? Double } let sorted = zip(testData, predictionsColumn) .sorted { lhs, rhs -\u0026gt; Bool in lhs.1 \u0026gt; rhs.1 } .filter { $0.1 \u0026gt; 0 } .prefix(10) print(sorted.map(\\.1)) let result = sorted.map(\\.0.model) continuation.resume(returning: result) } catch { continuation.resume(throwing: error) } #endif } } } private func dataFrame(for data: [FavoriteWrapper\u0026lt;Movie\u0026gt;]) -\u0026gt; DataFrame { var dataFrame = DataFrame() dataFrame.append( column: Column(name: \u0026#34;keywords\u0026#34;, contents: data.flatMap(\\.model.keywords).joined(separator: \u0026#34;, \u0026#34;)) ) dataFrame.append( column: Column(name: \u0026#34;director\u0026#34;, contents: data.map(\\.model.director)) ) dataFrame.append( column: Column(name: \u0026#34;actors\u0026#34;, contents: data.map(\\.model.actors)) ) dataFrame.append( column: Column(name: \u0026#34;language\u0026#34;, contents: data.map(\\.model.language)) ) dataFrame.append( column: Column(name: \u0026#34;country\u0026#34;, contents: data.map(\\.model.country)) ) dataFrame.append( column: Column\u0026lt;Int\u0026gt;( name: \u0026#34;metascore\u0026#34;, contents: data.map { return Int($0.model.metascore) } ) ) dataFrame.append( column: Column\u0026lt;Double\u0026gt;( name: \u0026#34;imdbrating\u0026#34;, contents: data.map { return Double($0.model.imdbrating) } ) ) dataFrame.append( column: Column(name: \u0026#34;imdbvotes\u0026#34;, contents: data.map(\\.model.imdbvotes)) ) dataFrame.append( column: Column\u0026lt;Int\u0026gt;( name: \u0026#34;favorite\u0026#34;, contents: data.map { if let isFavorite = $0.isFavorite { return isFavorite ? 1 : -1 } else { return 0 } } ) ) return dataFrame } } Once you\u0026rsquo;ve finished with the ML part, proceed to the next step:\nCreating a ViewModel to assemble all components At this stage, you handle user input and recompute recommendations based on user input.\n@MainActor final class MainViewModel: ObservableObject { private var allMovies: [FavoriteWrapper\u0026lt;Movie\u0026gt;] = [] @Published private(set) var movies: [Movie] = [] @Published private(set) var recommendations: [Movie] = [] private let recommendationService: RecommendationService private var recommendationsTask: Task\u0026lt;Void, Never\u0026gt;? init(recommendationService: RecommendationService = RecommendationService()) { self.recommendationService = recommendationService } func loadAllMovies() async { guard let url = Bundle.main.url(forResource: \u0026#34;movies\u0026#34;, withExtension: \u0026#34;json\u0026#34;) else { return } do { let data = try Data(contentsOf: url) allMovies = (try JSONDecoder().decode([Movie].self, from: data)).shuffled().map { FavoriteWrapper(model: $0) } movies = allMovies.map(\\.model) } catch { print(error.localizedDescription) } } func didRemove(_ item: Movie, isLiked: Bool) { movies.removeAll { $0.id == item.id } if let index = allMovies.firstIndex(where: { $0.model.id == item.id }) { allMovies[index] = FavoriteWrapper(model: item, isFavorite: isLiked) } recommendationsTask?.cancel() recommendationsTask = Task { do { let result = try await recommendationService.computeRecommendations(basedOn: allMovies) if !Task.isCancelled { recommendations = result } } catch { print(error.localizedDescription) } } } func resetUserChoices() { movies = allMovies.map(\\.model) recommendations = [] } } The final step The final step is to create the UI and connect it with the ViewModel.\nimport SwiftUI struct ContentView: View { @StateObject private var viewModel: MainViewModel init() { _viewModel = StateObject(wrappedValue: MainViewModel()) } var body: some View { NavigationView { ScrollView { VStack(alignment: .leading) { SectionTitleView(text: \u0026#34;Swipe to Like or Dislike\u0026#34;) if viewModel.movies.isEmpty { HStack { Spacer() VStack { Text(\u0026#34;All Done!\u0026#34;) .multilineTextAlignment(.center) .font(.callout) .foregroundColor(.secondary) Button(\u0026#34;Try Again\u0026#34;) { withAnimation { viewModel.resetUserChoices() } } .font(.headline) .buttonStyle(.borderedProminent) } Spacer() } .padding(.horizontal) .padding(.vertical, 32) } else { CardsStackView(models: viewModel.movies) { item, isLiked in withAnimation(.spring()) { viewModel.didRemove(item, isLiked: isLiked) } } .zIndex(1) } RecommendationsView(recommendations: viewModel.recommendations) } } .navigationTitle(\u0026#34;Tmovie¬¥inder!\u0026#34;) .task { await viewModel.loadAllMovies() } } .navigationViewStyle(.stack) } } Resources üîó GitHub project üì• Download materials Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/building-movie-recommendations-using-ml/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eI was wondering about how to create movie recommendations, so I decided to take a closer look and find out more about this topic. This is what I found:\u003c/p\u003e\n\u003ch3 id=\"first-step\"\u003eFirst step:\u003c/h3\u003e\n\u003cp\u003eYou need to create a JSON file with the data that you will use to train the model and define the parameters for training the model.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;title\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Avatar\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;year\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;2009\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;rated\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;PG-13\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;released\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;18 Dec 2009\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;runtime\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;162 min\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;genre\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Action, Adventure, Fantasy\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;director\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;James Cameron\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;writer\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;James Cameron\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;actors\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Sam Worthington, Zoe Saldana, Sigourney Weaver, Stephen Lang\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;plot\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;language\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;English, Spanish\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;country\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;USA, UK\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;awards\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Won 3 Oscars. Another 80 wins \u0026amp; 121 nominations.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;poster\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;https://ia.media-imdb.com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@._V1_SX300.jpg\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;metascore\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;83\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;imdbrating\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;7.9\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;imdbvotes\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;890,617\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;imdbid\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;tt0499549\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;movie\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;response\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;True\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;keywords\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;alien\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;avatar\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;fantasy world\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;soldier\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;battle\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWhen you have created the data, you can proceed to the next step.\u003c/p\u003e","title":"Building movie recommendations using ML"},{"content":"Introduction If you\u0026rsquo;re wondering how to test an Xcode project using GitHub Actions, here are a few steps:\nFirst, you need to create a .github/workflows folder with a CI.yml file inside your project directory. Next, you need to add configuration to the CI.yml file. name: CI on: push: branches: - main jobs: build: runs-on: macos-14 steps: - name: Checkout code uses: actions/checkout@v4 - name: Set up Xcode version run: sudo xcode-select -s /Applications/Xcode_15.3.app/Contents/Developer - name: Install xcpretty run: gem install xcpretty - name: Test project run: xcodebuild -project /Users/runner/work/YourProjectName/YourProjectName/YourProjectName/YourProjectName.xcodeproj -scheme YourSchemeName -destination \u0026#39;platform=iOS Simulator,OS=17.4,name=iPhone 15 Pro\u0026#39; clean build test | xcpretty Caveats If you don\u0026rsquo;t specify the path to the Xcode project, you will receive an error like this: xcodebuild: error: ‚ÄòYourProjectName.xcodeproj' does not exist.\nYou can debug project directory by adding this line to your config:\n- name: Debug Directory Contents run: ls -la /Users/runner/work/YourProjectName/YourProjectName Thank you for reading!\n","permalink":"http://localhost:1313/posts/testing-xcode-project-using-github-actions/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eIf you\u0026rsquo;re wondering how to test an Xcode project using GitHub Actions, here are a few steps:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, you need to create a \u003ccode\u003e.github/workflows\u003c/code\u003e folder with a \u003ccode\u003eCI.yml\u003c/code\u003e file inside your project directory.\u003c/li\u003e\n\u003cli\u003eNext, you need to add configuration to the \u003ccode\u003eCI.yml\u003c/code\u003e file.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCI\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eon\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ebranches\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003emain\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ejobs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eruns-on\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emacos-14\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003esteps\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCheckout code\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003euses\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eactions/checkout@v4\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSet up Xcode version\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esudo xcode-select -s /Applications/Xcode_15.3.app/Contents/Developer\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eInstall xcpretty\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003egem install xcpretty\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eTest project\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003excodebuild -project /Users/runner/work/YourProjectName/YourProjectName/YourProjectName/YourProjectName.xcodeproj -scheme YourSchemeName -destination \u0026#39;platform=iOS Simulator,OS=17.4,name=iPhone 15 Pro\u0026#39; clean build test | xcpretty      \u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"caveats\"\u003eCaveats\u003c/h3\u003e\n\u003cp\u003eIf you don\u0026rsquo;t specify the path to the Xcode project, you will receive an error like this: \u003ccode\u003excodebuild: error: ‚ÄòYourProjectName.xcodeproj' does not exist\u003c/code\u003e.\u003c/p\u003e","title":"Testing Xcode project using Github Actions"},{"content":"Introduction If you\u0026rsquo;re wondering how to build an Xcode project using GitHub Actions, here are a few steps:\nFirst, you need to create a .github/workflows folder with a CI.yml file inside your project directory. Next, you need to add configuration to the CI.yml file. name: CI on: push: branches: - main jobs: build: runs-on: macos-14 steps: - name: Checkout code uses: actions/checkout@v4 - name: Set up Xcode version run: sudo xcode-select -s /Applications/Xcode_15.3.app/Contents/Developer - name: Install xcpretty run: gem install xcpretty - name: Build project run: xcodebuild -project /Users/runner/work/YourProjectName/YourProjectName/YourProjectName/YourProjectName.xcodeproj -scheme YourSchemeName -sdk iphonesimulator -destination \u0026#39;platform=iOS Simulator,name=iPhone 15 Pro\u0026#39; clean build | xcpretty Caveats If you don\u0026rsquo;t specify the path to the Xcode project, you will receive an error like this: xcodebuild: error: ‚ÄòYourProjectName.xcodeproj' does not exist.\nYou can debug project directory by adding this line to your config:\n- name: Debug Directory Contents run: ls -la /Users/runner/work/YourProjectName/YourProjectName Thank you for reading!\n","permalink":"http://localhost:1313/posts/building-xcode-project-using-github-actions/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eIf you\u0026rsquo;re wondering how to build an Xcode project using GitHub Actions, here are a few steps:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, you need to create a \u003ccode\u003e.github/workflows\u003c/code\u003e folder with a \u003ccode\u003eCI.yml\u003c/code\u003e file inside your project directory.\u003c/li\u003e\n\u003cli\u003eNext, you need to add configuration to the \u003ccode\u003eCI.yml\u003c/code\u003e file.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCI\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eon\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ebranches\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003emain\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ejobs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eruns-on\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emacos-14\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003esteps\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCheckout code\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003euses\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eactions/checkout@v4\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSet up Xcode version\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esudo xcode-select -s /Applications/Xcode_15.3.app/Contents/Developer\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eInstall xcpretty\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003egem install xcpretty\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eBuild project\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003excodebuild -project /Users/runner/work/YourProjectName/YourProjectName/YourProjectName/YourProjectName.xcodeproj -scheme YourSchemeName -sdk iphonesimulator -destination \u0026#39;platform=iOS Simulator,name=iPhone 15 Pro\u0026#39; clean build | xcpretty\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"caveats\"\u003eCaveats\u003c/h3\u003e\n\u003cp\u003eIf you don\u0026rsquo;t specify the path to the Xcode project, you will receive an error like this: \u003ccode\u003excodebuild: error: ‚ÄòYourProjectName.xcodeproj' does not exist\u003c/code\u003e.\u003c/p\u003e","title":"Building Xcode project using Github Actions"},{"content":"Introduction You can easily deliver an iOS app in two ways: through beta and release lanes.\nThe First Way - TestFlight By creating a beta lane inside the Fastfile. It utilizes:\nbuild_app: To easily build and sign your app (via gym). pilot: Makes it easier to manage your app on Apple‚Äôs TestFlight. lane :beta do build_app(scheme: \u0026#34;YourScheme\u0026#34;) pilot end To run Fastlane:\nfastlane beta Attention Before proceeding, you need to have the ipa or pkg file generated.\nThe Second Way - App Store Connect By creating a release lane inside the Fastfile. It utilizes:\ngym: To build and package iOS apps for you. deliver: To upload screenshots, metadata, and binaries to App Store Connect. lane :release do gym # Builds the app deliver # Uploads the app to App Store Connect end To run Fastlane:\nfastlane release If you haven\u0026rsquo;t installed Fastlane yet, here are the steps: Outline of the Process\nInstall Fastlane: You can do so using RubyGems, which is the Ruby package manager: brew install fastlane Navigate to Project Directory: Open Terminal and navigate to the directory containing your Xcode project. Initialize Fastlane (Optional): If you haven\u0026rsquo;t initialized Fastlane in your project yet, you can do so by running: fastlane init ","permalink":"http://localhost:1313/posts/delivering-ios-app-using-fastlane/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eYou can easily deliver an iOS app in two ways: through \u003ccode\u003ebeta\u003c/code\u003e and \u003ccode\u003erelease\u003c/code\u003e lanes.\u003c/p\u003e\n\u003ch3 id=\"the-first-way---testflight\"\u003eThe First Way - TestFlight\u003c/h3\u003e\n\u003cp\u003eBy creating a \u003ccode\u003ebeta\u003c/code\u003e \u003ccode\u003elane\u003c/code\u003e inside the \u003ccode\u003eFastfile\u003c/code\u003e. It utilizes:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ebuild_app\u003c/code\u003e: To easily build and sign your app (via \u003ccode\u003egym\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epilot\u003c/code\u003e: Makes it easier to manage your app on Apple‚Äôs \u003ccode\u003eTestFlight\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-ruby\" data-lang=\"ruby\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003elane\u003c/span\u003e \u003cspan class=\"ss\"\u003e:beta\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003ebuild_app\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003escheme\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;YourScheme\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003epilot\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo run Fastlane:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efastlane beta\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"attention\"\u003eAttention\u003c/h3\u003e\n\u003cp\u003eBefore proceeding, you need to have the \u003ccode\u003eipa\u003c/code\u003e or \u003ccode\u003epkg\u003c/code\u003e file generated.\u003c/p\u003e","title":"Delivering iOS app using Fastlane"},{"content":"Introduction When you are working on different projects sometimes you need to use different IDE‚Äôs. You need to find a way to archive a project in the fastest way.\nOne of such ways is by using the xcodebuild archive command Basic outline of the process Open Terminal: Open the Terminal application on your Mac. Navigate to Project Directory: Use the cd command to navigate to the directory containing your Xcode project. Run xcodebuild archive: Once you\u0026rsquo;re in the project directory, you can run xcodebuild archive with the appropriate parameters to build your project. Example: xcodebuild archive -scheme YourSchemeName -archivePath ~/Desktop/YourAppName.xcarchive Another way is by integrating fastlane into your workflow: Outline of the process Install Fastlane: If you haven\u0026rsquo;t already installed Fastlane, you can do so using RubyGems, which is the Ruby package manager:\nbrew install fastlane Navigate to Project Directory: Open Terminal and navigate to the directory containing your Xcode project. Initialize Fastlane (Optional): If you haven\u0026rsquo;t initialized Fastlane in your project yet, you can do so by running:\nfastlane init Create a lane for archiving: Open your Fastfile located in the fastlane directory of your project, and add a new lane for archiving:\nlane :archive do gym( scheme: \u0026#34;YourSchemeName\u0026#34;, output_directory: \u0026#34;/path/to/your/archive/directory\u0026#34;, output_name: \u0026#34;YourAppName\u0026#34; ) end Run the archive lane: Once you\u0026rsquo;ve defined the archive lane, you can run it using the following command:\nfastlane archive ","permalink":"http://localhost:1313/posts/archiving-xcode-project-using-the-cli/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eWhen you are working on different projects  sometimes  you need to use different  IDE‚Äôs. You need to find a way to archive a project in the fastest way.\u003c/p\u003e\n\u003ch3 id=\"one-of-such-ways-is-by-using-the-xcodebuild-archive-command\"\u003eOne of such ways is by using the \u003ccode\u003excodebuild archive\u003c/code\u003e command\u003c/h3\u003e\n\u003ch4 id=\"basic-outline-of-the-process\"\u003eBasic outline of the process\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eOpen Terminal\u003c/strong\u003e: Open the Terminal application on your Mac.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eNavigate to Project Directory\u003c/strong\u003e: Use the cd command to navigate to the directory containing your Xcode project.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRun\u003c/strong\u003e \u003ccode\u003excodebuild archive\u003c/code\u003e: Once you\u0026rsquo;re in the project directory, you can run \u003ccode\u003excodebuild archive\u003c/code\u003e with the appropriate parameters to build your project.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"example\"\u003eExample:\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003excodebuild archive -scheme YourSchemeName -archivePath ~/Desktop/YourAppName.xcarchive\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"another-way-is-by-integrating-fastlanehttpsfastlanetools-into-your-workflow\"\u003eAnother way is by integrating \u003ca href=\"https://fastlane.tools/\"\u003efastlane\u003c/a\u003e into your workflow:\u003c/h3\u003e\n\u003ch4 id=\"outline-of-the-process\"\u003eOutline of the process\u003c/h4\u003e\n\u003cp\u003e\u003cstrong\u003eInstall Fastlane\u003c/strong\u003e: If you haven\u0026rsquo;t already installed Fastlane, you can do so using RubyGems, which is the Ruby package manager:\u003c/p\u003e","title":"Archiving Xcode project using the CLI"},{"content":"Introduction When you are working on different projects sometimes you need to use different IDE‚Äôs. You need to find a way to test a project in the fastest way.\nOne of such ways is by using the xcodebuild command Basic outline of the process Open Terminal: Open the Terminal application on your Mac. Navigate to Project Directory: Use the cd command to navigate to the directory containing your Xcode project. Run xcodebuild: Once you\u0026rsquo;re in the project directory, you can run xcodebuild with the appropriate parameters to build your project. Example: xcodebuild -project YourProject.xcodeproj -scheme YourSchemeName test Another way is by integrating fastlane into your workflow: Outline of the process Install Fastlane: If you haven\u0026rsquo;t already installed Fastlane, you can do so using RubyGems, which is the Ruby package manager:\nbrew install fastlane Navigate to Project Directory: Open Terminal and navigate to the directory containing your Xcode project. Initialize Fastlane (Optional): If you haven\u0026rsquo;t initialized Fastlane in your project yet, you can do so by running:\nfastlane init Define a Lane for Testing: Open your Fastfile and define a lane for running tests. Here\u0026rsquo;s a basic example:\nlane :run_tests do scan(scheme: \u0026#34;YourSchemeName\u0026#34;) end Run Tests Using Fastlane: You can now run your tests using the lane you defined. In the terminal, navigate to your project directory and run:\nfastlane run_tests Testing a project through a project generation tools If you are testing a project through a project generation tool like tuist you do not need anything that was mentioned above because it already has build-in commands:\ntuist test YourSchemeName ","permalink":"http://localhost:1313/posts/testing-xcode-project-using-the-cli/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eWhen you are working on different projects  sometimes  you need to use different  IDE‚Äôs. You need to find a way to test a project in the fastest way.\u003c/p\u003e\n\u003ch3 id=\"one-of-such-ways-is-by-using-the-xcodebuild-command\"\u003eOne of such ways is by using the \u003ccode\u003excodebuild\u003c/code\u003e command\u003c/h3\u003e\n\u003ch4 id=\"basic-outline-of-the-process\"\u003eBasic outline of the process\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eOpen Terminal\u003c/strong\u003e: Open the Terminal application on your Mac.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eNavigate to Project Directory\u003c/strong\u003e: Use the cd command to navigate to the directory containing your Xcode project.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRun\u003c/strong\u003e \u003ccode\u003excodebuild\u003c/code\u003e: Once you\u0026rsquo;re in the project directory, you can run \u003ccode\u003excodebuild\u003c/code\u003e with the appropriate parameters to build your project.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"example\"\u003eExample:\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003excodebuild -project YourProject.xcodeproj -scheme YourSchemeName \u003cspan class=\"nb\"\u003etest\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"another-way-is-by-integrating-fastlanehttpsfastlanetools-into-your-workflow\"\u003eAnother way is by integrating \u003ca href=\"https://fastlane.tools/\"\u003efastlane\u003c/a\u003e into your workflow:\u003c/h3\u003e\n\u003ch4 id=\"outline-of-the-process\"\u003eOutline of the process\u003c/h4\u003e\n\u003cp\u003e\u003cstrong\u003eInstall Fastlane\u003c/strong\u003e: If you haven\u0026rsquo;t already installed Fastlane, you can do so using RubyGems, which is the Ruby package manager:\u003c/p\u003e","title":"Testing Xcode project using the CLI"},{"content":"Introduction When you are working on different projects sometimes you need to use different IDE‚Äôs. You need to find a way to build a project in the fastest way.\nOne of such ways is by using the xcodebuild command Basic outline of the process Open Terminal: Open the Terminal application on your Mac. Navigate to Project Directory: Use the cd command to navigate to the directory containing your Xcode project. Run xcodebuild: Once you\u0026rsquo;re in the project directory, you can run xcodebuild with the appropriate parameters to build your project. Example: xcodebuild -project YourProjectName.xcodeproj -scheme YourSchemeName Another way is by integrating fastlane into your workflow: Outline of the process Install Fastlane: If you haven\u0026rsquo;t already installed Fastlane, you can do so using RubyGems, which is the Ruby package manager:\nbrew install fastlane Navigate to Project Directory: Open Terminal and navigate to the directory containing your Xcode project. Initialize Fastlane (Optional): If you haven\u0026rsquo;t initialized Fastlane in your project yet, you can do so by running:\nfastlane init Build with Fastlane: Once Fastlane is set up, you can use it to build your Xcode project. Fastlane provides a lane named build_app for building your app. You can run this lane with the following command:\nfastlane build_app Building a project through a project generation tools If you are building a project through a project generation tool like tuist you do not need anything that was mentioned above because it already has build-in commands tuist build.\n","permalink":"http://localhost:1313/posts/building-xcode-project-using-the-cli/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eWhen you are working on different projects  sometimes  you need to use different  IDE‚Äôs. You need to find a way to build a project in the fastest way.\u003c/p\u003e\n\u003ch3 id=\"one-of-such-ways-is-by-using-the-xcodebuild-command\"\u003eOne of such ways is by using the \u003ccode\u003excodebuild\u003c/code\u003e command\u003c/h3\u003e\n\u003ch4 id=\"basic-outline-of-the-process\"\u003eBasic outline of the process\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eOpen Terminal\u003c/strong\u003e: Open the Terminal application on your Mac.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eNavigate to Project Directory\u003c/strong\u003e: Use the cd command to navigate to the directory containing your Xcode project.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRun\u003c/strong\u003e \u003ccode\u003excodebuild\u003c/code\u003e: Once you\u0026rsquo;re in the project directory, you can run \u003ccode\u003excodebuild\u003c/code\u003e with the appropriate parameters to build your project.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"example\"\u003eExample:\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003excodebuild -project YourProjectName.xcodeproj -scheme YourSchemeName\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"another-way-is-by-integrating-fastlanehttpsfastlanetools-into-your-workflow\"\u003eAnother way is by integrating \u003ca href=\"https://fastlane.tools/\"\u003efastlane\u003c/a\u003e into your workflow:\u003c/h3\u003e\n\u003ch4 id=\"outline-of-the-process\"\u003eOutline of the process\u003c/h4\u003e\n\u003cp\u003e\u003cstrong\u003eInstall Fastlane\u003c/strong\u003e: If you haven\u0026rsquo;t already installed Fastlane, you can do so using RubyGems, which is the Ruby package manager:\u003c/p\u003e","title":"Building Xcode project using the CLI"},{"content":"What is a Visitor Pattern? The Visitor Pattern helps add new capabilities to a composite of objects.\nSource\nWhat problems does it solve? The Visitor Pattern helps solve following problems:\nSeparation of Concerns: The Visitor Pattern separates algorithms from the objects on which they operate. This allows for clean code organization by keeping algorithms and operations separate from the data structures they operate on. Extensibility: It allows you to add new operations to existing object structures without modifying those structures. This is especially useful when dealing with complex object hierarchies where adding new functionality directly to the classes would lead to code bloat and tight coupling. Traversal of Object Structures: It provides a way to traverse complex object structures while performing some action on each element of the structure. This is particularly useful in scenarios where you need to process every element of a data structure in a specific order or with a specific algorithm. Real-world code example // Element protocol representing the items on the menu protocol MenuItem { func accept(visitor: OrderVisitor) } // Concrete item types class Coffee: MenuItem { let name: String let price: Double init(name: String, price: Double) { self.name = name self.price = price } func accept(visitor: OrderVisitor) { visitor.visit(self) } } class Tea: MenuItem { let name: String let price: Double init(name: String, price: Double) { self.name = name self.price = price } func accept(visitor: OrderVisitor) { visitor.visit(self) } } class Pastry: MenuItem { let name: String let price: Double init(name: String, price: Double) { self.name = name self.price = price } func accept(visitor: OrderVisitor) { visitor.visit(self) } } // Visitor protocol defining the operations to be performed on menu items protocol OrderVisitor { func visit(_ item: Coffee) func visit(_ item: Tea) func visit(_ item: Pastry) } // Concrete visitor implementing operations on menu items class TotalCostVisitor: OrderVisitor { var totalCost = 0.0 func visit(_ item: Coffee) { totalCost += item.price } func visit(_ item: Tea) { totalCost += item.price } func visit(_ item: Pastry) { totalCost += item.price } } class ItemDetailsVisitor: OrderVisitor { var details = \u0026#34;\u0026#34; func visit(_ item: Coffee) { details += \u0026#34;Coffee: \\(item.name), Price: $\\(item.price)\\n\u0026#34; } func visit(_ item: Tea) { details += \u0026#34;Tea: \\(item.name), Price: $\\(item.price)\\n\u0026#34; } func visit(_ item: Pastry) { details += \u0026#34;Pastry: \\(item.name), Price: $\\(item.price)\\n\u0026#34; } } // Example usage let items: [MenuItem] = [Coffee(name: \u0026#34;Espresso\u0026#34;, price: 2.5), Tea(name: \u0026#34;Green Tea\u0026#34;, price: 2.0), Pastry(name: \u0026#34;Croissant\u0026#34;, price: 3.0)] let totalCostVisitor = TotalCostVisitor() for item in items { item.accept(visitor: totalCostVisitor) } print(\u0026#34;Total cost of the order: $\\(totalCostVisitor.totalCost)\u0026#34;) let itemDetailsVisitor = ItemDetailsVisitor() for item in items { item.accept(visitor: itemDetailsVisitor) } print(\u0026#34;Order details:\u0026#34;) print(itemDetailsVisitor.details) ","permalink":"http://localhost:1313/posts/the-visitor-pattern/","summary":"\u003ch3 id=\"what-is-a-visitor-pattern\"\u003eWhat is a Visitor Pattern?\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe Visitor Pattern helps add new capabilities to a composite of objects.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-3a9c2\" hidden\u003e\n    \u003clabel for=\"zoomCheck-3a9c2\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/1.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\n\u003cstrong\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Visitor_pattern#/media/File:Visitor_design_pattern.svg\"\u003eSource\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"what-problems-does-it-solve\"\u003eWhat problems does it solve?\u003c/h3\u003e\n\u003cp\u003eThe Visitor Pattern helps solve following problems:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSeparation of Concerns\u003c/strong\u003e: The Visitor Pattern separates algorithms from the objects on which they operate. This allows for clean code organization by keeping algorithms and operations separate from the data structures they operate on.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eExtensibility\u003c/strong\u003e: It allows you to add new operations to existing object structures without modifying those structures. This is especially useful when dealing with complex object hierarchies where adding new functionality directly to the classes would lead to code bloat and tight coupling.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTraversal of Object Structures\u003c/strong\u003e: It provides a way to traverse complex object structures while performing some action on each element of the structure. This is particularly useful in scenarios where you need to process every element of a data structure in a specific order or with a specific algorithm.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"real-world-code-example\"\u003eReal-world code example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Element protocol representing the items on the menu\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"nc\"\u003eMenuItem\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eaccept\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrderVisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Concrete item types\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCoffee\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eMenuItem\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprice\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eaccept\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrderVisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003evisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evisit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTea\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eMenuItem\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprice\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eaccept\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrderVisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003evisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evisit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePastry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eMenuItem\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprice\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eaccept\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrderVisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003evisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evisit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Visitor protocol defining the operations to be performed on menu items\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"nc\"\u003eOrderVisitor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003evisit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCoffee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003evisit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003evisit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ePastry\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Concrete visitor implementing operations on menu items\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTotalCostVisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrderVisitor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003etotalCost\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003evisit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCoffee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003etotalCost\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003evisit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003etotalCost\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003evisit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ePastry\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003etotalCost\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eItemDetailsVisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eOrderVisitor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003edetails\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003evisit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCoffee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003edetails\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Coffee: \u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e, Price: $\u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003evisit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003edetails\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Tea: \u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e, Price: $\u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003evisit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ePastry\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003edetails\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Pastry: \u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e, Price: $\u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Example usage\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eMenuItem\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eCoffee\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Espresso\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e2.5\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eTea\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Green Tea\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e2.0\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ePastry\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Croissant\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.0\u003c/span\u003e\u003cspan class=\"p\"\u003e)]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003etotalCostVisitor\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTotalCostVisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eitems\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccept\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003etotalCostVisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Total cost of the order: $\u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003etotalCostVisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etotalCost\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eitemDetailsVisitor\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eItemDetailsVisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eitems\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaccept\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eitemDetailsVisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Order details:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitemDetailsVisitor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edetails\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"The Visitor Pattern"},{"content":"What is a Memento Pattern? The Memento Pattern helps return an object to one of its previous states; for instance, if the user requests an ‚Äúundo‚Äù operation.\nSource\nWhat problems does it solve? The Memento Pattern helps solve following problems:\nUndo/Redo Functionality: Memento allows you to capture an object‚Äôs state at a specific point in time and store it externally. This enables you to implement undo/redo functionality by restoring the object to its previous state. Checkpointing: In applications where users need to save progress or create checkpoints (such as in games or long processes), the Memento Pattern allows you to save the state of an object at various intervals so that users can return to those points later. Real-world code example // Memento: Represents the state of the TextEditor struct TextEditorMemento { let text: String } // Originator: Creates and stores states in Memento objects class TextEditor { private var text: String = \u0026#34;\u0026#34; func setText(_ text: String) { self.text = text } func getText() -\u0026gt; String { return text } func save() -\u0026gt; TextEditorMemento { return TextEditorMemento(text: text) } func restore(fromMemento memento: TextEditorMemento) { self.text = memento.text } } // Caretaker: Manages the mementos class TextEditorHistory { private var history: [TextEditorMemento] = [] private let editor: TextEditor init(editor: TextEditor) { self.editor = editor } func save() { let snapshot = editor.save() history.append(snapshot) } func undo() { guard let lastSnapshot = history.popLast() else { print(\u0026#34;Nothing to undo.\u0026#34;) return } editor.restore(fromMemento: lastSnapshot) } func printHistory() { print(\u0026#34;Text Editor History:\u0026#34;) for (index, snapshot) in history.enumerated() { print(\u0026#34;Step \\(index + 1): \\(snapshot.text)\u0026#34;) } print(\u0026#34;Current text: \\(editor.getText())\u0026#34;) } } // Example usage let textEditor = TextEditor() let history = TextEditorHistory(editor: textEditor) textEditor.setText(\u0026#34;Hello, World!\u0026#34;) history.save() textEditor.setText(\u0026#34;This is a Swift example.\u0026#34;) history.save() textEditor.setText(\u0026#34;Using Memento Pattern.\u0026#34;) history.save() history.printHistory() history.undo() print(\u0026#34;After Undo:\u0026#34;) history.printHistory() Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/the-memento-pattern/","summary":"\u003ch3 id=\"what-is-a-memento-pattern\"\u003eWhat is a Memento Pattern?\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe Memento Pattern helps return an object to one of its previous states; for instance, if the user requests an ‚Äúundo‚Äù operation.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-35972\" hidden\u003e\n    \u003clabel for=\"zoomCheck-35972\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\n\u003ca href=\"https://www.learncsdesign.com/learn-the-memento-design-pattern/\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"what-problems-does-it-solve\"\u003eWhat problems does it solve?\u003c/h3\u003e\n\u003cp\u003eThe Memento Pattern helps solve following problems:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eUndo/Redo Functionality\u003c/strong\u003e: Memento allows you to capture an object‚Äôs state at a specific point in time and store it externally. This enables you to implement undo/redo functionality by restoring the object to its previous state.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCheckpointing\u003c/strong\u003e: In applications where users need to save progress or create checkpoints (such as in games or long processes), the Memento Pattern allows you to save the state of an object at various intervals so that users can return to those points later.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"real-world-code-example\"\u003eReal-world code example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Memento: Represents the state of the TextEditor\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eTextEditorMemento\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Originator: Creates and stores states in Memento objects\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTextEditor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003esetText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etext\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003egetText\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003etext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eTextEditorMemento\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eTextEditorMemento\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003erestore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efromMemento\u003c/span\u003e \u003cspan class=\"n\"\u003ememento\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTextEditorMemento\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etext\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ememento\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Caretaker: Manages the mementos\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTextEditorHistory\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ehistory\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eTextEditorMemento\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eeditor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTextEditor\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeditor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTextEditor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eeditor\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eeditor\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003esnapshot\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eeditor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ehistory\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esnapshot\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eundo\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eguard\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003elastSnapshot\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehistory\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epopLast\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Nothing to undo.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eeditor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erestore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efromMemento\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003elastSnapshot\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eprintHistory\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Text Editor History:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esnapshot\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ehistory\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenumerated\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Step \u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e: \u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003esnapshot\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etext\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Current text: \u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003eeditor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egetText\u003c/span\u003e\u003cspan class=\"si\"\u003e())\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Example usage\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003etextEditor\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTextEditor\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003ehistory\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTextEditorHistory\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeditor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003etextEditor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etextEditor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello, World!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ehistory\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etextEditor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;This is a Swift example.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ehistory\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etextEditor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Using Memento Pattern.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ehistory\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ehistory\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprintHistory\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ehistory\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eundo\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;After Undo:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ehistory\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprintHistory\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"thank-you-for-reading-\"\u003eThank you for reading! üòä\u003c/h4\u003e","title":"The Memento Pattern"},{"content":"What is an Interpreter Pattern? The Interpreter Pattern helps implement a simple language and defines a class based representation for its grammar along with an interpreter to interpret its sentences.\nSource\nWhat problems does it solve? The Interpreter Pattern helps solve following problems:\nLanguage Interpretation: When you have a language or syntax that needs to be interpreted, such as mathematical expressions, regular expressions, or domain-specific languages (DSLs), the Interpreter Pattern helps in implementing the logic to interpret and execute these expressions. Extensibility: The Interpreter Pattern allows for easy addition of new grammar rules or language constructs without modifying the core interpreter logic. This promotes extensibility, enabling the interpreter to support new features or languages with minimal changes. Separation of Concerns: It separates the grammar definition from the interpretation logic. This separation of concerns makes the codebase modular and easier to maintain. Changes to the grammar or language rules do not affect the interpretation logic, and vice versa. Real-world code example // Define the protocol for the expression protocol Expression { func interpret() -\u0026gt; Int } // Concrete expression for a number class NumberExpression: Expression { private var value: Int init(_ value: Int) { self.value = value } func interpret() -\u0026gt; Int { return value } } // Concrete expression for addition class AdditionExpression: Expression { private var left: Expression private var right: Expression init(_ left: Expression, _ right: Expression) { self.left = left self.right = right } func interpret() -\u0026gt; Int { return left.interpret() + right.interpret() } } // Concrete expression for subtraction class SubtractionExpression: Expression { private var left: Expression private var right: Expression init(_ left: Expression, _ right: Expression) { self.left = left self.right = right } func interpret() -\u0026gt; Int { return left.interpret() - right.interpret() } } // Concrete expression for multiplication class MultiplicationExpression: Expression { private var left: Expression private var right: Expression init(_ left: Expression, _ right: Expression) { self.left = left self.right = right } func interpret() -\u0026gt; Int { return left.interpret() * right.interpret() } } // Concrete expression for division class DivisionExpression: Expression { private var left: Expression private var right: Expression init(_ left: Expression, _ right: Expression) { self.left = left self.right = right } func interpret() -\u0026gt; Int { let divisor = right.interpret() if divisor != 0 { return left.interpret() / divisor } else { // Handle division by zero error fatalError(\u0026#34;Division by zero\u0026#34;) } } } // Usage let expression = AdditionExpression( MultiplicationExpression(NumberExpression(2), NumberExpression(3)), DivisionExpression(NumberExpression(10), NumberExpression(5)) ) // Interpret the expression let result = expression.interpret() print(\u0026#34;Result: \\(result)\u0026#34;) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/the-interpreter-pattern/","summary":"\u003ch3 id=\"what-is-an-interpreter-pattern\"\u003eWhat is an Interpreter Pattern?\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe Interpreter Pattern helps implement a simple language and defines a class based representation for its grammar along with an interpreter to interpret its sentences.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-35972\" hidden\u003e\n    \u003clabel for=\"zoomCheck-35972\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\n\u003ca href=\"https://www.cs.unc.edu/~stotts/GOF/hires/pat5cfso.htm\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"what-problems-does-it-solve\"\u003eWhat problems does it solve?\u003c/h3\u003e\n\u003cp\u003eThe Interpreter Pattern helps solve following problems:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eLanguage Interpretation\u003c/strong\u003e: When you have a language or syntax that needs to be interpreted, such as mathematical expressions, regular expressions, or domain-specific languages (DSLs), the Interpreter Pattern helps in implementing the logic to interpret and execute these expressions.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eExtensibility\u003c/strong\u003e: The Interpreter Pattern allows for easy addition of new grammar rules or language constructs without modifying the core interpreter logic. This promotes extensibility, enabling the interpreter to support new features or languages with minimal changes.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSeparation of Concerns\u003c/strong\u003e: It separates the grammar definition from the interpretation logic. This separation of concerns makes the codebase modular and easier to maintain. Changes to the grammar or language rules do not affect the interpretation logic, and vice versa.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"real-world-code-example\"\u003eReal-world code example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Define the protocol for the expression\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"nc\"\u003eExpression\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003einterpret\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Concrete expression for a number\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eNumberExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003einterpret\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Concrete expression for addition\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAdditionExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003eright\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003einterpret\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einterpret\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einterpret\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Concrete expression for subtraction\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSubtractionExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003eright\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003einterpret\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einterpret\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einterpret\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Concrete expression for multiplication\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMultiplicationExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003eright\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003einterpret\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einterpret\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einterpret\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Concrete expression for division\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDivisionExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eleft\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"kr\"\u003eright\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003eright\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003einterpret\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003edivisor\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einterpret\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003edivisor\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kr\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einterpret\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"n\"\u003edivisor\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"c1\"\u003e// Handle division by zero error\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003efatalError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Division by zero\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Usage\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eexpression\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eAdditionExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eMultiplicationExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eNumberExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eNumberExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eDivisionExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eNumberExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eNumberExpression\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Interpret the expression\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eresult\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eexpression\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einterpret\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Result: \u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"thank-you-for-reading-\"\u003eThank you for reading! üòä\u003c/h4\u003e","title":"The Interpreter Pattern"},{"content":"What is a Flyweight Pattern? The Flyweight Pattern refers to an object that minimizes memory usage by sharing some of its data with other similar objects.\nSource\nWhat problems does it solve? The Flyweight Pattern helps solve following problems:\nLarge Memory Footprint: When dealing with a large number of objects, especially if these objects share a significant amount of common state, traditional object creation can lead to excessive memory consumption. The Flyweight Pattern reduces memory usage by sharing this common state among multiple objects. Performance Overhead: Creating and managing a large number of objects can also introduce performance overhead due to memory allocation, deallocation, and initialization. By reusing shared objects and minimizing the creation of new objects, the Flyweight Pattern can improve performance. Object Creation Cost: Creating new objects can be costly in terms of time and resources, especially if the objects require complex initialization. By reusing existing objects, the Flyweight Pattern reduces the need for creating new objects, thereby reducing object creation costs. Real-world code example // Flyweight protocol defining the interface for shapes protocol Shape { func draw(at point: CGPoint) } // Concrete flyweight class representing a circle class Circle: Shape { private let radius: CGFloat private let fillColor: UIColor init(radius: CGFloat, fillColor: UIColor) { self.radius = radius self.fillColor = fillColor } func draw(at point: CGPoint) { print(\u0026#34;Drawing Circle at (\\(point.x), \\(point.y)) with radius \\(radius) and fill color \\(fillColor)\u0026#34;) // Actual drawing logic would go here } } // Flyweight factory class responsible for creating and managing flyweight objects class ShapeFactory { private var flyweights = [String: Shape]() func getCircle(radius: CGFloat, fillColor: UIColor) -\u0026gt; Shape { let key = \u0026#34;Circle-\\(radius)-\\(fillColor)\u0026#34; if let existingShape = flyweights[key] { return existingShape } else { let newShape = Circle(radius: radius, fillColor: fillColor) flyweights[key] = newShape return newShape } } } // Client code let shapeFactory = ShapeFactory() // Request for circles with different properties let circle1 = shapeFactory.getCircle(radius: 10, fillColor: .red) let circle2 = shapeFactory.getCircle(radius: 10, fillColor: .red) // Reusing the same circle object let circle3 = shapeFactory.getCircle(radius: 20, fillColor: .blue) // Drawing circles circle1.draw(at: CGPoint(x: 100, y: 100)) circle2.draw(at: CGPoint(x: 200, y: 200)) circle3.draw(at: CGPoint(x: 300, y: 300)) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/the-flyweight-pattern/","summary":"\u003ch3 id=\"what-is-a-flyweight-pattern\"\u003eWhat is a Flyweight Pattern?\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe Flyweight Pattern refers to an object that minimizes memory usage by sharing some of its data with other similar objects.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-35972\" hidden\u003e\n    \u003clabel for=\"zoomCheck-35972\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\n\u003ca href=\"https://upload.wikimedia.org/wikipedia/commons/4/4e/W3sDesign_Flyweight_Design_Pattern_UML.jpg\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"what-problems-does-it-solve\"\u003eWhat problems does it solve?\u003c/h3\u003e\n\u003cp\u003eThe Flyweight Pattern helps solve following problems:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eLarge Memory Footprint\u003c/strong\u003e: When dealing with a large number of objects, especially if these objects share a significant amount of common state, traditional object creation can lead to excessive memory consumption. The Flyweight Pattern reduces memory usage by sharing this common state among multiple objects.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePerformance Overhead\u003c/strong\u003e: Creating and managing a large number of objects can also introduce performance overhead due to memory allocation, deallocation, and initialization. By reusing shared objects and minimizing the creation of new objects, the Flyweight Pattern can improve performance.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eObject Creation Cost\u003c/strong\u003e: Creating new objects can be costly in terms of time and resources, especially if the objects require complex initialization. By reusing existing objects, the Flyweight Pattern reduces the need for creating new objects, thereby reducing object creation costs.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"real-world-code-example\"\u003eReal-world code example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Flyweight protocol defining the interface for shapes\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"nc\"\u003eShape\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003edraw\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eat\u003c/span\u003e \u003cspan class=\"n\"\u003epoint\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Concrete flyweight class representing a circle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCircle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eShape\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003efillColor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eUIColor\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efillColor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eUIColor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eradius\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eradius\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efillColor\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efillColor\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003edraw\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eat\u003c/span\u003e \u003cspan class=\"n\"\u003epoint\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Drawing Circle at (\u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003epoint\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e, \u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003epoint\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e) with radius \u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003eradius\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e and fill color \u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003efillColor\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// Actual drawing logic would go here\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Flyweight factory class responsible for creating and managing flyweight objects\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eShapeFactory\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003eflyweights\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eShape\u003c/span\u003e\u003cspan class=\"p\"\u003e]()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003egetCircle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efillColor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eUIColor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eShape\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003ekey\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Circle-\u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003eradius\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e-\u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003efillColor\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eexistingShape\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eflyweights\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eexistingShape\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003enewShape\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCircle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efillColor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003efillColor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eflyweights\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enewShape\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003enewShape\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Client code\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eshapeFactory\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eShapeFactory\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Request for circles with different properties\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003ecircle1\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eshapeFactory\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egetCircle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efillColor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ered\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003ecircle2\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eshapeFactory\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egetCircle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efillColor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ered\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Reusing the same circle object\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003ecircle3\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eshapeFactory\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egetCircle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eradius\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efillColor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eblue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Drawing circles\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ecircle1\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edraw\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eat\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ecircle2\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edraw\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eat\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ecircle3\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edraw\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eat\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eCGPoint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e300\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e300\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"thank-you-for-reading-\"\u003eThank you for reading! üòä\u003c/h4\u003e","title":"The Flyweight Pattern"},{"content":"What is a Chain Of Responsibility Pattern? The Chain Of Responsibility Pattern helps create a chain of objects to examine requests. Each object in turn examines a request and either handles it or passes onto the next object in the chain.\nSource\nWhat problems does it solve? The Chain Of Responsibility Pattern (CoR) helps solve following problems:\nDynamic Request Handling: It enables dynamic assignment of responsibilities at runtime. Handlers can be added, removed, or reordered without affecting the client‚Äôs code. This flexibility allows for easier maintenance and extension of the system. Decoupling Sender and Receiver: In traditional systems, a sender often needs to know the exact receiver of a request, leading to tight coupling between them. The CoR pattern decouples senders from receivers by allowing multiple objects to handle a request without the sender knowing the specific handler. Real-world code example // Protocol defining the handler interface protocol PurchaseHandler { var next: PurchaseHandler? { get set } func handleRequest(amount: Double) } // Concrete handlers class SmallPurchaseHandler: PurchaseHandler { var next: PurchaseHandler? let maxAmount: Double = 100.0 func handleRequest(amount: Double) { if amount \u0026lt;= maxAmount { print(\u0026#34;SmallPurchaseHandler: Purchase approved for $\\(amount)\u0026#34;) } else if let nextHandler = next { print(\u0026#34;SmallPurchaseHandler: Passing request to next handler\u0026#34;) nextHandler.handleRequest(amount: amount) } else { print(\u0026#34;SmallPurchaseHandler: No handler available, purchase rejected\u0026#34;) } } } class MediumPurchaseHandler: PurchaseHandler { var next: PurchaseHandler? let maxAmount: Double = 500.0 func handleRequest(amount: Double) { if amount \u0026lt;= maxAmount { print(\u0026#34;MediumPurchaseHandler: Purchase approved for $\\(amount)\u0026#34;) } else if let nextHandler = next { print(\u0026#34;MediumPurchaseHandler: Passing request to next handler\u0026#34;) nextHandler.handleRequest(amount: amount) } else { print(\u0026#34;MediumPurchaseHandler: No handler available, purchase rejected\u0026#34;) } } } class LargePurchaseHandler: PurchaseHandler { var next: PurchaseHandler? func handleRequest(amount: Double) { print(\u0026#34;LargePurchaseHandler: Purchase approved for $\\(amount)\u0026#34;) } } // Usage func main() { let smallHandler = SmallPurchaseHandler() let mediumHandler = MediumPurchaseHandler() let largeHandler = LargePurchaseHandler() // Connecting handlers into a chain smallHandler.next = mediumHandler mediumHandler.next = largeHandler smallHandler.handleRequest(amount: 50.0) smallHandler.handleRequest(amount: 200.0) smallHandler.handleRequest(amount: 1000.0) } Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/the-chain-of-responsibility-pattern/","summary":"\u003ch3 id=\"what-is-a-chain-of-responsibility-pattern\"\u003eWhat is a Chain Of Responsibility Pattern?\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe Chain Of Responsibility Pattern helps create a chain of objects to examine requests. Each object in turn examines a request and either handles it or passes onto the next object in the chain.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-35972\" hidden\u003e\n    \u003clabel for=\"zoomCheck-35972\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\n\u003ca href=\"https://reactiveprogramming.io/blog/en/design-patterns/chain-of-responsability\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"what-problems-does-it-solve\"\u003eWhat problems does it solve?\u003c/h3\u003e\n\u003cp\u003eThe Chain Of Responsibility Pattern (CoR) helps solve following problems:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eDynamic Request Handling\u003c/strong\u003e: It enables dynamic assignment of responsibilities at runtime. Handlers can be added, removed, or reordered without affecting the client‚Äôs code. This flexibility allows for easier maintenance and extension of the system.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDecoupling Sender and Receiver\u003c/strong\u003e: In traditional systems, a sender often needs to know the exact receiver of a request, leading to tight coupling between them. The CoR pattern decouples senders from receivers by allowing multiple objects to handle a request without the sender knowing the specific handler.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"real-world-code-example\"\u003eReal-world code example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Protocol defining the handler interface\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"nc\"\u003ePurchaseHandler\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ePurchaseHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"kr\"\u003eget\u003c/span\u003e \u003cspan class=\"kr\"\u003eset\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ehandleRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Concrete handlers\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSmallPurchaseHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ePurchaseHandler\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ePurchaseHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003emaxAmount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e100.0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ehandleRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eamount\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003emaxAmount\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;SmallPurchaseHandler: Purchase approved for $\u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003enextHandler\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enext\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;SmallPurchaseHandler: Passing request to next handler\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003enextHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehandleRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;SmallPurchaseHandler: No handler available, purchase rejected\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMediumPurchaseHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ePurchaseHandler\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ePurchaseHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003emaxAmount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e500.0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ehandleRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eamount\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003emaxAmount\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;MediumPurchaseHandler: Purchase approved for $\u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003enextHandler\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enext\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;MediumPurchaseHandler: Passing request to next handler\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003enextHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehandleRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;MediumPurchaseHandler: No handler available, purchase rejected\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eLargePurchaseHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ePurchaseHandler\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ePurchaseHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ehandleRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;LargePurchaseHandler: Purchase approved for $\u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Usage\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003esmallHandler\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSmallPurchaseHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003emediumHandler\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMediumPurchaseHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003elargeHandler\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eLargePurchaseHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// Connecting handlers into a chain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esmallHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emediumHandler\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emediumHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elargeHandler\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esmallHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehandleRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e50.0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esmallHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehandleRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e200.0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esmallHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehandleRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e1000.0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"thank-you-for-reading-\"\u003eThank you for reading! üòä\u003c/h4\u003e","title":"The Chain Of Responsibility Pattern"},{"content":"What is a State Pattern? The State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class.\nSource\nWhat problems does it solve? Complex conditional logic: When an object‚Äôs behavior depends on its internal state, it often leads to complex conditional statements. The State pattern simplifies this by encapsulating each state and its behavior in separate classes, making the code more readable and maintainable. State-specific behavior: Objects often need to change their behavior based on their state. The State pattern allows objects to delegate behavior to state objects, which can vary independently. This promotes better encapsulation and separation of concerns. Adding new states: When new states need to be added, the State pattern makes it easier to extend the functionality without modifying existing code. New states can be added by creating new state classes and integrating them into the existing context, without changing the context class itself. Real-world code example // Define the VendingMachine protocol protocol VendingMachineState { func insertCoin() func dispenseItem() } // Define concrete states class NoCoinState: VendingMachineState { private let vendingMachine: VendingMachine init(vendingMachine: VendingMachine) { self.vendingMachine = vendingMachine } func insertCoin() { print(\u0026#34;Coin inserted\u0026#34;) // Transition to the HasCoinState vendingMachine.changeState(newState: vendingMachine.hasCoinState) } func dispenseItem() { print(\u0026#34;Please insert a coin first\u0026#34;) } } class HasCoinState: VendingMachineState { private let vendingMachine: VendingMachine init(vendingMachine: VendingMachine) { self.vendingMachine = vendingMachine } func insertCoin() { print(\u0026#34;Coin already inserted\u0026#34;) } func dispenseItem() { if vendingMachine.inventoryCount \u0026gt; 0 { print(\u0026#34;Item dispensed\u0026#34;) vendingMachine.decreaseInventory() // Transition to the NoCoinState vendingMachine.changeState(newState: vendingMachine.noCoinState) } else { print(\u0026#34;Out of stock\u0026#34;) } } } // Define the VendingMachine class class VendingMachine { var inventoryCount: Int = 5 var currentState: VendingMachineState! var noCoinState: VendingMachineState! var hasCoinState: VendingMachineState! init() { noCoinState = NoCoinState(vendingMachine: self) hasCoinState = HasCoinState(vendingMachine: self) currentState = noCoinState } func changeState(newState: VendingMachineState) { currentState = newState } func insertCoin() { currentState.insertCoin() } func dispenseItem() { currentState.dispenseItem() } func decreaseInventory() { inventoryCount -= 1 } } // Usage let vendingMachine = VendingMachine() vendingMachine.dispenseItem() vendingMachine.insertCoin() vendingMachine.insertCoin() vendingMachine.dispenseItem() vendingMachine.dispenseItem() Thank you for reading!\n","permalink":"http://localhost:1313/posts/the-state-pattern/","summary":"\u003ch3 id=\"what-is-a-state-pattern\"\u003eWhat is a State Pattern?\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe State Pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-35972\" hidden\u003e\n    \u003clabel for=\"zoomCheck-35972\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\n\u003ca href=\"https://en.wikipedia.org/wiki/State_pattern#/media/File:State_Design_Pattern_UML_Class_Diagram.svg\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"what-problems-does-it-solve\"\u003eWhat problems does it solve?\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eComplex conditional logic\u003c/strong\u003e: When an object‚Äôs behavior depends on its internal state, it often leads to complex conditional statements. The State pattern simplifies this by encapsulating each state and its behavior in separate classes, making the code more readable and maintainable.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eState-specific behavior\u003c/strong\u003e: Objects often need to change their behavior based on their state. The State pattern allows objects to delegate behavior to state objects, which can vary independently. This promotes better encapsulation and separation of concerns.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAdding new states\u003c/strong\u003e: When new states need to be added, the State pattern makes it easier to extend the functionality without modifying existing code. New states can be added by creating new state classes and integrating them into the existing context, without changing the context class itself.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"real-world-code-example\"\u003eReal-world code example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Define the VendingMachine protocol\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"nc\"\u003eVendingMachineState\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003einsertCoin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003edispenseItem\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Define concrete states\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eNoCoinState\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVendingMachineState\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVendingMachine\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003einsertCoin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Coin inserted\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// Transition to the HasCoinState\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewState\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehasCoinState\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003edispenseItem\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Please insert a coin first\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHasCoinState\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVendingMachineState\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVendingMachine\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003einsertCoin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Coin already inserted\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003edispenseItem\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einventoryCount\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Item dispensed\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edecreaseInventory\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"c1\"\u003e// Transition to the NoCoinState\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewState\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enoCoinState\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Out of stock\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Define the VendingMachine class\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eVendingMachine\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003einventoryCount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ecurrentState\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVendingMachineState\u003c/span\u003e\u003cspan class=\"p\"\u003e!\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003enoCoinState\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVendingMachineState\u003c/span\u003e\u003cspan class=\"p\"\u003e!\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ehasCoinState\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVendingMachineState\u003c/span\u003e\u003cspan class=\"p\"\u003e!\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003enoCoinState\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eNoCoinState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ehasCoinState\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHasCoinState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ecurrentState\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enoCoinState\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003echangeState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewState\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVendingMachineState\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ecurrentState\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enewState\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003einsertCoin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ecurrentState\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einsertCoin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003edispenseItem\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ecurrentState\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edispenseItem\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003edecreaseInventory\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003einventoryCount\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Usage\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003evendingMachine\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eVendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edispenseItem\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einsertCoin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einsertCoin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edispenseItem\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003evendingMachine\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edispenseItem\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThank you for reading!\u003c/p\u003e","title":"The State Pattern"},{"content":"What is a Dependency Inversion Principle? The Dependency Inversion Principle means that high-level modules should not depend on low-level modules.\nSource\nSource\nWhat problems does it solve? The Dependency Inversion Principle (DIP) helps solve:\nRigidity Fragility Immobility problems Real-world code example Violation of DIP // High-level module directly depending on low-level modules class MessageService { func sendMessageViaEmail(message: String) { let emailSender = EmailSender() emailSender.sendMessage(message: message) } func sendMessageViaSMS(message: String) { let smsSender = SMSSender() smsSender.sendMessage(message: message) } func sendMessageViaPushNotification(message: String) { let pushNotificationSender = PushNotificationSender() pushNotificationSender.sendMessage(message: message) } } Adhering to DIP // Protocol defining the interface for sending messages protocol MessageSender { func sendMessage(message: String) } // High-level module depending on abstraction (MessageSender protocol) class MessageService { private let messageSender: MessageSender init(messageSender: MessageSender) { self.messageSender = messageSender } func sendMessage(message: String) { messageSender.sendMessage(message: message) } } // Concrete implementations of MessageSender protocol for different channels class EmailSender: MessageSender { func sendMessage(message: String) { print(\u0026#34;Sending email: \\(message)\u0026#34;) } } class SMSSender: MessageSender { func sendMessage(message: String) { print(\u0026#34;Sending SMS: \\(message)\u0026#34;) } } class PushNotificationSender: MessageSender { func sendMessage(message: String) { print(\u0026#34;Sending push notification: \\(message)\u0026#34;) } } // Example usage let emailSender = EmailSender() let smsSender = SMSSender() let pushNotificationSender = PushNotificationSender() let emailService = MessageService(messageSender: emailSender) let smsService = MessageService(messageSender: smsSender) let pushNotificationService = MessageService(messageSender: pushNotificationSender) emailService.sendMessage(message: \u0026#34;Hello via email\u0026#34;) smsService.sendMessage(message: \u0026#34;Hello via SMS\u0026#34;) pushNotificationService.sendMessage(message: \u0026#34;Hello via push notification\u0026#34;) Thank you for reading! üòä ","permalink":"http://localhost:1313/posts/the-dependency-inversion-principle/","summary":"\u003ch3 id=\"what-is-a-dependency-inversion-principle\"\u003eWhat is a Dependency Inversion Principle?\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe Dependency Inversion Principle means that high-level modules should not depend on low-level modules.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-35972\" hidden\u003e\n    \u003clabel for=\"zoomCheck-35972\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\n\u003ca href=\"http://principles-wiki.net/principles:dependency_inversion_principle\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-3a9c2\" hidden\u003e\n    \u003clabel for=\"zoomCheck-3a9c2\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/1.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\n\u003ca href=\"http://principles-wiki.net/principles:dependency_inversion_principle\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"what-problems-does-it-solve\"\u003eWhat problems does it solve?\u003c/h3\u003e\n\u003cp\u003eThe Dependency Inversion Principle (DIP) helps solve:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRigidity\u003c/li\u003e\n\u003cli\u003eFragility\u003c/li\u003e\n\u003cli\u003eImmobility problems\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"real-world-code-example\"\u003eReal-world code example\u003c/h3\u003e\n\u003ch4 id=\"violation-of-dip\"\u003eViolation of DIP\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// High-level module directly depending on low-level modules\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMessageService\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003esendMessageViaEmail\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eemailSender\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eEmailSender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eemailSender\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esendMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003esendMessageViaSMS\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003esmsSender\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSMSSender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003esmsSender\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esendMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003esendMessageViaPushNotification\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003epushNotificationSender\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePushNotificationSender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epushNotificationSender\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esendMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"adhering-to-dip\"\u003eAdhering to DIP\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Protocol defining the interface for sending messages\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"nc\"\u003eMessageSender\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003esendMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// High-level module depending on abstraction (MessageSender protocol)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMessageService\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003emessageSender\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eMessageSender\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessageSender\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eMessageSender\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emessageSender\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emessageSender\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003esendMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emessageSender\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esendMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Concrete implementations of MessageSender protocol for different channels\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eEmailSender\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eMessageSender\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003esendMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Sending email: \u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSMSSender\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eMessageSender\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003esendMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Sending SMS: \u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePushNotificationSender\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eMessageSender\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003esendMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Sending push notification: \u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Example usage\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eemailSender\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eEmailSender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003esmsSender\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSMSSender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003epushNotificationSender\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePushNotificationSender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eemailService\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMessageService\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessageSender\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eemailSender\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003esmsService\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMessageService\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessageSender\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esmsSender\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003epushNotificationService\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMessageService\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessageSender\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003epushNotificationSender\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eemailService\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esendMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello via email\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esmsService\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esendMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello via SMS\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003epushNotificationService\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esendMessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello via push notification\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"thank-you-for-reading-\"\u003eThank you for reading! üòä\u003c/h4\u003e","title":"The Dependency Inversion Principle"},{"content":"What is a Big O notation? The Big O notation helps identify algorithm efficiency. It can measure computation and memory growth with respect to input. Real-world code example O(n) ‚Äî Linear Time\nfunc containsValue(array: [Int], value: Int) -\u0026gt; Bool { for element in array { if element == value { return true } } return false } O(1) ‚Äî Constant Time\nfunc findFirstElement(array: [Int]) -\u0026gt; Int? { return array.first } Thank you for reading!\n","permalink":"http://localhost:1313/posts/big-o-notation/","summary":"\u003ch3 id=\"what-is-a-big-o-notation\"\u003eWhat is a Big O notation?\u003c/h3\u003e\n\u003cp\u003eThe Big O notation helps identify algorithm efficiency. It can measure computation and memory growth with respect to input.\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-35972\" hidden\u003e\n    \u003clabel for=\"zoomCheck-35972\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003ch3 id=\"real-world-code-example\"\u003eReal-world code example\u003c/h3\u003e\n\u003cp\u003eO(n) ‚Äî Linear Time\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003econtainsValue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eelement\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eelement\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eO(1) ‚Äî Constant Time\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003efindFirstElement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003efirst\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThank you for reading!\u003c/p\u003e","title":"Big O notation"},{"content":"What is Combine? Combine Framework provides an API for processing async events over time such as user-input, network response, and other dynamic data.\nWhat is the purpose of Combine? The purpose of Combine is to simplify the management of async events and data streams.\nPublishers Publisher declares that a type can transit a sequence of values over time. A publisher delivers elements to one or more Subscriber instances.\nclass PostService { func fetchPosts() -\u0026gt; AnyPublisher\u0026lt;[Post], Error\u0026gt; { guard let url = URL(string: \u0026#34;https://jsonplaceholder.typicode.com/posts\u0026#34;) else { fatalError(\u0026#34;Invalid URL\u0026#34;) } return URLSession.shared.dataTaskPublisher(for: url) .map(\\.data) .decode(type: [Post].self, decoder: JSONDecoder()) .receive(on: DispatchQueue.main) .eraseToAnyPublisher() } } Subscribers Subscriber is a protocol that declares a type that can receive input from a publisher. A Subscriber instance receives a stream of elements from a Publisher.\nprivate var cancellable: AnyCancellable? let service = PostService() cancellable = service.fetchPosts() .sink(receiveCompletion: { completion in switch completion { case .finished: break case .failure(let error): print(error.localizedDescription) } }, receiveValue: { posts in print(\u0026#34;Received posts count:\u0026#34;, posts.count) }) AnyCancellable When you call a method like sink or assign on a publisher, it returns a type that conforms to the Cancellable protocol. Storing this return value in an instance of AnyCancellable keeps the subscription active. When the AnyCancellable instance is deallocated, its deinit method automatically cancels the subscription.\nvar cancellables = Set\u0026lt;AnyCancellable\u0026gt;() let publisher = Just(\u0026#34;Hello, Combine!\u0026#34;) publisher .sink { completion in print(\u0026#34;Completion: \\(completion)\u0026#34;) } receiveValue: { value in print(\u0026#34;Received value: \\(value)\u0026#34;) } .store(in: \u0026amp;cancellables) Operators Transforming Operators map: Transforms each value received from a publisher by applying a function. flatMap: Transforms each value received into a new publisher, then flattens the result into a single publisher stream. scan: Applies a closure over the previous result and the current value to produce a new value, useful for accumulating values. Filtering Operators filter: Emits only those values from a publisher that satisfy a given predicate. removeDuplicates: Suppresses duplicate consecutive values published by a publisher. first/last: Emits only the first or last value from a publisher that satisfies a predicate condition. Combining Operators combineLatest: Combines the latest value from two or more publishers and emits a combined value each time any of the publishers emit a value. merge: Combines multiple publishers of the same type into a single publisher stream, emitting values as they arrive. zip: Combines values from multiple publishers into tuples, emitting a tuple only when each of the publishers has emitted a new value. Error Handling Operators catch: Handles errors from a publisher by replacing the failed publisher with another publisher or a value. retry: Attempts to recreate a subscription to a failed publisher for a specified number of times. Utility Operators delay: Delays the emission of items from the publisher for a specified interval. subscribe(on:)/receive(on:): Specifies the dispatch queue for performing subscription work or receiving values. print: Prints log messages for all publisher events to the console, useful for debugging. Timing Operators debounce: Emits a value from a publisher only after a specified time interval has passed without receiving another value. throttle: Emits either the first or last value received in a specified time window. Collecting Operators collect: Collects received values and emits an array of those values either when the publisher completes or when a buffer size is reached. When to use Combine? I found great advice from Apple when it comes to Combine:\n‚ÄúA Combine publisher fills a role similar to, but distinct from, the AsyncSequence in the Swift standard library. A Publisher and an AsyncSequence both produce elements over time. However, the pull model in Combine uses a Subscriber to request elements from a publisher, while Swift concurrency uses the for-await-in syntax to iterate over elements published by an AsyncSequence. Both APIs offer methods to modify the sequence by mapping or filtering elements, while only Combine provides time-based operations like debounce(for:scheduler:options:) and throttle(for:scheduler:latest:), and combining operations like merge(with:) and combineLatest(_:_:). To bridge the two approaches, the property values exposes a publisher‚Äôs elements as an AsyncSequence, allowing you to iterate over them with for-await-in rather than attaching a Subscriber.‚Äù\nThank you for reading!\n","permalink":"http://localhost:1313/posts/combine-basics/","summary":"\u003ch3 id=\"what-is-combine\"\u003eWhat is Combine?\u003c/h3\u003e\n\u003cp\u003eCombine Framework provides an API for processing async events over time such as user-input, network response, and other dynamic data.\u003c/p\u003e\n\u003ch3 id=\"what-is-the-purpose-of-combine\"\u003eWhat is the purpose of Combine?\u003c/h3\u003e\n\u003cp\u003eThe purpose of Combine is to simplify the management of async events and data streams.\u003c/p\u003e\n\u003ch3 id=\"publishers\"\u003ePublishers\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://developer.apple.com/documentation/combine/publisher\"\u003e\u003ccode\u003ePublisher\u003c/code\u003e\u003c/a\u003e declares that a type can transit a sequence of values over time. A publisher delivers elements to one or more \u003ca href=\"https://developer.apple.com/documentation/combine/subscriber\"\u003e\u003ccode\u003eSubscriber\u003c/code\u003e\u003c/a\u003e instances.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePostService\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003efetchPosts\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eAnyPublisher\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003eError\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eguard\u003c/span\u003e \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eurl\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://jsonplaceholder.typicode.com/posts\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003efatalError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Invalid URL\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eURLSession\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eshared\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edataTaskPublisher\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"bp\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e\\\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"kc\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edecoder\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eJSONDecoder\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereceive\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eon\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eDispatchQueue\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eeraseToAnyPublisher\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"subscribers\"\u003eSubscribers\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://developer.apple.com/documentation/combine/subscriber\"\u003e\u003ccode\u003eSubscriber\u003c/code\u003e\u003c/a\u003e is a protocol that declares a type that can receive input from a publisher.\nA Subscriber instance receives a stream of elements from a Publisher.\u003c/p\u003e","title":"Combine ‚Äî Basics"},{"content":"When was it introduced? It was introduced in Swift 5.5 at WWDC 2021.\nYou can find the more comprehensive info about Modern Concurrency in Swift Concurrency Manifesto.\nWhat are actors? Actors eliminate shared mutable state and explicit synchronization through deep copying of all the data that passed to an actor to a message sent and preventing direct access to actor state. Actors are reference types.\nactor DatabaseManager { private var data: [String: String] = [:] func readData(key: String) -\u0026gt; String? { data[key] } func writeData(key: String, value: String) { data[key] = value } } What is an asynchronous function? The asynchronous function or asynchronous method can be suspended while it is partway through execution. It can pause in the middle when it‚Äôs waiting for something.\nfunc someAsyncOperation(index: Int) async throws -\u0026gt; String { try await Task.sleep(nanoseconds: 1_000_000_000) return \u0026#34;Operation \\(index) Completed\u0026#34; } func performAsyncOperations() async throws { for index in 1...1000 { Task.detached { print(\u0026#34;Start of operation \\(index)\u0026#34;) let result = try await someAsyncOperation(index: index) print(\u0026#34;End of operation \\(index) with result: \\(result)\u0026#34;) return result } } } Task { print(\u0026#34;Start of example\u0026#34;) try await performAsyncOperationsWithYield() print(\u0026#34;End of example\u0026#34;) } What are Asynchronous Sequences? Asynchronous Sequences enable you to stop an async task until the next item is prepared, giving room for other tasks to progress. Crafting your own Asynchronous Sequence involves adhering to the AsyncSequence protocol.\nstruct AsyncCounter: AsyncSequence { typealias Element = Int struct AsyncCounterIterator: AsyncIteratorProtocol { var count = 0 mutating func next() async -\u0026gt; Int? { defer { count += 1 } return count } } func makeAsyncIterator() -\u0026gt; AsyncCounterIterator { return AsyncCounterIterator() } } let asyncCounter = AsyncCounter() for await count in asyncCounter { print(\u0026#34;Count: \\(count)\u0026#34;) try await Task.sleep(nanoseconds: 1 * 1_000_000_000) } What are Tasks and TaskGroups? You can draw a parallel between Tasks and DispatchQueue`s because they have similar concepts. If you want to execute your code asynchronously you should put your code into async context. Tasks and Queues help you solve this problem.\nfunc fetchData() async throws -\u0026gt; String { try await Task.sleep(nanoseconds: 2 * 1_000_000_000) return \u0026#34;Data fetched successfully!\u0026#34; } Task { print(\u0026#34;Start fetching data...\u0026#34;) do { let result = try await fetchData() print(result) } catch { print(\u0026#34;Error: \\(error)\u0026#34;) } print(\u0026#34;Data fetching completed.\u0026#34;) } let customQueue = DispatchQueue(label: \u0026#34;com.example.myqueue\u0026#34;, attributes: .concurrent) func performTask() { customQueue.async { print(\u0026#34;Task is starting...\u0026#34;) Thread.sleep(forTimeInterval: 2) print(\u0026#34;Task completed.\u0026#34;) } } for _ in 1...3 { performTask() } TaskGroup allows you to explicitly add child tasks and give you more control over priority and cancellation.\nfunc fetchImages(urls: [URL]) async throws -\u0026gt; [UIImage] { try await withThrowingTaskGroup(of: UIImage.self) { group in var images: [UIImage] = [] for url in urls { group.addTask { try await downloadImage(from: url) } } for try await result in group { images.append(result) } return images } } func downloadImage(from url: URL) async throws -\u0026gt; UIImage { // Download and return the image } What is Task.yield()? If you have a long-running operation you can call the Task.yield() method to explicitly add suspension points. By doing that you are letting other tasks make progress.\nfunc performAsyncOperationsWithYield() async throws { for index in 1...1000 { Task.detached { print(\u0026#34;Start of operation \\(index)\u0026#34;) // Yield control to the scheduler await Task.yield() let result = try await someAsyncOperation(index: index) print(\u0026#34;End of operation \\(index) with result: \\(result)\u0026#34;) return result } } } What are Sendable Types? A type that can be shared from one concurrency context to another is known as a sendable type. In other words it guarantees that the operation that you perform is thread-safe.\nimport Foundation struct WeatherData: Sendable { var temperature: Double var condition: String var city: String } func fetchWeatherData(forCity city: String) async -\u0026gt; WeatherData { try? await Task.sleep(nanoseconds: 1_000_000_000) return WeatherData(temperature: 72.0, condition: \u0026#34;Sunny\u0026#34;, city: city) } import SwiftUI @MainActor class WeatherViewModel: ObservableObject { @Published var currentWeather: WeatherData? func updateWeather(forCity city: String) { Task { let weatherData = await fetchWeatherData(forCity: city) // Since WeatherData conforms to Sendable, this is safe self.currentWeather = weatherData } } } Thank you for reading!\n","permalink":"http://localhost:1313/posts/modern-concurrency/","summary":"\u003ch3 id=\"when-was-it-introduced\"\u003eWhen was it introduced?\u003c/h3\u003e\n\u003cp\u003eIt was introduced in \u003ca href=\"https://github.com/apple/swift/tree/swift-5.5-RELEASE\"\u003eSwift 5.5\u003c/a\u003e at \u003ca href=\"https://developer.apple.com/videos/wwdc2021/\"\u003eWWDC 2021\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eYou can find the more comprehensive info about Modern Concurrency in \u003ca href=\"https://gist.github.com/lattner/31ed37682ef1576b16bca1432ea9f782#swift-concurrency-manifesto\"\u003eSwift Concurrency Manifesto\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"what-are-actors\"\u003eWhat are actors?\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/concurrency/#Actors\"\u003eActors\u003c/a\u003e eliminate shared mutable state and explicit synchronization through deep copying of all the data that passed to an actor to a message sent and preventing direct access to actor state. Actors are \u003ca href=\"https://www.swift.org/documentation/articles/value-and-reference-types.html#:~:text=changing%20the%20value.-,Reference%20Types,-In%20Swift%2C%20classes\"\u003ereference types\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eactor\u003c/span\u003e \u003cspan class=\"n\"\u003eDatabaseManager\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[:]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ereadData\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ewriteData\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"what-is-an-asynchronous-function\"\u003eWhat is an asynchronous function?\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/concurrency/#Defining-and-Calling-Asynchronous-Functions\"\u003eThe asynchronous function\u003c/a\u003e or asynchronous method can be suspended while it is partway through execution. It can pause in the middle when it‚Äôs waiting for something.\u003c/p\u003e","title":"Modern Concurrency"},{"content":"What is the Thread? A Thread is a small set of instructions that can be executed independently from the main program. Threads are often used to improve program performance by allowing multiple tasks to be executed at the same time. The Thread has its own stack, registers, and program counters.\nThreads share memory address space, and it is possible to communicate between Threads using shared memory space. How to use it? You can create a single Thread by the following example:\n// Create a new thread and start it let newThread = Thread { } newThread.start() What else can you do? You can:\ncancel exit sleep etc You can check the current Thread execution state: isExecuting isFinished isCancelled You can subclass Thread and override the main() method if you need it.\nCaveats The main problem with Threads is that you must manually manage relationships between them. It can cause testability, readability, and potentially Thread Explosion issues.\nWhat is Thread Explosion? Thread Explosion occurs when a system has too many running Threads simultaneously. It can cause performance issues such as memory overhead and cost of context switching (CPU cycles).\nTips You can delegate your work with Threads to Grand Central Dispatch (GCD).\nGCD provides an API that manages the number of Threads automatically.\nYou can also use async/await and Task functionality from Swift 5.5 that helps manage the number of Threads in poll-based factors like system load and the number of available CPUs. If you have a long-running operation, you can call the Task.yield() method and let other tasks in your program make progress on their work.\nThank you for reading!\n","permalink":"http://localhost:1313/posts/what-are-threads-in-swift/","summary":"\u003ch3 id=\"what-is-the-thread\"\u003eWhat is the Thread?\u003c/h3\u003e\n\u003cp\u003eA \u003ca href=\"https://developer.apple.com/documentation/foundation/thread\"\u003eThread\u003c/a\u003e is a small set of instructions that can be executed independently from the main program.\nThreads are often used to improve program performance by allowing multiple tasks to be executed at the same time.\nThe Thread has its own \u003ccode\u003estack\u003c/code\u003e, \u003ccode\u003eregisters\u003c/code\u003e, and \u003ccode\u003eprogram counters\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-35972\" hidden\u003e\n    \u003clabel for=\"zoomCheck-35972\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/0.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003cp\u003eThreads share memory address space, and it is possible to communicate between Threads using shared memory space.\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-3a9c2\" hidden\u003e\n    \u003clabel for=\"zoomCheck-3a9c2\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/1.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e","title":"What are Threads in Swift?"},{"content":"What is DispatchGroup? DispatchGroup provides a mechanism to track the completion group of tasks.\nHow DispatchGroup works? DispatchGroup has three main methods, enter, leave and notify, that allow you to control the completion of a specific task.\nlet dispatchGroup = DispatchGroup() dispatchGroup.enter() dispatchGroup.leave() dispatchGroup.notify(queue: .main) {} Let`s talk about each of these methods. enter ‚Äî manually indicate a block has entered group. leave ‚Äî manually indicate a block in the group has been completed. notify(queue: ) ‚Äî schedule a block to be submitted to a queue when all the blocks associated with a group have been completed. The queue parameter is the queue to which the supplied block will be submitted when the group is complete.\nHow to implement DispatchGroup? You can implement DispatchGroup following these steps:\nlet dispatchGroup = DispatchGroup() dispatchGroup.enter() fetchGitHubUser1 { print(\u0026#34;fetchGitHubUser1 task completed\u0026#34;) dispatchGroup.leave() } dispatchGroup.enter() fetchGitHubUser2 { print(\u0026#34;fetchGitHubUser2 task completed\u0026#34;) dispatchGroup.leave() } dispatchGroup.notify(queue: .main) { print(\u0026#34;All tasks completed\u0026#34;) } // prints fetchGitHubUser1 task started fetchGitHubUser2 task started fetchGitHubUser1 task completed fetchGitHubUser2 task completed All tasks completed Pros You can create a group of tasks and track when all tasks finish their work. You can specify a queue where you want to be notified about completed operations.\nCons You should manually manage enter and leave operations that increase complexity and the chance of error. You can accidentally forget to write the leave operation, which can cause unpredictable behavior.\n","permalink":"http://localhost:1313/posts/dispatchgroup-in-swift/","summary":"\u003ch3 id=\"what-is-dispatchgroup\"\u003eWhat is DispatchGroup?\u003c/h3\u003e\n\u003cp\u003eDispatchGroup provides a mechanism to track the completion group of tasks.\u003c/p\u003e\n\u003ch3 id=\"how-dispatchgroup-works\"\u003eHow DispatchGroup works?\u003c/h3\u003e\n\u003cp\u003eDispatchGroup has three main methods, \u003ccode\u003eenter\u003c/code\u003e, \u003ccode\u003eleave\u003c/code\u003e and \u003ccode\u003enotify\u003c/code\u003e, that allow you to control the completion of a specific task.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003edispatchGroup\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eDispatchGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edispatchGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenter\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edispatchGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eleave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edispatchGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enotify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003equeue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"lets-talk-about-each-of-these-methods\"\u003eLet`s talk about each of these methods.\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eenter\u003c/code\u003e ‚Äî manually indicate a block has entered group.\n\u003ccode\u003eleave\u003c/code\u003e ‚Äî manually indicate a block in the group has been completed.\n\u003ccode\u003enotify(queue: )\u003c/code\u003e ‚Äî schedule a block to be submitted to a queue when all the blocks associated with a group have been completed. The \u003ccode\u003equeue\u003c/code\u003e parameter is the queue to which the supplied block will be submitted when the group is complete.\u003c/p\u003e","title":"DispatchGroup in Swift"},{"content":"What is concurrency? The system can perform multiple tasks simultaneously. By tasks, I mean code or instructions. Modern computer chips have multiple cores that allow developers to create and run various tasks on multiple cores. Even if your chip has one core operating system it will provide context switching mechanism by enabling it to execute multiple tasks concurrently.\nMaterial about processes, threads I will skip explaining concepts about processes and threads because it is a vast topic, and it will take a lot of time to explain it. I attached links to the material to help you understand it more deeply. https://youtu.be/4rLW7zg21gI?si=49hq8Wrbpmeev41k https://youtu.be/r2__Rw8vu1M?si=b7b257Qu4Bty7OxA I will focus on implementation.\nThe old and modern way of implementing concurrency You can divide concurrency implementation into old or unstructured and modern or structured.\nBy old, I mean GCD (Grand Central Dispatch). By modern, I mean async/await, actor, and Task.\nIn this article, I will talk about the old way. GCD helps you keep your distance from manually managing threads and avoid unnecessary complexity, and it does it by providing API. One of these APIs is DispatchQueue.\nDispatchQueue By default, DispatchQueue is serial; all work on this queue will be executed sequentially. DispatchQueue has access to the main property and the global() method. The main property returns the serial queue associated with the main thread of the current process. The global() method returns a concurrent queue specified by quality-of-service level.\npublic class func global(qos: DispatchQoS.QoSClass = .default) -\u0026gt; DispatchQueue You can pass many parameters when you try to initialize a new queue.\npublic convenience init(label: String, qos: DispatchQoS = .unspecified, attributes: DispatchQueue.Attributes = [], autoreleaseFrequency: DispatchQueue.AutoreleaseFrequency = .inherit, target: DispatchQueue? = nil) Let‚Äôs talk about three of them (label, qos, attributes). The first is label, which is used mainly for debugging and identification.\nlet queue = DispatchQueue(label: \u0026#34;com.example.myqueue\u0026#34;) The second one is qos (Quality Of Service) allows you to choose the priority in which you like to run your task. You can choose between background, utility, default, userInitiated, userIneractive, and unspecified priorities.\n/// qos_class_t public struct DispatchQoS : Equatable { public let qosClass: DispatchQoS.QoSClass public let relativePriority: Int @available(macOS 10.10, iOS 8.0, *) public static let background: DispatchQoS @available(macOS 10.10, iOS 8.0, *) public static let utility: DispatchQoS @available(macOS 10.10, iOS 8.0, *) public static let `default`: DispatchQoS @available(macOS 10.10, iOS 8.0, *) public static let userInitiated: DispatchQoS @available(macOS 10.10, iOS 8.0, *) public static let userInteractive: DispatchQoS public static let unspecified: DispatchQoS } userIneractive has the highest priority; it usually calls when you need to display UI almost immediately.\nbackground, on the other hand, has the lowest priority.\nHow to achieve concurrency with DispatchQueue API? You can use a serial queue with the following: sync functionality allows you to wait until the block you passed finishes its work.\nlet serialQueue = DispatchQueue(label: \u0026#34;com.example.myqueue.serial\u0026#34;) serialQueue.sync {} async functionality will schedule your work and be executed later in time.\nlet serialQueue = DispatchQueue(label: \u0026#34;com.example.myqueue.serial\u0026#34;) serialQueue.async {} Or you can use a concurrent queue with similar methods but running your task in parallel.\nlet concurrentQueue = DispatchQueue(label: \u0026#34;com.example.myqueue.concurrent\u0026#34;, attributes: .concurrent) concurrentQueue.sync {} concurrentQueue.async {} The difference between serial queue and concurrent queue The difference between a serial and concurrent queue is that you should not wait until the concurrent operation finishes work in the async block.\nlet concurrentQueue = DispatchQueue(label: \u0026#34;com.example.myqueue.concurrent\u0026#34;, attributes: .concurrent) concurrentQueue.sync { for i in 1...5 { print(\u0026#34;Task \\(i) is running on Concurrent Queue\u0026#34;) sleep(1) // Simulate some work } } concurrentQueue.sync { for i in 6...10 { print(\u0026#34;Task \\(i) is running on Concurrent Queue\u0026#34;) sleep(1) // Simulate some work } } // prints Task 1 is running on Concurrent Queue Task 6 is running on Concurrent Queue Task 2 is running on Concurrent Queue Task 7 is running on Concurrent Queue Task 3 is running on Concurrent Queue Task 8 is running on Concurrent Queue Task 4 is running on Concurrent Queue Task 9 is running on Concurrent Queue Task 5 is running on Concurrent Queue Task 10 is running on Concurrent Queue The serial queue executes tasks in order, and you should wait until the first async block finishes its work to start the second block.\nlet serialQueue = DispatchQueue(label: \u0026#34;com.example.myqueue.serual\u0026#34;) serialQueue.sync { for i in 1...5 { print(\u0026#34;Task \\(i) is running on Serial Queue\u0026#34;) sleep(1) // Simulate some work } } serialQueue.sync { for i in 6...10 { print(\u0026#34;Task \\(i) is running on Serial Queue\u0026#34;) sleep(1) // Simulate some work } } // prints Task 1 is running on Serial Queue Task 2 is running on Serial Queue Task 3 is running on Serial Queue Task 4 is running on Serial Queue Task 5 is running on Serial Queue Task 6 is running on Serial Queue Task 7 is running on Serial Queue Task 8 is running on Serial Queue Task 9 is running on Serial Queue Task 10 is running on Serial Queue When you try to use the sync functionality, it behaves similarly on serial and concurrent queues by executing each task step by step and waiting till each block finishes its work.\nlet serialQueue = DispatchQueue(label: \u0026#34;com.example.myqueue.serial\u0026#34;) serialQueue.sync { for i in 1...5 { print(\u0026#34;Task \\(i) is running on Serial Queue\u0026#34;) sleep(1) // Simulate some work } } serialQueue.sync { for i in 6...10 { print(\u0026#34;Task \\(i) is running on Serial Queue\u0026#34;) sleep(1) // Simulate some work } } // prints Task 1 is running on Serial Queue Task 2 is running on Serial Queue Task 3 is running on Serial Queue Task 4 is running on Serial Queue Task 5 is running on Serial Queue Task 6 is running on Serial Queue Task 7 is running on Serial Queue Task 8 is running on Serial Queue Task 9 is running on Serial Queue Task 10 is running on Serial Queue let concurrentQueue = DispatchQueue(label: \u0026#34;com.example.myqueue.concurrent\u0026#34;, attributes: .concurrent) concurrentQueue.sync { for i in 1...5 { print(\u0026#34;Task \\(i) is running on Concurrent Queue\u0026#34;) sleep(1) // Simulate some work } } concurrentQueue.sync { for i in 6...10 { print(\u0026#34;Task \\(i) is running on Concurrent Queue\u0026#34;) sleep(1) // Simulate some work } } // prints Task 1 is running on Concurrent Queue Task 2 is running on Concurrent Queue Task 3 is running on Concurrent Queue Task 4 is running on Concurrent Queue Task 5 is running on Concurrent Queue Task 6 is running on Concurrent Queue Task 7 is running on Concurrent Queue Task 8 is running on Concurrent Queue Task 9 is running on Concurrent Queue Task 10 is running on Concurrent Queue ","permalink":"http://localhost:1313/posts/concurrency-in-swift/","summary":"\u003ch3 id=\"what-is-concurrency\"\u003eWhat is concurrency?\u003c/h3\u003e\n\u003cp\u003eThe system can perform multiple tasks simultaneously. By tasks, I mean \u003ccode\u003ecode or instructions\u003c/code\u003e.\nModern computer chips have multiple cores that allow developers to create and run various tasks on multiple cores. Even if your chip has one core operating system it will provide context switching mechanism by enabling it to execute multiple tasks concurrently.\u003c/p\u003e\n\u003ch3 id=\"material-about-processes-threads\"\u003eMaterial about processes, threads\u003c/h3\u003e\n\u003cp\u003eI will skip explaining concepts about processes and threads because it is a vast topic, and it will take a lot of time to explain it. I attached links to the material to help you understand it more deeply.\n\u003ca href=\"https://youtu.be/4rLW7zg21gI?si=49hq8Wrbpmeev41k\"\u003ehttps://youtu.be/4rLW7zg21gI?si=49hq8Wrbpmeev41k\u003c/a\u003e\n\u003ca href=\"https://youtu.be/r2__Rw8vu1M?si=b7b257Qu4Bty7OxA\"\u003ehttps://youtu.be/r2__Rw8vu1M?si=b7b257Qu4Bty7OxA\u003c/a\u003e\nI will focus on implementation.\u003c/p\u003e","title":"Concurrency in Swift"},{"content":"What are value types? Value types play a central role in programming languages by grouping data values.\n`Value type‚Äù is a type of data copied when assigned to a new variable.\nstruct Storage { var data: String = \u0026#34;some data\u0026#34; } let originalStorage = Storage() var copiedStorage = originalStorage // `originalStorage` is copied to `copiedStorage` How can you pass value types? You can pass value type by copying value.\nstruct Storage { var data: String = \u0026#34;some data\u0026#34; } let originalStorage = Storage() var copiedStorage = originalStorage // `originalStorage` is copied to `copiedStorage` copiedStorage.data = \u0026#34;new data\u0026#34; // Changes `copiedStorage`, not `originalStorage` print(\u0026#34;\\(originalStorage.data), \\(copiedStorage.data)\u0026#34;) // prints \u0026#34;some data, new data\u0026#34; The effect of assignment, initialization, and argument passing creates an independent instance with a unique copy of its data.\nWhat types are value types? Value types can be struct, enum, tuple.\nWhat data types are value types? Strings, Arrays, Dictionaries, Numbers, Booleans, Floating-point numbers, and Integers are all value types.\nHow value types are stored in memory? The value types use Stack data structure for memory management.\nWhat is Copy-on-write mechanism? The copy-on-write mechanism is a resource-management technique used to optimize value types performance. It improves performance by avoiding unnecessary copies of value types. If resource is duplicated but not modified it‚Äôs unnecessary to create new resource.\nWhen to use value types? Choose value types if you don‚Äôt have shared mutable state.\n","permalink":"http://localhost:1313/posts/what-are-value-types-in-swift/","summary":"\u003ch3 id=\"what-are-value-types\"\u003eWhat are value types?\u003c/h3\u003e\n\u003cp\u003eValue types play a central role in programming languages by grouping data values.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e`Value type‚Äù is a type of data copied when assigned to a new variable.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eStorage\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;some data\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eoriginalStorage\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eStorage\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ecopiedStorage\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eoriginalStorage\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// `originalStorage` is copied to `copiedStorage`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"how-can-you-pass-value-types\"\u003eHow can you pass value types?\u003c/h3\u003e\n\u003cp\u003eYou can pass value type by copying value.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eStorage\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;some data\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eoriginalStorage\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eStorage\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ecopiedStorage\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eoriginalStorage\u003c/span\u003e                        \u003cspan class=\"c1\"\u003e// `originalStorage` is copied to `copiedStorage`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ecopiedStorage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;new data\u0026#34;\u003c/span\u003e                            \u003cspan class=\"c1\"\u003e// Changes `copiedStorage`, not `originalStorage`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003eoriginalStorage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e, \u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003ecopiedStorage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// prints \u0026#34;some data, new data\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe effect of assignment, initialization, and argument passing creates an independent instance with a unique copy of its data.\u003c/p\u003e","title":"What are value types in Swift?"},{"content":"I was searching for tools that could help me find memory leaks faster and would be simple in implementation without affecting performance and memory size of application.\nI found a fantastic fit for this task LifetimeTracker developed by Krzysztof Zab≈Çocki.\nAll you need is to add LifetimeTracker package to the project, inherit from LifetimeTrackable protocol, and add two lines of code.\nclass Department: LifetimeTrackable {} trackLifetime method to init of instance that you are going to verify, and lifetimeConfiguration property where you set max number of valid instances.\nclass Department: LifetimeTrackable { static var lifetimeConfiguration = LifetimeConfiguration(maxCount: 1, groupName: \u0026#34;Department\u0026#34;) let name: String init(name: String) { self.name = name print(\u0026#34;\\(Self.self) is being initialized\u0026#34;) trackLifetime() } var employee: Employee? deinit { print(\u0026#34;\\(Self.self) is being deinitialized\u0026#34;) } } The final step is to add LifetimeTracker.setup to didFinishLaunchingWithOptions to be able to see Dashboard with detected issues.\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -\u0026gt; Bool { #if DEBUG LifetimeTracker.setup( onUpdate: LifetimeTrackerDashboardIntegration( visibility: .alwaysVisible, style: .bar, textColorForNoIssues: .systemGreen, textColorForLeakDetected: .systemRed ).refreshUI ) #else #endif return true } I hope this article will help you save time finding and debugging this tricky task :-).\n","permalink":"http://localhost:1313/posts/how-to-prevent-memory-leaks/","summary":"\u003cp\u003eI was searching for tools that could help me find memory leaks faster and would be simple in implementation without affecting performance and memory size of application.\u003c/p\u003e\n\u003cp\u003eI found a fantastic fit for this task \u003ca href=\"https://github.com/krzysztofzablocki/LifetimeTracker\"\u003e\u003ccode\u003eLifetimeTracker\u003c/code\u003e\u003c/a\u003e developed by \u003ca href=\"https://twitter.com/merowing_\"\u003eKrzysztof Zab≈Çocki\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAll you need is to add \u003ccode\u003eLifetimeTracker\u003c/code\u003e package to the project, inherit from \u003ccode\u003eLifetimeTrackable\u003c/code\u003e protocol, and add two lines of code.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDepartment\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eLifetimeTrackable\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003etrackLifetime\u003c/code\u003e method to \u003ccode\u003einit\u003c/code\u003e of instance that you are going to verify, and \u003ccode\u003elifetimeConfiguration\u003c/code\u003e property where you set max number of valid instances.\u003c/p\u003e","title":"How to prevent memory leaks?"},{"content":"The common way to find memory leaks is by using Xcode Instruments. All you need is the following:\nOpen Xcode Instruments\nChoose Leaks option Select Simulator where you are going to test your application Select your installed application When you finish preparation, you can start immediate recoding and check application for leaks. To do that, you need to open Simulator and try some cases that could cause memory leaks.\nAfter you spend some time trying different scenarios, you can see that Instruments found Leaked Objects. Another way to find memory leaks is by using Debug Memory Graph in Xcode Debug Area. Inside Debug Memory Graph, you can find MemoryLeaks section. MemoryLeaks section displays what objects have strong reference cycles between themselves.\nAll tools above have opportunity to find and highlight potential issues and help you resolve them.\n","permalink":"http://localhost:1313/posts/how-to-find-memory-leaks/","summary":"\u003cp\u003eThe common way to find memory leaks is by using Xcode Instruments.\nAll you need is the following:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eOpen Xcode Instruments\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eChoose Leaks option\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-3a9c2\" hidden\u003e\n    \u003clabel for=\"zoomCheck-3a9c2\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/1.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSelect Simulator where you are going to test your application\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-956ad\" hidden\u003e\n    \u003clabel for=\"zoomCheck-956ad\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/2.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSelect your installed application\n\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-1ab49\" hidden\u003e\n    \u003clabel for=\"zoomCheck-1ab49\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/3.jpg#center\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWhen you finish preparation, you can start immediate recoding and check application for leaks. To do that, you need to open Simulator and try some cases that could cause memory leaks.\u003c/p\u003e","title":"How to find memory leaks?"},{"content":"What is ARC? Swift uses Automatic Reference Counting (ARC) to track and manage your app‚Äôs memory usage. In most cases, this means that memory management ‚Äújust works‚Äù in Swift, and you don‚Äôt need to think about memory management yourself. ARC automatically frees up the memory used by class instances when those instances are no longer needed. - Apple\nARC In Action In this example, we assign an instance to the reference1 property.\nnumber of references equals 1. class Storage { let data: Data init(data: Data) { self.data = data print(\u0026#34;\\(Self.self) is being initialized\u0026#34;) } deinit { print(\u0026#34;\\(Self.self) is being deinitialized\u0026#34;) } } var reference1: Storage? var reference2: Storage? var reference3: Storage? reference1 = Storage(data: Data()) Now we can assign a reference to another two properties, reference2 and reference3. Whenever you assign a reference, you increase the counter.\nnumber of references equals 3. reference2 = reference1 reference3 = reference1 When you set reference2 and reference3 to nil, the number of references equals 1.\nreference2 = nil reference3 = nil Only when you set reference1 to nil object will be deinitialized.\nreference1 = nil Memory leaks Memory leaks appear when you have strong references between two instances that point to each other.\nIn this example, class Employee has optional department property, and class Department has optional employee property.\nclass Department { let name: String init(name: String) { self.name = name print(\u0026#34;\\(Self.self) is being initialized\u0026#34;) } var employee: Employee? deinit { print(\u0026#34;\\(Self.self) is being deinitialized\u0026#34;) } } class Employee { let name: String init(name: String) { self.name = name print(\u0026#34;\\(Self.self) is being initialized\u0026#34;) } var department: Department? deinit { print(\u0026#34;\\(Self.self) is being deinitialized\u0026#34;) } } var employee: Employee? var department: Department? employee = Employee(name: \u0026#34;John Doe\u0026#34;) department = Department(name: \u0026#34;Research and development\u0026#34;) If we try to assign Department reference to employee property and Employee reference to department property, it creates a memory leak by strong references that point to each other.\nemployee!.department = department department!.employee = employee If you try to set employee and department properties to nil, then these two objects can‚Äôt be deallocated because of the existing strong reference relationship between both objects.\nemployee = nil department = nil To avoid this unpleasant situation, we can use weak, unowned references.\nWeak reference If you use a weak keyword before a property, you say that this property should not keep a strong reference. Weak property should always be mutable and optional because ARC set the property to nil after the instance was deallocated.\nIn this example, Employee instance has department property with weak keyword. It means when we set employee property to nil ARC sets department property to nil and deallocates Department instance.\nclass Department { let name: String init(name: String) { self.name = name print(\u0026#34;\\(Self.self) is being initialized\u0026#34;) } var employee: Employee? deinit { print(\u0026#34;\\(Self.self) is being deinitialized\u0026#34;) } } class Employee { let name: String init(name: String) { self.name = name print(\u0026#34;\\(Self.self) is being initialized\u0026#34;) } weak var department: Department? deinit { print(\u0026#34;\\(Self.self) is being deinitialized\u0026#34;) } } var employee: Employee? var department: Department? employee = Employee(name: \u0026#34;John Doe\u0026#34;) department = Department(name: \u0026#34;Research and development\u0026#34;) employee!.department = department department!.employee = employee department = nil employee = nil Unowned reference Unowned reference can‚Äôt be optional, and it should always have value. If you try to access a deallocated property value, you will face a runtime error.\nIn this example, we have two instances: User and DiscountCard. DiscountCard has a relationship with the User that is marked as unowned to avoid a strong reference cycle.\nclass User { let name: String var discountCard: DiscountCard? init(name: String) { self.name = name } deinit { print(\u0026#34;\\(Self.self) is being deinitialized\u0026#34;) } } class DiscountCard { let number: UInt64 unowned let user: User init(number: UInt64, user: User) { self.number = number self.user = user } deinit { print(\u0026#34;\\(Self.self) is being deinitialized\u0026#34;) } } var user: User? user = User(name: \u0026#34;John Doe\u0026#34;) When you create DiscountCard instance and assign it as reference to user property, it no longer holds strong reference.\nuser!.discountCard = DiscountCard(number: 1234_5678_9012_3456, user: user!) After we set user property to nil, it will deallocate User and DiscountCard instances.\nuser = nil Strong Reference Cycles for Closures Strong reference cycle for closure can occur if you assign closure to property of instance. In this case, you assign reference to that closure. The strong reference cycle appears because closures are reference types.\nclass MemoryStorage { let text: String let additionalText: String? lazy var copy: () -\u0026gt; String = { if let additionalText = self.additionalText { self.text + \u0026#34;\\n\u0026#34; + additionalText } else { self.text } } init(text: String, additionalText: String? = nil) { self.text = text self.additionalText = additionalText } deinit { print(\u0026#34;\\(Self.self) is being deinitialized\u0026#34;) } } var memoryStorage: MemoryStorage? = MemoryStorage(text: \u0026#34;Thank you for registration\u0026#34;, additionalText: \u0026#34;John Doe\u0026#34;) print(memoryStorage!.copy()) memoryStorage = nil In this example, closure captures self.text property and create strong reference cycle by referencing to self.\nBreaking Strong Reference Cycle in Closure To break strong reference cycle, we need to add capture list with unowned keyword to copy closure.\nclass MemoryStorage { let text: String let additionalText: String? lazy var copy: () -\u0026gt; String = { [unowned self] in if let additionalText = self.additionalText { self.text + \u0026#34;\\n\u0026#34; + additionalText } else { self.text } } init(text: String, additionalText: String? = nil) { self.text = text self.additionalText = additionalText } deinit { print(\u0026#34;\\(Self.self) is being deinitialized\u0026#34;) } } var memoryStorage: MemoryStorage? = MemoryStorage(text: \u0026#34;Thank you for registration\u0026#34;, additionalText: \u0026#34;John Doe\u0026#34;) print(memoryStorage!.copy()) memoryStorage = nil ","permalink":"http://localhost:1313/posts/arc-in-swift/","summary":"\u003ch3 id=\"what-is-arc\"\u003eWhat is ARC?\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSwift uses Automatic Reference Counting (ARC) to track and manage your app‚Äôs memory usage. In most cases, this means that memory management ‚Äújust works‚Äù in Swift, and you don‚Äôt need to think about memory management yourself. ARC automatically frees up the memory used by class instances when those instances are no longer needed. - Apple\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"arc-in-action\"\u003eARC In Action\u003c/h3\u003e\n\u003cp\u003eIn this example, we assign an instance to the \u003ccode\u003ereference1\u003c/code\u003e property.\u003c/p\u003e","title":"ARC in Swift"},{"content":"Introduction In this article, I‚Äôm going to briefly explain what closure is.\nClosures is self-conitained blocks of funcionality that can be passed around and used in your code. ‚Äî Apple\nExpression:\n{ (params) -\u0026gt; return value in statements } @escaping When closure is marked as escaping, it will outlive or leave the scope you passed.\nfunc response(_ completionHandler: @escaping(Result) -\u0026gt; Void) { completionHandler(.success) } @nonescaping By default, closures are nonescaping, meaning closure will no longer exist in memory after complete execution in the scope you have passed it to.\nfunc filterImage(_ completionHandler: (Image) -\u0026gt; Void) { completionHandler(UIImage.filtered) } @autoclosure Autoclosures automatically create closure from the argument that you passed into a function.\nfunc animate(_ animation: @autoclosure @escaping () -\u0026gt; Void, duration: TimeInterval = 0.25) { UIView.animate(withDuration: duration, animations: animation) } Closure conceptualy looks like this first pointer points to the code that implements closure the second pointer pointed to the reference counted object.\nstruct Closure { var functionPointer: UnsafeRawPointer var closureContext: AnyObject? } ","permalink":"http://localhost:1313/posts/what-is-closure-in-swift-language/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eIn this article, I‚Äôm going to briefly explain what closure is.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eClosures is self-conitained blocks of funcionality that can be passed around and used in your code.\n‚Äî Apple\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eExpression:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003estatements\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"escaping\"\u003e@escaping\u003c/h3\u003e\n\u003cp\u003eWhen closure is marked as escaping, it will outlive or leave the scope you passed.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003e_\u003c/span\u003e \u003cspan class=\"n\"\u003ecompletionHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eescaping\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eResult\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eVoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"n\"\u003ecompletionHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e(.\u003c/span\u003e\u003cspan class=\"n\"\u003esuccess\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"nonescaping\"\u003e@nonescaping\u003c/h3\u003e\n\u003cp\u003eBy default, closures are nonescaping, meaning closure will no longer exist in memory after complete execution in the scope you have passed it to.\u003c/p\u003e","title":"What is closure in Swift language?"},{"content":"Introduction In Swift, classes, closures, and actors all reference types.\n\u0026lsquo;Reference type‚Äô is instance that shares a single copy of data.\nAssigning a reference type to a constant or variable, or passing it into a function or method, it is always a reference to a shared instance that is assigned or passed in.\nExample You can pass your property value by sharing the same address in memory.\n// Reference type example class Storage { var data = ‚Äúdata-example‚Äù } var storage = Storage() print(\u0026#34;\\(storage.data)\u0026#34;) // prints \u0026#34;data-example\u0026#34; print(\u0026#34;storage address:\u0026#34;, Unmanaged.passUnretained(storage).toOpaque()) var copiedStorage = storage copiedStorage.data = ‚Äúnew-data‚Äù print(\u0026#34;\\(storage.data), \\(copiedStorage.data)\u0026#34;) // prints \u0026#34;new-data, new-data\u0026#34; print(\u0026#34;copiedStorage address:\u0026#34;, Unmanaged.passUnretained(copiedStorage).toOpaque()) As you can see, storage and copied storage property addresses are the same.\nSummary Copying data by reference refers to the same address in memory. This means that modifying data in one variable also affects another. It also means that multiple reference types may refer to the same object.\n","permalink":"http://localhost:1313/posts/what-is-reference-type-in-swift/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eIn Swift, classes, closures, and actors all reference types.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026lsquo;Reference type‚Äô is instance that shares a single copy of data.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAssigning a reference type to a constant or variable, or passing it into a function or method, it is always a reference to a shared instance that is assigned or passed in.\u003c/p\u003e\n\u003ch3 id=\"example\"\u003eExample\u003c/h3\u003e\n\u003cp\u003eYou can pass your property value by sharing the same address in memory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// Reference type example\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eStorage\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"err\"\u003e‚Äú\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eexample\u003c/span\u003e\u003cspan class=\"err\"\u003e‚Äù\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003estorage\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eStorage\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003estorage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// prints \u0026#34;data-example\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;storage address:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eUnmanaged\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epassUnretained\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estorage\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003etoOpaque\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ecopiedStorage\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estorage\u003c/span\u003e      \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ecopiedStorage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"err\"\u003e‚Äú\u003c/span\u003e\u003cspan class=\"n\"\u003enew\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"err\"\u003e‚Äù\u003c/span\u003e      \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003estorage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e, \u003c/span\u003e\u003cspan class=\"si\"\u003e\\(\u003c/span\u003e\u003cspan class=\"n\"\u003ecopiedStorage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// prints \u0026#34;new-data, new-data\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"bp\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;copiedStorage address:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eUnmanaged\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epassUnretained\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecopiedStorage\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003etoOpaque\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\n    \n    \u003cinput type=\"checkbox\" id=\"zoomCheck-c7d1a\" hidden\u003e\n    \u003clabel for=\"zoomCheck-c7d1a\"\u003e\n        \u003cimg class=\"zoomCheck\" loading=\"lazy\" decoding=\"async\" \n            src=\"images/5.jpg\" alt=\"alt image\" \n             /\u003e\n    \u003c/label\u003e\n\u003c/p\u003e","title":"What is ‚Äúreference type‚Äù in Swift?"},{"content":"Introduction The Composable Architecture (TCA) uses a unidirectional data flow (UDF). UDF is a design pattern where data and events move consistently and predictably. In UDF, data can only be transferred to other application parts in one way.\nIn TCA, the only way to mutate the state is by sending actions to a runtime store. The runtime store holds the entire app‚Äôs business logic and mutates the state inside.\nUDF can reduce data inconsistencies because of the single source of truth for the application.\nTCA is built around key components: Action State Reducer Effect Store Environment Code examples: Timer\nhttps://github.com/dmytrochumakov/TCA-Examples/tree/main/Timer/Timer/Timer Sources: https://github.com/pointfreeco/swift-composable-architecture https://www.youtube.com/watch?v=SfFDj6qT-xg\u0026ab_channel=SwiftandTips https://www.youtube.com/watch?v=XWZmgbylTpc\u0026ab_channel=SwiftHeroes https://www.youtube.com/watch?v=McmGb9sexMo\u0026ab_channel=SwiftandTips https://www.youtube.com/watch?v=McmGb9sexMo\u0026ab_channel=SwiftandTips https://markvillar.com/the-composable-architecture/ ","permalink":"http://localhost:1313/posts/lets-talk-about-composable-architecture/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eThe Composable Architecture (TCA) uses a unidirectional data flow (UDF).\nUDF is a design pattern where data and events move consistently and predictably. In UDF, data can only be transferred to other application parts in one way.\u003c/p\u003e\n\u003cp\u003eIn TCA, the only way to mutate the state is by sending actions to a runtime store. The runtime store holds the entire app‚Äôs business logic and mutates the state inside.\u003c/p\u003e\n\u003cp\u003eUDF can reduce data inconsistencies because of the single source of truth for the application.\u003c/p\u003e","title":"Let‚Äôs talk about Composable Architecture"},{"content":" Hi! I'm Dmytro Chumakov.\nHighly skilled iOS Developer with extensive experience in developing, and testing mobile application projects.\nProficient in Swift, Objective-C, and SwiftUI, with a strong foundation in modern software engineering practices.\nKnown for enhancing application performance, and automating repetitive tasks.\nMy Values Innovation: I consistently seek innovative solutions, leveraging modern technologies and creative thinking to stay ahead of the curve.\nEfficiency: My focus on streamlining processes and maximizing productivity underscores my commitment to efficiency in every aspect of my work.\nQuality: I am dedicated to delivering high-quality products, ensuring excellence through thorough testing, documentation, and performance optimization.\nUser-Centricity: My development approach prioritizes user needs and experience, crafting applications that prioritize safety, interaction, and functionality.\nContinuous Learning: I actively pursue ongoing learning and skill development, staying updated with the latest industry trends and technologies.\nCollaboration: I thrive in collaborative environments, leveraging leadership skills to drive teamwork and achieve collective success in project delivery.\nCommunity Engagement: I am passionate about sharing knowledge and contributing to the developer community through technical posts and videos, fostering growth and learning for others.\n","permalink":"http://localhost:1313/about/","summary":"Information about me.","title":"About Me"},{"content":" ","permalink":"http://localhost:1313/newsletter/","summary":"newsletter","title":"Newsletter"}]