<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Implementing on Dmytro&#39;s Blog</title>
    <link>http://localhost:1313/tags/implementing/</link>
    <description>Recent content in Implementing on Dmytro&#39;s Blog</description>
    <image>
      <title>Dmytro&#39;s Blog</title>
      <url>http://localhost:1313/images/papermod-cover.png</url>
      <link>http://localhost:1313/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.123.3</generator>
    <language>en</language>
    <lastBuildDate>Tue, 23 Jul 2024 07:04:25 +0300</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/implementing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Implementing Location Service</title>
      <link>http://localhost:1313/posts/implementing-location-service/</link>
      <pubDate>Tue, 23 Jul 2024 07:04:25 +0300</pubDate>
      <guid>http://localhost:1313/posts/implementing-location-service/</guid>
      <description>Introduction Nowadays, location is an essential feature in almost every application. It&amp;rsquo;s very important to know the best ways to implement it without affecting performance and user experience. In this article, I will focus on how to implement general methods in location service.
Preparation Before we begin, let&amp;rsquo;s add location permission keys to Info.plist:
Privacy - Location When In Use Usage Description Privacy - Location Always and When In Use Usage Description First Step The first step is to create LocationService with the requestPermissions method to be able to receive location events.</description>
    </item>
    <item>
      <title>Implementing ChatGPT in an iOS App</title>
      <link>http://localhost:1313/posts/implementing-chatgpt-in-an-ios-app/</link>
      <pubDate>Sun, 21 Jul 2024 07:25:28 +0300</pubDate>
      <guid>http://localhost:1313/posts/implementing-chatgpt-in-an-ios-app/</guid>
      <description>Introduction I haven&amp;rsquo;t had the opportunity to build a chatbot before. This topic was trending some time ago, and I always wanted to implement it myself. In this article, I will focus on the steps you need to know to successfully build and run a chatbot application.
First Step The first step is to add the OpenAI dependency to your project:
.package(url: &amp;#34;https://github.com/MacPaw/OpenAI.git&amp;#34;, branch: &amp;#34;main&amp;#34;) dependencies: [ .byNameItem( name: &amp;#34;OpenAI&amp;#34;, condition: .</description>
    </item>
    <item>
      <title>Implementing Apple Sign-In to an iOS App</title>
      <link>http://localhost:1313/posts/implementing-apple-sign-in-to-an-ios-app/</link>
      <pubDate>Thu, 18 Jul 2024 07:26:13 +0300</pubDate>
      <guid>http://localhost:1313/posts/implementing-apple-sign-in-to-an-ios-app/</guid>
      <description>Introduction The Apple Sign-In feature is very helpful and offers users login functionality with one click. It could be highly beneficial from a business perspective to attract more potential customers by providing easy and secure access to application functionality. In this article, I will focus on how to implement Apple Sign-In.
Before implementation, let’s set up the necessary options to be able to run the app without errors.
Add Sign in with Apple Capability to the project &amp;#x1f4dd; Before testing on the simulator, you need to be signed in to an account with enabled two-factor authentication.</description>
    </item>
    <item>
      <title>Implementing gRPC Swift</title>
      <link>http://localhost:1313/posts/implementing-grpc-swift/</link>
      <pubDate>Tue, 16 Jul 2024 07:16:41 +0300</pubDate>
      <guid>http://localhost:1313/posts/implementing-grpc-swift/</guid>
      <description>Introduction I&amp;rsquo;ve never had the chance to use this technology before. I&amp;rsquo;ve always wondered how gRPC operates. In this article, I will explore what gRPC is, how to install and use it, and when to use gRPC.
What is gRPC? gRPC is an open-source, high-performance framework that facilitates efficient communication in distributed systems. gRPC is an implementation of the RPC (Remote Procedure Call) protocol, which enables services to call functions on other machines as if they were local software methods.</description>
    </item>
    <item>
      <title>Implementing GraphQL in an iOS application</title>
      <link>http://localhost:1313/posts/implementing-graphql-in-an-ios-application/</link>
      <pubDate>Wed, 15 May 2024 07:13:39 +0300</pubDate>
      <guid>http://localhost:1313/posts/implementing-graphql-in-an-ios-application/</guid>
      <description>Introduction I previously never had a chance to work with GraphQL. I was excited to learn when to apply this technology, what tools I can use, and how I can implement it. Here’s what I found:
For testing, I used the Star Wars GraphQL API with AllFilmsQuery:
query AllFilmsQuery { allFilms { films { title director created producers releaseDate } } } I requested allFilms with title, director, created, producers, and releaseDate information.</description>
    </item>
    <item>
      <title>Implementing In-App Purchases to SwiftUI app using StoreKit 2</title>
      <link>http://localhost:1313/posts/implementing-in-app-purchases-to-swiftui-app-using-storekit-2/</link>
      <pubDate>Sun, 12 May 2024 07:57:51 +0300</pubDate>
      <guid>http://localhost:1313/posts/implementing-in-app-purchases-to-swiftui-app-using-storekit-2/</guid>
      <description>Introduction I was wondering how to add in-app purchases to my app. I chose non-consumable in-app purchase because you can pay one time for this item. Here are a few steps on how I did it.
First Step Set up In-App Purchases for your app in App Store Connect account or add a .storekit configuration file and start from there. If you&amp;rsquo;ve already set up In-App Purchases in your account, you can sync the StoreKit config with that data.</description>
    </item>
    <item>
      <title>Implementing Apple Pay in a SwiftUI app</title>
      <link>http://localhost:1313/posts/implementing-apple-pay-in-a-swiftui-app/</link>
      <pubDate>Sat, 11 May 2024 07:25:24 +0300</pubDate>
      <guid>http://localhost:1313/posts/implementing-apple-pay-in-a-swiftui-app/</guid>
      <description>Introduction Sometime ago, I was working on a marketplace app, and I needed to add Apple Pay to make purchases more easily. Here are a few steps on how I did it: First Step You need to add Apple Pay capability to your project. You will need to Register a Merchant ID. I will skip this step; you can find info by following this link Setting up Apple Pay. Second Step You will need to import PassKit and create PKPaymentRequest to interact with PKPaymentAuthorizationController and PKPaymentAuthorizationControllerDelegate.</description>
    </item>
  </channel>
</rss>
