<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Integration Testing on Dmytro&#39;s Blog</title>
    <link>http://localhost:1313/tags/integration-testing/</link>
    <description>Recent content in Integration Testing on Dmytro&#39;s Blog</description>
    <image>
      <title>Dmytro&#39;s Blog</title>
      <url>http://localhost:1313/images/papermod-cover.png</url>
      <link>http://localhost:1313/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.123.3</generator>
    <language>en</language>
    <lastBuildDate>Fri, 10 May 2024 06:20:50 +0300</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/integration-testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Integration testing for SwiftUI views</title>
      <link>http://localhost:1313/posts/integration-testing-for-swiftui-views/</link>
      <pubDate>Fri, 10 May 2024 06:20:50 +0300</pubDate>
      <guid>http://localhost:1313/posts/integration-testing-for-swiftui-views/</guid>
      <description>Introduction I have been looking for information about implementation details of integration testing. I found a lot of information, but it was theoretical and all information looked the same. I did not find a meaningful example, so I tried to come up with my own definition and sample.
Integration testing means testing the behavior between modules or views to ensure they work as expected after user actions.
There are two ways of conducting integration testing: The first is by unit tests, where you try to test the flowing data between view models.</description>
    </item>
  </channel>
</rss>
