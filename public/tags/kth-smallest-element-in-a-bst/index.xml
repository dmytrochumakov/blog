<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Kth Smallest Element in a BST on Dmytro&#39;s Blog</title>
    <link>http://localhost:1313/tags/kth-smallest-element-in-a-bst/</link>
    <description>Recent content in Kth Smallest Element in a BST on Dmytro&#39;s Blog</description>
    <image>
      <title>Dmytro&#39;s Blog</title>
      <url>http://localhost:1313/images/papermod-cover.png</url>
      <link>http://localhost:1313/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.147.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 20 Jan 2025 08:49:50 +0300</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/kth-smallest-element-in-a-bst/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode - Blind 75 - Kth Smallest Element in a BST</title>
      <link>http://localhost:1313/posts/leetcode-blind-75-kth-smallest-element-in-a-bst/</link>
      <pubDate>Mon, 20 Jan 2025 08:49:50 +0300</pubDate>
      <guid>http://localhost:1313/posts/leetcode-blind-75-kth-smallest-element-in-a-bst/</guid>
      <description>&lt;h3 id=&#34;the-problem&#34;&gt;The Problem&lt;/h3&gt;
&lt;p&gt;Given the &lt;code&gt;root&lt;/code&gt; of a binary search tree and an integer &lt;code&gt;k&lt;/code&gt;, return the &lt;code&gt;kth&lt;/code&gt; smallest value (1-indexed) among all the values of the nodes in the tree.&lt;/p&gt;
&lt;h4 id=&#34;examples&#34;&gt;Examples&lt;/h4&gt;
&lt;p&gt;
    
    &lt;input type=&#34;checkbox&#34; id=&#34;zoomCheck-6ddd2&#34; hidden&gt;
    &lt;label for=&#34;zoomCheck-6ddd2&#34;&gt;
        &lt;img class=&#34;zoomCheck&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34; 
            src=&#34;images/kthtree1.jpg#center&#34; alt=&#34;alt image&#34; 
             /&gt;
    &lt;/label&gt;
&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Input: root = [3,1,4,null,2], k = 1
Output: 1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;
    
    &lt;input type=&#34;checkbox&#34; id=&#34;zoomCheck-e4401&#34; hidden&gt;
    &lt;label for=&#34;zoomCheck-e4401&#34;&gt;
        &lt;img class=&#34;zoomCheck&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34; 
            src=&#34;images/kthtree2.jpg#center&#34; alt=&#34;alt image&#34; 
             /&gt;
    &lt;/label&gt;
&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Input: root = [5,3,6,2,4,null,null,1], k = 3
Output: 3
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;constraints&#34;&gt;Constraints&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The number of nodes in the tree is &lt;code&gt;n&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;1 &amp;lt;= k &amp;lt;= n &amp;lt;= 10⁴&lt;/li&gt;
&lt;li&gt;0 &amp;lt;= Node.val &amp;lt;= 10⁴&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Follow-up:&lt;/strong&gt; If the BST is modified often (i.e., we can perform insert and delete operations) and you need to find the &lt;code&gt;kth&lt;/code&gt; smallest element frequently, how would you optimize?&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
