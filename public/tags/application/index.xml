<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Application on Dmytro&#39;s Blog</title>
    <link>http://localhost:1313/tags/application/</link>
    <description>Recent content in Application on Dmytro&#39;s Blog</description>
    <image>
      <title>Dmytro&#39;s Blog</title>
      <url>http://localhost:1313/images/papermod-cover.png</url>
      <link>http://localhost:1313/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.123.3</generator>
    <language>en</language>
    <lastBuildDate>Wed, 15 May 2024 07:13:39 +0300</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/application/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Implementing GraphQL in an iOS application</title>
      <link>http://localhost:1313/posts/implementing-graphql-in-an-ios-application/</link>
      <pubDate>Wed, 15 May 2024 07:13:39 +0300</pubDate>
      <guid>http://localhost:1313/posts/implementing-graphql-in-an-ios-application/</guid>
      <description>Introduction I previously never had a chance to work with GraphQL. I was excited to learn when to apply this technology, what tools I can use, and how I can implement it. Hereâ€™s what I found:
For testing, I used the Star Wars GraphQL API with AllFilmsQuery:
query AllFilmsQuery { allFilms { films { title director created producers releaseDate } } } I requested allFilms with title, director, created, producers, and releaseDate information.</description>
    </item>
  </channel>
</rss>
